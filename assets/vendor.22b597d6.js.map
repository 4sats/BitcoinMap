{"version":3,"file":"vendor.22b597d6.js","sources":["../../node_modules/ol/events/Event.js","../../node_modules/ol/ObjectEventType.js","../../node_modules/ol/Disposable.js","../../node_modules/ol/array.js","../../node_modules/ol/functions.js","../../node_modules/ol/obj.js","../../node_modules/ol/events/Target.js","../../node_modules/ol/events/EventType.js","../../node_modules/ol/events.js","../../node_modules/ol/Observable.js","../../node_modules/ol/util.js","../../node_modules/ol/Object.js","../../node_modules/ol/AssertionError.js","../../node_modules/ol/asserts.js","../../node_modules/ol/Feature.js","../../node_modules/ol/style/Fill.js","../../node_modules/ol/proj/Units.js","../../node_modules/ol/has.js","../../node_modules/ol/transform.js","../../node_modules/ol/extent/Corner.js","../../node_modules/ol/extent/Relationship.js","../../node_modules/ol/extent.js","../../node_modules/ol/proj/Projection.js","../../node_modules/ol/math.js","../../node_modules/ol/proj/epsg3857.js","../../node_modules/ol/proj/epsg4326.js","../../node_modules/ol/proj/projections.js","../../node_modules/ol/proj/transforms.js","../../node_modules/ol/geom/GeometryType.js","../../node_modules/ol/sphere.js","../../node_modules/ol/coordinate.js","../../node_modules/ol/proj.js","../../node_modules/ol/geom/flat/transform.js","../../node_modules/ol/geom/Geometry.js","../../node_modules/ol/geom/GeometryCollection.js","../../node_modules/ol/geom/GeometryLayout.js","../../node_modules/ol/style/IconAnchorUnits.js","../../node_modules/ol/style/IconOrigin.js","../../node_modules/ol/ImageState.js","../../node_modules/ol/size.js","../../node_modules/ol/style/Image.js","../../node_modules/ol/color.js","../../node_modules/ol/dom.js","../../node_modules/ol/style/IconImageCache.js","../../node_modules/ol/ImageBase.js","../../node_modules/ol/Image.js","../../node_modules/ol/style/IconImage.js","../../node_modules/ol/style/Icon.js","../../node_modules/ol/geom/SimpleGeometry.js","../../node_modules/ol/geom/flat/closest.js","../../node_modules/ol/geom/flat/deflate.js","../../node_modules/ol/geom/flat/simplify.js","../../node_modules/ol/geom/flat/segments.js","../../node_modules/ol/geom/flat/inflate.js","../../node_modules/ol/geom/flat/interpolate.js","../../node_modules/ol/geom/flat/contains.js","../../node_modules/ol/geom/flat/intersectsextent.js","../../node_modules/ol/geom/flat/length.js","../../node_modules/ol/geom/LineString.js","../../node_modules/ol/geom/MultiLineString.js","../../node_modules/ol/geom/Point.js","../../node_modules/ol/geom/MultiPoint.js","../../node_modules/ol/geom/flat/area.js","../../node_modules/ol/geom/LinearRing.js","../../node_modules/ol/geom/flat/interiorpoint.js","../../node_modules/ol/geom/flat/reverse.js","../../node_modules/ol/geom/flat/orient.js","../../node_modules/ol/geom/Polygon.js","../../node_modules/ol/geom/flat/center.js","../../node_modules/ol/geom/MultiPolygon.js","../../node_modules/ol/style/Stroke.js","../../node_modules/ol/colorlike.js","../../node_modules/ol/css.js","../../node_modules/ol/render/canvas.js","../../node_modules/ol/style/RegularShape.js","../../node_modules/ol/style/Circle.js","../../node_modules/ol/style/Style.js","../../node_modules/ol/style/TextPlacement.js","../../node_modules/ol/style/Text.js","../../node_modules/ol/format/Feature.js","../../node_modules/ol/format/FormatType.js","../../node_modules/ol/xml.js","../../node_modules/ol/format/XMLFeature.js","../../node_modules/ol/format/xsd.js","../../node_modules/ol/format/KML.js","../../node_modules/ol/layer/Property.js","../../node_modules/ol/layer/Base.js","../../node_modules/ol/render/EventType.js","../../node_modules/ol/source/State.js","../../node_modules/ol/layer/Layer.js","../../node_modules/ol/renderer/Map.js","../../node_modules/ol/render/Event.js","../../node_modules/ol/renderer/Composite.js","../../node_modules/ol/CollectionEventType.js","../../node_modules/ol/Collection.js","../../node_modules/ol/layer/Group.js","../../node_modules/ol/MapEvent.js","../../node_modules/ol/MapBrowserEvent.js","../../node_modules/ol/MapBrowserEventType.js","../../node_modules/ol/pointer/EventType.js","../../node_modules/ol/MapBrowserEventHandler.js","../../node_modules/ol/MapEventType.js","../../node_modules/ol/MapProperty.js","../../node_modules/ol/structs/PriorityQueue.js","../../node_modules/ol/TileState.js","../../node_modules/ol/TileQueue.js","../../node_modules/ol/ViewHint.js","../../node_modules/ol/ViewProperty.js","../../node_modules/ol/tilegrid/common.js","../../node_modules/ol/centerconstraint.js","../../node_modules/ol/resolutionconstraint.js","../../node_modules/ol/rotationconstraint.js","../../node_modules/ol/easing.js","../../node_modules/ol/View.js","../../node_modules/ol/PluggableMap.js","../../node_modules/ol/control/Control.js","../../node_modules/ol/control/Attribution.js","../../node_modules/ol/control/Rotate.js","../../node_modules/ol/control/Zoom.js","../../node_modules/ol/control.js","../../node_modules/ol/interaction/Property.js","../../node_modules/ol/interaction/Interaction.js","../../node_modules/ol/interaction/DoubleClickZoom.js","../../node_modules/ol/interaction/Pointer.js","../../node_modules/ol/events/condition.js","../../node_modules/ol/interaction/DragPan.js","../../node_modules/ol/interaction/DragRotate.js","../../node_modules/ol/render/Box.js","../../node_modules/ol/interaction/DragBox.js","../../node_modules/ol/interaction/DragZoom.js","../../node_modules/ol/events/KeyCode.js","../../node_modules/ol/interaction/KeyboardPan.js","../../node_modules/ol/interaction/KeyboardZoom.js","../../node_modules/ol/Kinetic.js","../../node_modules/ol/interaction/MouseWheelZoom.js","../../node_modules/ol/interaction/PinchRotate.js","../../node_modules/ol/interaction/PinchZoom.js","../../node_modules/quickselect/index.js","../../node_modules/rbush/index.js","../../node_modules/ol/layer/BaseVector.js","../../node_modules/ol/render/canvas/Instruction.js","../../node_modules/ol/render/VectorContext.js","../../node_modules/ol/render/canvas/Builder.js","../../node_modules/ol/render/canvas/ImageBuilder.js","../../node_modules/ol/render/canvas/LineStringBuilder.js","../../node_modules/ol/render/canvas/PolygonBuilder.js","../../node_modules/ol/geom/flat/straightchunk.js","../../node_modules/ol/render/canvas/TextBuilder.js","../../node_modules/ol/render/canvas/BuilderGroup.js","../../node_modules/ol/renderer/Layer.js","../../node_modules/ol/renderer/canvas/Layer.js","../../node_modules/ol/render/canvas/BuilderType.js","../../node_modules/ol/geom/flat/textpath.js","../../node_modules/ol/render/canvas/Executor.js","../../node_modules/ol/render/canvas/ExecutorGroup.js","../../node_modules/ol/render/canvas/Immediate.js","../../node_modules/ol/render/canvas/hitdetect.js","../../node_modules/ol/renderer/vector.js","../../node_modules/ol/renderer/canvas/VectorLayer.js","../../node_modules/ol/layer/Vector.js","../../node_modules/ol/structs/RBush.js","../../node_modules/ol/source/Source.js","../../node_modules/ol/source/VectorEventType.js","../../node_modules/ol/loadingstrategy.js","../../node_modules/ol/featureloader.js","../../node_modules/ol/source/Vector.js","../../node_modules/ol/interaction.js","../../node_modules/ol/Map.js","../../node_modules/ol/Tile.js","../../node_modules/ol/ImageTile.js","../../node_modules/ol/reproj/common.js","../../node_modules/ol/reproj/Triangulation.js","../../node_modules/ol/source/common.js","../../node_modules/ol/reproj.js","../../node_modules/ol/reproj/Tile.js","../../node_modules/ol/structs/LRUCache.js","../../node_modules/ol/tilecoord.js","../../node_modules/ol/TileCache.js","../../node_modules/ol/source/TileEventType.js","../../node_modules/ol/TileRange.js","../../node_modules/ol/tilegrid/TileGrid.js","../../node_modules/ol/tilegrid.js","../../node_modules/ol/source/Tile.js","../../node_modules/ol/tileurlfunction.js","../../node_modules/ol/source/UrlTile.js","../../node_modules/ol/source/TileImage.js","../../node_modules/ol/source/XYZ.js","../../node_modules/ol/source/OSM.js","../../node_modules/ol/source/Stamen.js","../../node_modules/ol/renderer/canvas/TileLayer.js","../../node_modules/ol/layer/TileProperty.js","../../node_modules/ol/layer/BaseTile.js","../../node_modules/ol/layer/Tile.js"],"sourcesContent":["/**\n * @module ol/events/Event\n */\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar BaseEvent = /** @class */ (function () {\n    /**\n     * @param {string} type Type.\n     */\n    function BaseEvent(type) {\n        /**\n         * @type {boolean}\n         */\n        this.propagationStopped;\n        /**\n         * @type {boolean}\n         */\n        this.defaultPrevented;\n        /**\n         * The event type.\n         * @type {string}\n         * @api\n         */\n        this.type = type;\n        /**\n         * The event target.\n         * @type {Object}\n         * @api\n         */\n        this.target = null;\n    }\n    /**\n     * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n     * will be fired.\n     * @api\n     */\n    BaseEvent.prototype.preventDefault = function () {\n        this.defaultPrevented = true;\n    };\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    BaseEvent.prototype.stopPropagation = function () {\n        this.propagationStopped = true;\n    };\n    return BaseEvent;\n}());\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n    evt.stopPropagation();\n}\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n    evt.preventDefault();\n}\nexport default BaseEvent;\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/ObjectEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a property is changed.\n     * @event module:ol/Object.ObjectEvent#propertychange\n     * @api\n     */\n    PROPERTYCHANGE: 'propertychange',\n};\n/**\n * @typedef {'propertychange'} Types\n */\n//# sourceMappingURL=ObjectEventType.js.map","/**\n * @module ol/Disposable\n */\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = /** @class */ (function () {\n    function Disposable() {\n        /**\n         * The object has already been disposed.\n         * @type {boolean}\n         * @protected\n         */\n        this.disposed = false;\n    }\n    /**\n     * Clean up.\n     */\n    Disposable.prototype.dispose = function () {\n        if (!this.disposed) {\n            this.disposed = true;\n            this.disposeInternal();\n        }\n    };\n    /**\n     * Extension point for disposable objects.\n     * @protected\n     */\n    Disposable.prototype.disposeInternal = function () { };\n    return Disposable;\n}());\nexport default Disposable;\n//# sourceMappingURL=Disposable.js.map","/**\n * @module ol/array\n */\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [opt_comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n    var mid, cmp;\n    var comparator = opt_comparator || numberSafeCompareFunction;\n    var low = 0;\n    var high = haystack.length;\n    var found = false;\n    while (low < high) {\n        /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n         * to double (which gives the wrong results). */\n        mid = low + ((high - low) >> 1);\n        cmp = +comparator(haystack[mid], needle);\n        if (cmp < 0.0) {\n            /* Too low. */\n            low = mid + 1;\n        }\n        else {\n            /* Key found or too high */\n            high = mid;\n            found = !cmp;\n        }\n    }\n    /* Key not found. */\n    return found ? low : ~low;\n}\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n}\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n    return arr.indexOf(obj) >= 0;\n}\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n    var n = arr.length;\n    if (arr[0] <= target) {\n        return 0;\n    }\n    else if (target <= arr[n - 1]) {\n        return n - 1;\n    }\n    else {\n        var i = void 0;\n        if (direction > 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] < target) {\n                    return i - 1;\n                }\n            }\n        }\n        else if (direction < 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] <= target) {\n                    return i;\n                }\n            }\n        }\n        else {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] == target) {\n                    return i;\n                }\n                else if (arr[i] < target) {\n                    if (typeof direction === 'function') {\n                        if (direction(target, arr[i - 1], arr[i]) > 0) {\n                            return i - 1;\n                        }\n                        else {\n                            return i;\n                        }\n                    }\n                    else if (arr[i - 1] - target < target - arr[i]) {\n                        return i - 1;\n                    }\n                    else {\n                        return i;\n                    }\n                }\n            }\n        }\n        return n - 1;\n    }\n}\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n    while (begin < end) {\n        var tmp = arr[begin];\n        arr[begin] = arr[end];\n        arr[end] = tmp;\n        ++begin;\n        --end;\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n    var extension = Array.isArray(data) ? data : [data];\n    var length = extension.length;\n    for (var i = 0; i < length; i++) {\n        arr[arr.length] = extension[i];\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n    var i = arr.indexOf(obj);\n    var found = i > -1;\n    if (found) {\n        arr.splice(i, 1);\n    }\n    return found;\n}\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n    var length = arr.length >>> 0;\n    var value;\n    for (var i = 0; i < length; i++) {\n        value = arr[i];\n        if (func(value, i, arr)) {\n            return value;\n        }\n    }\n    return null;\n}\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n    var len1 = arr1.length;\n    if (len1 !== arr2.length) {\n        return false;\n    }\n    for (var i = 0; i < len1; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n    var length = arr.length;\n    var tmp = Array(arr.length);\n    var i;\n    for (i = 0; i < length; i++) {\n        tmp[i] = { index: i, value: arr[i] };\n    }\n    tmp.sort(function (a, b) {\n        return compareFnc(a.value, b.value) || a.index - b.index;\n    });\n    for (i = 0; i < arr.length; i++) {\n        arr[i] = tmp[i].value;\n    }\n}\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n    var index;\n    var found = !arr.every(function (el, idx) {\n        index = idx;\n        return !func(el, idx, arr);\n    });\n    return found ? index : -1;\n}\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [opt_func] Comparison function.\n * @param {boolean} [opt_strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n    var compare = opt_func || numberSafeCompareFunction;\n    return arr.every(function (currentVal, index) {\n        if (index === 0) {\n            return true;\n        }\n        var res = compare(arr[index - 1], currentVal);\n        return !(res > 0 || (opt_strict && res === 0));\n    });\n}\n//# sourceMappingURL=array.js.map","/**\n * @module ol/functions\n */\nimport { equals as arrayEquals } from './array.js';\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n    return true;\n}\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n    return false;\n}\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() { }\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n    var called = false;\n    /** @type {ReturnType} */\n    var lastResult;\n    /** @type {Array<any>} */\n    var lastArgs;\n    var lastThis;\n    return function () {\n        var nextArgs = Array.prototype.slice.call(arguments);\n        if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n            called = true;\n            lastThis = this;\n            lastArgs = nextArgs;\n            lastResult = fn.apply(this, arguments);\n        }\n        return lastResult;\n    };\n}\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/obj\n */\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n        var output = Object(target);\n        for (var i = 1, ii = arguments.length; i < ii; ++i) {\n            var source = arguments[i];\n            if (source !== undefined && source !== null) {\n                for (var key in source) {\n                    if (source.hasOwnProperty(key)) {\n                        output[key] = source[key];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n    for (var property in object) {\n        delete object[property];\n    }\n}\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport var getValues = typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        var values = [];\n        for (var property in object) {\n            values.push(object[property]);\n        }\n        return values;\n    };\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n    var property;\n    for (property in object) {\n        return false;\n    }\n    return !property;\n}\n//# sourceMappingURL=obj.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport { VOID } from '../functions.js';\nimport { clear } from '../obj.js';\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /** @class */ (function (_super) {\n    __extends(Target, _super);\n    /**\n     * @param {*} [opt_target] Default event target for dispatched events.\n     */\n    function Target(opt_target) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {*}\n         */\n        _this.eventTarget_ = opt_target;\n        /**\n         * @private\n         * @type {Object<string, number>}\n         */\n        _this.pendingRemovals_ = null;\n        /**\n         * @private\n         * @type {Object<string, number>}\n         */\n        _this.dispatching_ = null;\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n         */\n        _this.listeners_ = null;\n        return _this;\n    }\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").Listener} listener Listener.\n     */\n    Target.prototype.addEventListener = function (type, listener) {\n        if (!type || !listener) {\n            return;\n        }\n        var listeners = this.listeners_ || (this.listeners_ = {});\n        var listenersForType = listeners[type] || (listeners[type] = []);\n        if (listenersForType.indexOf(listener) === -1) {\n            listenersForType.push(listener);\n        }\n    };\n    /**\n     * Dispatches an event and calls all listeners listening for events\n     * of this type. The event parameter can either be a string or an\n     * Object with a `type` property.\n     *\n     * @param {import(\"./Event.js\").default|string} event Event object.\n     * @return {boolean|undefined} `false` if anyone called preventDefault on the\n     *     event object or if any of the listeners returned false.\n     * @api\n     */\n    Target.prototype.dispatchEvent = function (event) {\n        /** @type {import(\"./Event.js\").default|Event} */\n        var evt = typeof event === 'string' ? new Event(event) : event;\n        var type = evt.type;\n        if (!evt.target) {\n            evt.target = this.eventTarget_ || this;\n        }\n        var listeners = this.listeners_ && this.listeners_[type];\n        var propagate;\n        if (listeners) {\n            var dispatching = this.dispatching_ || (this.dispatching_ = {});\n            var pendingRemovals = this.pendingRemovals_ || (this.pendingRemovals_ = {});\n            if (!(type in dispatching)) {\n                dispatching[type] = 0;\n                pendingRemovals[type] = 0;\n            }\n            ++dispatching[type];\n            for (var i = 0, ii = listeners.length; i < ii; ++i) {\n                if ('handleEvent' in listeners[i]) {\n                    propagate = /** @type {import(\"../events.js\").ListenerObject} */ (listeners[i]).handleEvent(evt);\n                }\n                else {\n                    propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (listeners[i]).call(this, evt);\n                }\n                if (propagate === false || evt.propagationStopped) {\n                    propagate = false;\n                    break;\n                }\n            }\n            --dispatching[type];\n            if (dispatching[type] === 0) {\n                var pr = pendingRemovals[type];\n                delete pendingRemovals[type];\n                while (pr--) {\n                    this.removeEventListener(type, VOID);\n                }\n                delete dispatching[type];\n            }\n            return propagate;\n        }\n    };\n    /**\n     * Clean up.\n     */\n    Target.prototype.disposeInternal = function () {\n        this.listeners_ && clear(this.listeners_);\n    };\n    /**\n     * Get the listeners for a specified event type. Listeners are returned in the\n     * order that they will be called in.\n     *\n     * @param {string} type Type.\n     * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n     */\n    Target.prototype.getListeners = function (type) {\n        return (this.listeners_ && this.listeners_[type]) || undefined;\n    };\n    /**\n     * @param {string} [opt_type] Type. If not provided,\n     *     `true` will be returned if this event target has any listeners.\n     * @return {boolean} Has listeners.\n     */\n    Target.prototype.hasListener = function (opt_type) {\n        if (!this.listeners_) {\n            return false;\n        }\n        return opt_type\n            ? opt_type in this.listeners_\n            : Object.keys(this.listeners_).length > 0;\n    };\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").Listener} listener Listener.\n     */\n    Target.prototype.removeEventListener = function (type, listener) {\n        var listeners = this.listeners_ && this.listeners_[type];\n        if (listeners) {\n            var index = listeners.indexOf(listener);\n            if (index !== -1) {\n                if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n                    // make listener a no-op, and remove later in #dispatchEvent()\n                    listeners[index] = VOID;\n                    ++this.pendingRemovals_[type];\n                }\n                else {\n                    listeners.splice(index, 1);\n                    if (listeners.length === 0) {\n                        delete this.listeners_[type];\n                    }\n                }\n            }\n        }\n    };\n    return Target;\n}(Disposable));\nexport default Target;\n//# sourceMappingURL=Target.js.map","/**\n * @module ol/events/EventType\n */\n/**\n * @enum {string}\n * @const\n */\nexport default {\n    /**\n     * Generic change event. Triggered when the revision counter is increased.\n     * @event module:ol/events/Event~BaseEvent#change\n     * @api\n     */\n    CHANGE: 'change',\n    /**\n     * Generic error event. Triggered when an error occurs.\n     * @event module:ol/events/Event~BaseEvent#error\n     * @api\n     */\n    ERROR: 'error',\n    BLUR: 'blur',\n    CLEAR: 'clear',\n    CONTEXTMENU: 'contextmenu',\n    CLICK: 'click',\n    DBLCLICK: 'dblclick',\n    DRAGENTER: 'dragenter',\n    DRAGOVER: 'dragover',\n    DROP: 'drop',\n    FOCUS: 'focus',\n    KEYDOWN: 'keydown',\n    KEYPRESS: 'keypress',\n    LOAD: 'load',\n    RESIZE: 'resize',\n    TOUCHMOVE: 'touchmove',\n    WHEEL: 'wheel',\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/events\n */\nimport { clear } from './obj.js';\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [opt_once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n    if (opt_this && opt_this !== target) {\n        listener = listener.bind(opt_this);\n    }\n    if (opt_once) {\n        var originalListener_1 = listener;\n        listener = function () {\n            target.removeEventListener(type, listener);\n            originalListener_1.apply(this, arguments);\n        };\n    }\n    var eventsKey = {\n        target: target,\n        type: type,\n        listener: listener,\n    };\n    target.addEventListener(type, listener);\n    return eventsKey;\n}\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n    return listen(target, type, listener, opt_this, true);\n}\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n    if (key && key.target) {\n        key.target.removeEventListener(key.type, key.listener);\n        clear(key);\n    }\n}\n//# sourceMappingURL=events.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport { listen, listenOnce, unlistenByKey } from './events.js';\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nvar Observable = /** @class */ (function (_super) {\n    __extends(Observable, _super);\n    function Observable() {\n        var _this = _super.call(this) || this;\n        _this.on =\n            /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (_this.onInternal);\n        _this.once =\n            /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (_this.onceInternal);\n        _this.un = /** @type {ObservableOnSignature<void>} */ (_this.unInternal);\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.revision_ = 0;\n        return _this;\n    }\n    /**\n     * Increases the revision counter and dispatches a 'change' event.\n     * @api\n     */\n    Observable.prototype.changed = function () {\n        ++this.revision_;\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * Get the version number for this object.  Each time the object is modified,\n     * its version number will be incremented.\n     * @return {number} Revision.\n     * @api\n     */\n    Observable.prototype.getRevision = function () {\n        return this.revision_;\n    };\n    /**\n     * @param {string|Array<string>} type Type.\n     * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n     * @protected\n     */\n    Observable.prototype.onInternal = function (type, listener) {\n        if (Array.isArray(type)) {\n            var len = type.length;\n            var keys = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                keys[i] = listen(this, type[i], listener);\n            }\n            return keys;\n        }\n        else {\n            return listen(this, /** @type {string} */ (type), listener);\n        }\n    };\n    /**\n     * @param {string|Array<string>} type Type.\n     * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n     * @protected\n     */\n    Observable.prototype.onceInternal = function (type, listener) {\n        var key;\n        if (Array.isArray(type)) {\n            var len = type.length;\n            key = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                key[i] = listenOnce(this, type[i], listener);\n            }\n        }\n        else {\n            key = listenOnce(this, /** @type {string} */ (type), listener);\n        }\n        /** @type {Object} */ (listener).ol_key = key;\n        return key;\n    };\n    /**\n     * Unlisten for a certain type of event.\n     * @param {string|Array<string>} type Type.\n     * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n     * @protected\n     */\n    Observable.prototype.unInternal = function (type, listener) {\n        var key = /** @type {Object} */ (listener).ol_key;\n        if (key) {\n            unByKey(key);\n        }\n        else if (Array.isArray(type)) {\n            for (var i = 0, ii = type.length; i < ii; ++i) {\n                this.removeEventListener(type[i], listener);\n            }\n        }\n        else {\n            this.removeEventListener(type, listener);\n        }\n    };\n    return Observable;\n}(EventTarget));\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n    if (Array.isArray(key)) {\n        for (var i = 0, ii = key.length; i < ii; ++i) {\n            unlistenByKey(key[i]);\n        }\n    }\n    else {\n        unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n    }\n}\nexport default Observable;\n//# sourceMappingURL=Observable.js.map","/**\n * @module ol/util\n */\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n    return /** @type {?} */ ((function () {\n        throw new Error('Unimplemented abstract method.');\n    })());\n}\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n    return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '6.9.0';\n//# sourceMappingURL=util.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport { assign, isEmpty } from './obj.js';\nimport { getUid } from './util.js';\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nvar ObjectEvent = /** @class */ (function (_super) {\n    __extends(ObjectEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {string} key The property name.\n     * @param {*} oldValue The old value for `key`.\n     */\n    function ObjectEvent(type, key, oldValue) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The name of the property whose value is changing.\n         * @type {string}\n         * @api\n         */\n        _this.key = key;\n        /**\n         * The old value. To get the new value use `e.target.get(e.key)` where\n         * `e` is the event object.\n         * @type {*}\n         * @api\n         */\n        _this.oldValue = oldValue;\n        return _this;\n    }\n    return ObjectEvent;\n}(Event));\nexport { ObjectEvent };\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nvar BaseObject = /** @class */ (function (_super) {\n    __extends(BaseObject, _super);\n    /**\n     * @param {Object<string, *>} [opt_values] An object with key-value pairs.\n     */\n    function BaseObject(opt_values) {\n        var _this = _super.call(this) || this;\n        /***\n         * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {ObjectOnSignature<void>}\n         */\n        _this.un;\n        // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n        // the same as the order in which they were created.  This also helps to\n        // ensure that object properties are always added in the same order, which\n        // helps many JavaScript engines generate faster code.\n        getUid(_this);\n        /**\n         * @private\n         * @type {Object<string, *>}\n         */\n        _this.values_ = null;\n        if (opt_values !== undefined) {\n            _this.setProperties(opt_values);\n        }\n        return _this;\n    }\n    /**\n     * Gets a value.\n     * @param {string} key Key name.\n     * @return {*} Value.\n     * @api\n     */\n    BaseObject.prototype.get = function (key) {\n        var value;\n        if (this.values_ && this.values_.hasOwnProperty(key)) {\n            value = this.values_[key];\n        }\n        return value;\n    };\n    /**\n     * Get a list of object property names.\n     * @return {Array<string>} List of property names.\n     * @api\n     */\n    BaseObject.prototype.getKeys = function () {\n        return (this.values_ && Object.keys(this.values_)) || [];\n    };\n    /**\n     * Get an object of all property names and values.\n     * @return {Object<string, *>} Object.\n     * @api\n     */\n    BaseObject.prototype.getProperties = function () {\n        return (this.values_ && assign({}, this.values_)) || {};\n    };\n    /**\n     * @return {boolean} The object has properties.\n     */\n    BaseObject.prototype.hasProperties = function () {\n        return !!this.values_;\n    };\n    /**\n     * @param {string} key Key name.\n     * @param {*} oldValue Old value.\n     */\n    BaseObject.prototype.notify = function (key, oldValue) {\n        var eventType;\n        eventType = \"change:\" + key;\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n        eventType = ObjectEventType.PROPERTYCHANGE;\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    };\n    /**\n     * @param {string} key Key name.\n     * @param {import(\"./events.js\").Listener} listener Listener.\n     */\n    BaseObject.prototype.addChangeListener = function (key, listener) {\n        this.addEventListener(\"change:\" + key, listener);\n    };\n    /**\n     * @param {string} key Key name.\n     * @param {import(\"./events.js\").Listener} listener Listener.\n     */\n    BaseObject.prototype.removeChangeListener = function (key, listener) {\n        this.removeEventListener(\"change:\" + key, listener);\n    };\n    /**\n     * Sets a value.\n     * @param {string} key Key name.\n     * @param {*} value Value.\n     * @param {boolean} [opt_silent] Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.set = function (key, value, opt_silent) {\n        var values = this.values_ || (this.values_ = {});\n        if (opt_silent) {\n            values[key] = value;\n        }\n        else {\n            var oldValue = values[key];\n            values[key] = value;\n            if (oldValue !== value) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    /**\n     * Sets a collection of key-value pairs.  Note that this changes any existing\n     * properties and adds new ones (it does not remove any existing properties).\n     * @param {Object<string, *>} values Values.\n     * @param {boolean} [opt_silent] Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.setProperties = function (values, opt_silent) {\n        for (var key in values) {\n            this.set(key, values[key], opt_silent);\n        }\n    };\n    /**\n     * Apply any properties from another object without triggering events.\n     * @param {BaseObject} source The source object.\n     * @protected\n     */\n    BaseObject.prototype.applyProperties = function (source) {\n        if (!source.values_) {\n            return;\n        }\n        assign(this.values_ || (this.values_ = {}), source.values_);\n    };\n    /**\n     * Unsets a property.\n     * @param {string} key Key name.\n     * @param {boolean} [opt_silent] Unset without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.unset = function (key, opt_silent) {\n        if (this.values_ && key in this.values_) {\n            var oldValue = this.values_[key];\n            delete this.values_[key];\n            if (isEmpty(this.values_)) {\n                this.values_ = null;\n            }\n            if (!opt_silent) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    return BaseObject;\n}(Observable));\nexport default BaseObject;\n//# sourceMappingURL=Object.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/AssertionError\n */\nimport { VERSION } from './util.js';\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = /** @class */ (function (_super) {\n    __extends(AssertionError, _super);\n    /**\n     * @param {number} code Error code.\n     */\n    function AssertionError(code) {\n        var _this = this;\n        var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n        var message = 'Assertion failed. See https://openlayers.org/en/' +\n            path +\n            '/doc/errors/#' +\n            code +\n            ' for details.';\n        _this = _super.call(this, message) || this;\n        /**\n         * Error code. The meaning of the code can be found on\n         * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n         * the version found in the OpenLayers script's header comment if a version\n         * other than the latest is used).\n         * @type {number}\n         * @api\n         */\n        _this.code = code;\n        /**\n         * @type {string}\n         */\n        _this.name = 'AssertionError';\n        // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n        _this.message = message;\n        return _this;\n    }\n    return AssertionError;\n}(Error));\nexport default AssertionError;\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n    if (!assertion) {\n        throw new AssertionError(errorCode);\n    }\n}\n//# sourceMappingURL=asserts.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport { assert } from './asserts.js';\nimport { listen, unlistenByKey } from './events.js';\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n/**\n * @typedef {Feature<import(\"./geom/Geometry.js\").default>|import(\"./render/Feature.js\").default} FeatureLike\n */\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} Geometry\n */\nvar Feature = /** @class */ (function (_super) {\n    __extends(Feature, _super);\n    /**\n     * @param {Geometry|ObjectWithGeometry<Geometry>} [opt_geometryOrProperties]\n     *     You may pass a Geometry object directly, or an object literal containing\n     *     properties. If you pass an object literal, you may include a Geometry\n     *     associated with a `geometry` key.\n     */\n    function Feature(opt_geometryOrProperties) {\n        var _this = _super.call(this) || this;\n        /***\n         * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {FeatureOnSignature<void>}\n         */\n        _this.un;\n        /**\n         * @private\n         * @type {number|string|undefined}\n         */\n        _this.id_ = undefined;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.geometryName_ = 'geometry';\n        /**\n         * User provided style.\n         * @private\n         * @type {import(\"./style/Style.js\").StyleLike}\n         */\n        _this.style_ = null;\n        /**\n         * @private\n         * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n         */\n        _this.styleFunction_ = undefined;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.geometryChangeKey_ = null;\n        _this.addChangeListener(_this.geometryName_, _this.handleGeometryChanged_);\n        if (opt_geometryOrProperties) {\n            if (typeof (\n            /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry) === 'function') {\n                var geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n                _this.setGeometry(geometry);\n            }\n            else {\n                /** @type {Object<string, *>} */\n                var properties = opt_geometryOrProperties;\n                _this.setProperties(properties);\n            }\n        }\n        return _this;\n    }\n    /**\n     * Clone this feature. If the original feature has a geometry it\n     * is also cloned. The feature id is not set in the clone.\n     * @return {Feature<Geometry>} The clone.\n     * @api\n     */\n    Feature.prototype.clone = function () {\n        var clone = /** @type {Feature<Geometry>} */ (new Feature(this.hasProperties() ? this.getProperties() : null));\n        clone.setGeometryName(this.getGeometryName());\n        var geometry = this.getGeometry();\n        if (geometry) {\n            clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n        }\n        var style = this.getStyle();\n        if (style) {\n            clone.setStyle(style);\n        }\n        return clone;\n    };\n    /**\n     * Get the feature's default geometry.  A feature may have any number of named\n     * geometries.  The \"default\" geometry (the one that is rendered by default) is\n     * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n     * @return {Geometry|undefined} The default geometry for the feature.\n     * @api\n     * @observable\n     */\n    Feature.prototype.getGeometry = function () {\n        return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n    };\n    /**\n     * Get the feature identifier.  This is a stable identifier for the feature and\n     * is either set when reading data from a remote source or set explicitly by\n     * calling {@link module:ol/Feature~Feature#setId}.\n     * @return {number|string|undefined} Id.\n     * @api\n     */\n    Feature.prototype.getId = function () {\n        return this.id_;\n    };\n    /**\n     * Get the name of the feature's default geometry.  By default, the default\n     * geometry is named `geometry`.\n     * @return {string} Get the property name associated with the default geometry\n     *     for this feature.\n     * @api\n     */\n    Feature.prototype.getGeometryName = function () {\n        return this.geometryName_;\n    };\n    /**\n     * Get the feature's style. Will return what was provided to the\n     * {@link module:ol/Feature~Feature#setStyle} method.\n     * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n     * @api\n     */\n    Feature.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Get the feature's style function.\n     * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n     * representing the current style of this feature.\n     * @api\n     */\n    Feature.prototype.getStyleFunction = function () {\n        return this.styleFunction_;\n    };\n    /**\n     * @private\n     */\n    Feature.prototype.handleGeometryChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Feature.prototype.handleGeometryChanged_ = function () {\n        if (this.geometryChangeKey_) {\n            unlistenByKey(this.geometryChangeKey_);\n            this.geometryChangeKey_ = null;\n        }\n        var geometry = this.getGeometry();\n        if (geometry) {\n            this.geometryChangeKey_ = listen(geometry, EventType.CHANGE, this.handleGeometryChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * Set the default geometry for the feature.  This will update the property\n     * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n     * @param {Geometry|undefined} geometry The new geometry.\n     * @api\n     * @observable\n     */\n    Feature.prototype.setGeometry = function (geometry) {\n        this.set(this.geometryName_, geometry);\n    };\n    /**\n     * Set the style for the feature to override the layer style.  This can be a\n     * single style object, an array of styles, or a function that takes a\n     * resolution and returns an array of styles. To unset the feature style, call\n     * `setStyle()` without arguments or a falsey value.\n     * @param {import(\"./style/Style.js\").StyleLike} [opt_style] Style for this feature.\n     * @api\n     * @fires module:ol/events/Event~BaseEvent#event:change\n     */\n    Feature.prototype.setStyle = function (opt_style) {\n        this.style_ = opt_style;\n        this.styleFunction_ = !opt_style\n            ? undefined\n            : createStyleFunction(opt_style);\n        this.changed();\n    };\n    /**\n     * Set the feature id.  The feature id is considered stable and may be used when\n     * requesting features or comparing identifiers returned from a remote source.\n     * The feature id can be used with the\n     * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n     * @param {number|string|undefined} id The feature id.\n     * @api\n     * @fires module:ol/events/Event~BaseEvent#event:change\n     */\n    Feature.prototype.setId = function (id) {\n        this.id_ = id;\n        this.changed();\n    };\n    /**\n     * Set the property name to be used when getting the feature's default geometry.\n     * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n     * this name will be returned.\n     * @param {string} name The property name of the default geometry.\n     * @api\n     */\n    Feature.prototype.setGeometryName = function (name) {\n        this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n        this.geometryName_ = name;\n        this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n        this.handleGeometryChanged_();\n    };\n    return Feature;\n}(BaseObject));\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n    if (typeof obj === 'function') {\n        return obj;\n    }\n    else {\n        /**\n         * @type {Array<import(\"./style/Style.js\").default>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof ( /** @type {?} */(obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n            var style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n            styles_1 = [style];\n        }\n        return function () {\n            return styles_1;\n        };\n    }\n}\nexport default Feature;\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/style/Fill\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nvar Fill = /** @class */ (function () {\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function Fill(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n    }\n    /**\n     * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n     * @return {Fill} The cloned style.\n     * @api\n     */\n    Fill.prototype.clone = function () {\n        var color = this.getColor();\n        return new Fill({\n            color: Array.isArray(color) ? color.slice() : color || undefined,\n        });\n    };\n    /**\n     * Get the fill color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n     * @api\n     */\n    Fill.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n     * @api\n     */\n    Fill.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    return Fill;\n}());\nexport default Fill;\n//# sourceMappingURL=Fill.js.map","/**\n * @module ol/proj/Units\n */\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n    /**\n     * Radians\n     * @api\n     */\n    RADIANS: 'radians',\n    /**\n     * Degrees\n     * @api\n     */\n    DEGREES: 'degrees',\n    /**\n     * Feet\n     * @api\n     */\n    FEET: 'ft',\n    /**\n     * Meters\n     * @api\n     */\n    METERS: 'm',\n    /**\n     * Pixels\n     * @api\n     */\n    PIXELS: 'pixels',\n    /**\n     * Tile Pixels\n     * @api\n     */\n    TILE_PIXELS: 'tile-pixels',\n    /**\n     * US Feet\n     * @api\n     */\n    USFEET: 'us-ft',\n};\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nvar unitByCode = {\n    '9001': Units.METERS,\n    '9002': Units.FEET,\n    '9003': Units.USFEET,\n    '9101': Units.RADIANS,\n    '9102': Units.DEGREES,\n};\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n    return unitByCode[code];\n}\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.RADIANS] = 6370997 / (2 * Math.PI);\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\nexport default Units;\n//# sourceMappingURL=Units.js.map","/**\n * @module ol/has\n */\nvar ua = typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport var WORKER_OFFSCREEN_CANVAS = typeof WorkerGlobalScope !== 'undefined' &&\n    typeof OffscreenCanvas !== 'undefined' &&\n    self instanceof WorkerGlobalScope; //eslint-disable-line\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport var IMAGE_DECODE = typeof Image !== 'undefined' && Image.prototype.decode;\n/**\n * @type {boolean}\n */\nexport var PASSIVE_EVENT_LISTENERS = (function () {\n    var passive = false;\n    try {\n        var options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passive = true;\n            },\n        });\n        window.addEventListener('_', null, options);\n        window.removeEventListener('_', null, options);\n    }\n    catch (error) {\n        // passive not supported\n    }\n    return passive;\n})();\n//# sourceMappingURL=has.js.map","/**\n * @module ol/transform\n */\nimport { WORKER_OFFSCREEN_CANVAS } from './has.js';\nimport { assert } from './asserts.js';\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n/**\n * @private\n * @type {Transform}\n */\nvar tmp_ = new Array(6);\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n    return [1, 0, 0, 1, 0, 0];\n}\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n    return set(transform, 1, 0, 0, 1, 0, 0);\n}\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n    var a1 = transform1[0];\n    var b1 = transform1[1];\n    var c1 = transform1[2];\n    var d1 = transform1[3];\n    var e1 = transform1[4];\n    var f1 = transform1[5];\n    var a2 = transform2[0];\n    var b2 = transform2[1];\n    var c2 = transform2[2];\n    var d2 = transform2[3];\n    var e2 = transform2[4];\n    var f2 = transform2[5];\n    transform1[0] = a1 * a2 + c1 * b2;\n    transform1[1] = b1 * a2 + d1 * b2;\n    transform1[2] = a1 * c2 + c1 * d2;\n    transform1[3] = b1 * c2 + d1 * d2;\n    transform1[4] = a1 * e2 + c1 * f2 + e1;\n    transform1[5] = b1 * e2 + d1 * f2 + f1;\n    return transform1;\n}\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n    transform[0] = a;\n    transform[1] = b;\n    transform[2] = c;\n    transform[3] = d;\n    transform[4] = e;\n    transform[5] = f;\n    return transform;\n}\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n    transform1[0] = transform2[0];\n    transform1[1] = transform2[1];\n    transform1[2] = transform2[2];\n    transform1[3] = transform2[3];\n    transform1[4] = transform2[4];\n    transform1[5] = transform2[5];\n    return transform1;\n}\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n    coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n    return coordinate;\n}\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n    return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n    return set(target, x, 0, 0, y, 0, 0);\n}\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n    return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n    var sin = Math.sin(angle);\n    var cos = Math.cos(angle);\n    transform[0] = sx * cos;\n    transform[1] = sy * sin;\n    transform[2] = -sx * sin;\n    transform[3] = sy * cos;\n    transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n    transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n    return transform;\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n    return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n    return makeInverse(source, source);\n}\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n    var det = determinant(source);\n    assert(det !== 0, 32); // Transformation matrix cannot be inverted\n    var a = source[0];\n    var b = source[1];\n    var c = source[2];\n    var d = source[3];\n    var e = source[4];\n    var f = source[5];\n    target[0] = d / det;\n    target[1] = -b / det;\n    target[2] = -c / det;\n    target[3] = a / det;\n    target[4] = (c * f - d * e) / det;\n    target[5] = -(a * f - b * e) / det;\n    return target;\n}\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n    return mat[0] * mat[3] - mat[1] * mat[2];\n}\n/**\n * @type {HTMLElement}\n * @private\n */\nvar transformStringDiv;\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n    var transformString = 'matrix(' + mat.join(', ') + ')';\n    if (WORKER_OFFSCREEN_CANVAS) {\n        return transformString;\n    }\n    var node = transformStringDiv || (transformStringDiv = document.createElement('div'));\n    node.style.transform = transformString;\n    return node.style.transform;\n}\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/extent/Corner\n */\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n    BOTTOM_LEFT: 'bottom-left',\n    BOTTOM_RIGHT: 'bottom-right',\n    TOP_LEFT: 'top-left',\n    TOP_RIGHT: 'top-right',\n};\n//# sourceMappingURL=Corner.js.map","/**\n * @module ol/extent/Relationship\n */\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n    UNKNOWN: 0,\n    INTERSECTING: 1,\n    ABOVE: 2,\n    RIGHT: 4,\n    BELOW: 8,\n    LEFT: 16,\n};\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport { assert } from './asserts.js';\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n    var extent = createEmpty();\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [opt_extent] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n    var minX = Math.min.apply(null, xs);\n    var minY = Math.min.apply(null, ys);\n    var maxX = Math.max.apply(null, xs);\n    var maxY = Math.max.apply(null, ys);\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0] - value;\n        opt_extent[1] = extent[1] - value;\n        opt_extent[2] = extent[2] + value;\n        opt_extent[3] = extent[3] + value;\n        return opt_extent;\n    }\n    else {\n        return [\n            extent[0] - value,\n            extent[1] - value,\n            extent[2] + value,\n            extent[3] + value,\n        ];\n    }\n}\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent.slice();\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n    var dx, dy;\n    if (x < extent[0]) {\n        dx = extent[0] - x;\n    }\n    else if (extent[2] < x) {\n        dx = x - extent[2];\n    }\n    else {\n        dx = 0;\n    }\n    if (y < extent[1]) {\n        dy = extent[1] - y;\n    }\n    else if (extent[3] < y) {\n        dy = y - extent[3];\n    }\n    else {\n        dy = 0;\n    }\n    return dx * dx + dy * dy;\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n    return containsXY(extent, coordinate[0], coordinate[1]);\n}\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n    return (extent1[0] <= extent2[0] &&\n        extent2[2] <= extent1[2] &&\n        extent1[1] <= extent2[1] &&\n        extent2[3] <= extent1[3]);\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n    return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var x = coordinate[0];\n    var y = coordinate[1];\n    var relationship = Relationship.UNKNOWN;\n    if (x < minX) {\n        relationship = relationship | Relationship.LEFT;\n    }\n    else if (x > maxX) {\n        relationship = relationship | Relationship.RIGHT;\n    }\n    if (y < minY) {\n        relationship = relationship | Relationship.BELOW;\n    }\n    else if (y > maxY) {\n        relationship = relationship | Relationship.ABOVE;\n    }\n    if (relationship === Relationship.UNKNOWN) {\n        relationship = Relationship.INTERSECTING;\n    }\n    return relationship;\n}\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n    return [Infinity, Infinity, -Infinity, -Infinity];\n}\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = minX;\n        opt_extent[1] = minY;\n        opt_extent[2] = maxX;\n        opt_extent[3] = maxY;\n        return opt_extent;\n    }\n    else {\n        return [minX, minY, maxX, maxY];\n    }\n}\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n    return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    return createOrUpdate(x, y, x, y, opt_extent);\n}\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendCoordinates(extent, coordinates);\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendRings(extent, rings);\n}\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n    return (extent1[0] == extent2[0] &&\n        extent1[2] == extent2[2] &&\n        extent1[1] == extent2[1] &&\n        extent1[3] == extent2[3]);\n}\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n    return (Math.abs(extent1[0] - extent2[0]) < tolerance &&\n        Math.abs(extent1[2] - extent2[2]) < tolerance &&\n        Math.abs(extent1[1] - extent2[1]) < tolerance &&\n        Math.abs(extent1[3] - extent2[3]) < tolerance);\n}\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n    if (extent2[0] < extent1[0]) {\n        extent1[0] = extent2[0];\n    }\n    if (extent2[2] > extent1[2]) {\n        extent1[2] = extent2[2];\n    }\n    if (extent2[1] < extent1[1]) {\n        extent1[1] = extent2[1];\n    }\n    if (extent2[3] > extent1[3]) {\n        extent1[3] = extent2[3];\n    }\n    return extent1;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n    if (coordinate[0] < extent[0]) {\n        extent[0] = coordinate[0];\n    }\n    if (coordinate[0] > extent[2]) {\n        extent[2] = coordinate[0];\n    }\n    if (coordinate[1] < extent[1]) {\n        extent[1] = coordinate[1];\n    }\n    if (coordinate[1] > extent[3]) {\n        extent[3] = coordinate[1];\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n    for (; offset < end; offset += stride) {\n        extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n    for (var i = 0, ii = rings.length; i < ii; ++i) {\n        extendCoordinates(extent, rings[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n    extent[0] = Math.min(extent[0], x);\n    extent[1] = Math.min(extent[1], y);\n    extent[2] = Math.max(extent[2], x);\n    extent[3] = Math.max(extent[3], y);\n}\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n    var val;\n    val = callback(getBottomLeft(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getBottomRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopLeft(extent));\n    if (val) {\n        return val;\n    }\n    return false;\n}\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n    var area = 0;\n    if (!isEmpty(extent)) {\n        area = getWidth(extent) * getHeight(extent);\n    }\n    return area;\n}\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n    return [extent[0], extent[1]];\n}\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n    return [extent[2], extent[1]];\n}\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n    return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n    var coordinate;\n    if (corner === Corner.BOTTOM_LEFT) {\n        coordinate = getBottomLeft(extent);\n    }\n    else if (corner === Corner.BOTTOM_RIGHT) {\n        coordinate = getBottomRight(extent);\n    }\n    else if (corner === Corner.TOP_LEFT) {\n        coordinate = getTopLeft(extent);\n    }\n    else if (corner === Corner.TOP_RIGHT) {\n        coordinate = getTopRight(extent);\n    }\n    else {\n        assert(false, 13); // Invalid corner\n    }\n    return coordinate;\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n    var minX = Math.min(extent1[0], extent2[0]);\n    var minY = Math.min(extent1[1], extent2[1]);\n    var maxX = Math.max(extent1[2], extent2[2]);\n    var maxY = Math.max(extent1[3], extent2[3]);\n    return (maxX - minX) * (maxY - minY);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n    var dx = (resolution * size[0]) / 2;\n    var dy = (resolution * size[1]) / 2;\n    var cosRotation = Math.cos(rotation);\n    var sinRotation = Math.sin(rotation);\n    var xCos = dx * cosRotation;\n    var xSin = dx * sinRotation;\n    var yCos = dy * cosRotation;\n    var ySin = dy * sinRotation;\n    var x = center[0];\n    var y = center[1];\n    var x0 = x - xCos + ySin;\n    var x1 = x - xCos - ySin;\n    var x2 = x + xCos - ySin;\n    var x3 = x + xCos + ySin;\n    var y0 = y - xSin - yCos;\n    var y1 = y - xSin + yCos;\n    var y2 = y + xSin + yCos;\n    var y3 = y + xSin - yCos;\n    return createOrUpdate(Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3), Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3), opt_extent);\n}\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n    return extent[3] - extent[1];\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n    var intersection = getIntersection(extent1, extent2);\n    return getArea(intersection);\n}\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [opt_extent] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n    var intersection = opt_extent ? opt_extent : createEmpty();\n    if (intersects(extent1, extent2)) {\n        if (extent1[0] > extent2[0]) {\n            intersection[0] = extent1[0];\n        }\n        else {\n            intersection[0] = extent2[0];\n        }\n        if (extent1[1] > extent2[1]) {\n            intersection[1] = extent1[1];\n        }\n        else {\n            intersection[1] = extent2[1];\n        }\n        if (extent1[2] < extent2[2]) {\n            intersection[2] = extent1[2];\n        }\n        else {\n            intersection[2] = extent2[2];\n        }\n        if (extent1[3] < extent2[3]) {\n            intersection[3] = extent1[3];\n        }\n        else {\n            intersection[3] = extent2[3];\n        }\n    }\n    else {\n        createOrUpdateEmpty(intersection);\n    }\n    return intersection;\n}\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n    return getWidth(extent) + getHeight(extent);\n}\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n    return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n    return [extent[0], extent[3]];\n}\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n    return [extent[2], extent[3]];\n}\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n    return extent[2] - extent[0];\n}\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n    return (extent1[0] <= extent2[2] &&\n        extent1[2] >= extent2[0] &&\n        extent1[1] <= extent2[3] &&\n        extent1[3] >= extent2[1]);\n}\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n    return extent[2] < extent[0] || extent[3] < extent[1];\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent;\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n    var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n    var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n    extent[0] -= deltaX;\n    extent[2] += deltaX;\n    extent[1] -= deltaY;\n    extent[3] += deltaY;\n}\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n    var intersects = false;\n    var startRel = coordinateRelationship(extent, start);\n    var endRel = coordinateRelationship(extent, end);\n    if (startRel === Relationship.INTERSECTING ||\n        endRel === Relationship.INTERSECTING) {\n        intersects = true;\n    }\n    else {\n        var minX = extent[0];\n        var minY = extent[1];\n        var maxX = extent[2];\n        var maxY = extent[3];\n        var startX = start[0];\n        var startY = start[1];\n        var endX = end[0];\n        var endY = end[1];\n        var slope = (endY - startY) / (endX - startX);\n        var x = void 0, y = void 0;\n        if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n            // potentially intersects top\n            x = endX - (endY - maxY) / slope;\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects &&\n            !!(endRel & Relationship.RIGHT) &&\n            !(startRel & Relationship.RIGHT)) {\n            // potentially intersects right\n            y = endY - (endX - maxX) * slope;\n            intersects = y >= minY && y <= maxY;\n        }\n        if (!intersects &&\n            !!(endRel & Relationship.BELOW) &&\n            !(startRel & Relationship.BELOW)) {\n            // potentially intersects bottom\n            x = endX - (endY - minY) / slope;\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects &&\n            !!(endRel & Relationship.LEFT) &&\n            !(startRel & Relationship.LEFT)) {\n            // potentially intersects left\n            y = endY - (endX - minX) * slope;\n            intersects = y >= minY && y <= maxY;\n        }\n    }\n    return intersects;\n}\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [opt_extent] Destination extent.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n    var coordinates = [];\n    if (opt_stops > 1) {\n        var width = extent[2] - extent[0];\n        var height = extent[3] - extent[1];\n        for (var i = 0; i < opt_stops; ++i) {\n            coordinates.push(extent[0] + (width * i) / opt_stops, extent[1], extent[2], extent[1] + (height * i) / opt_stops, extent[2] - (width * i) / opt_stops, extent[3], extent[0], extent[3] - (height * i) / opt_stops);\n        }\n    }\n    else {\n        coordinates = [\n            extent[0],\n            extent[1],\n            extent[2],\n            extent[1],\n            extent[2],\n            extent[3],\n            extent[0],\n            extent[3],\n        ];\n    }\n    transformFn(coordinates, coordinates, 2);\n    var xs = [];\n    var ys = [];\n    for (var i = 0, l = coordinates.length; i < l; i += 2) {\n        xs.push(coordinates[i]);\n        ys.push(coordinates[i + 1]);\n    }\n    return _boundingExtentXYs(xs, ys, opt_extent);\n}\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n    var projectionExtent = projection.getExtent();\n    var center = getCenter(extent);\n    if (projection.canWrapX() &&\n        (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])) {\n        var worldWidth = getWidth(projectionExtent);\n        var worldsAway = Math.floor((center[0] - projectionExtent[0]) / worldWidth);\n        var offset = worldsAway * worldWidth;\n        extent[0] -= offset;\n        extent[2] -= offset;\n    }\n    return extent;\n}\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/proj/Projection\n */\nimport { METERS_PER_UNIT } from './Units.js';\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution getPointResolution()} function will be used.\n */\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nvar Projection = /** @class */ (function () {\n    /**\n     * @param {Options} options Projection options.\n     */\n    function Projection(options) {\n        /**\n         * @private\n         * @type {string}\n         */\n        this.code_ = options.code;\n        /**\n         * Units of projected coordinates. When set to `TILE_PIXELS`, a\n         * `this.extent_` and `this.worldExtent_` must be configured properly for each\n         * tile.\n         * @private\n         * @type {import(\"./Units.js\").default}\n         */\n        this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n        /**\n         * Validity extent of the projection in projected coordinates. For projections\n         * with `TILE_PIXELS` units, this is the extent of the tile in\n         * tile pixel space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = options.extent !== undefined ? options.extent : null;\n        /**\n         * Extent of the world in EPSG:4326. For projections with\n         * `TILE_PIXELS` units, this is the extent of the tile in\n         * projected coordinate space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.worldExtent_ =\n            options.worldExtent !== undefined ? options.worldExtent : null;\n        /**\n         * @private\n         * @type {string}\n         */\n        this.axisOrientation_ =\n            options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.global_ = options.global !== undefined ? options.global : false;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.canWrapX_ = !!(this.global_ && this.extent_);\n        /**\n         * @private\n         * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n         */\n        this.getPointResolutionFunc_ = options.getPointResolution;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        this.defaultTileGrid_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.metersPerUnit_ = options.metersPerUnit;\n    }\n    /**\n     * @return {boolean} The projection is suitable for wrapping the x-axis\n     */\n    Projection.prototype.canWrapX = function () {\n        return this.canWrapX_;\n    };\n    /**\n     * Get the code for this projection, e.g. 'EPSG:4326'.\n     * @return {string} Code.\n     * @api\n     */\n    Projection.prototype.getCode = function () {\n        return this.code_;\n    };\n    /**\n     * Get the validity extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the units of this projection.\n     * @return {import(\"./Units.js\").default} Units.\n     * @api\n     */\n    Projection.prototype.getUnits = function () {\n        return this.units_;\n    };\n    /**\n     * Get the amount of meters per unit of this projection.  If the projection is\n     * not configured with `metersPerUnit` or a units identifier, the return is\n     * `undefined`.\n     * @return {number|undefined} Meters.\n     * @api\n     */\n    Projection.prototype.getMetersPerUnit = function () {\n        return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n    };\n    /**\n     * Get the world extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getWorldExtent = function () {\n        return this.worldExtent_;\n    };\n    /**\n     * Get the axis orientation of this projection.\n     * Example values are:\n     * enu - the default easting, northing, elevation.\n     * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n     *     or south orientated transverse mercator.\n     * wnu - westing, northing, up - some planetary coordinate systems have\n     *     \"west positive\" coordinate systems\n     * @return {string} Axis orientation.\n     * @api\n     */\n    Projection.prototype.getAxisOrientation = function () {\n        return this.axisOrientation_;\n    };\n    /**\n     * Is this projection a global projection which spans the whole world?\n     * @return {boolean} Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.isGlobal = function () {\n        return this.global_;\n    };\n    /**\n     * Set if the projection is a global projection which spans the whole world\n     * @param {boolean} global Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.setGlobal = function (global) {\n        this.global_ = global;\n        this.canWrapX_ = !!(global && this.extent_);\n    };\n    /**\n     * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n     */\n    Projection.prototype.getDefaultTileGrid = function () {\n        return this.defaultTileGrid_;\n    };\n    /**\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n     */\n    Projection.prototype.setDefaultTileGrid = function (tileGrid) {\n        this.defaultTileGrid_ = tileGrid;\n    };\n    /**\n     * Set the validity extent for this projection.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Projection.prototype.setExtent = function (extent) {\n        this.extent_ = extent;\n        this.canWrapX_ = !!(this.global_ && extent);\n    };\n    /**\n     * Set the world extent for this projection.\n     * @param {import(\"../extent.js\").Extent} worldExtent World extent\n     *     [minlon, minlat, maxlon, maxlat].\n     * @api\n     */\n    Projection.prototype.setWorldExtent = function (worldExtent) {\n        this.worldExtent_ = worldExtent;\n    };\n    /**\n     * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n     * for this projection.\n     * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n     * @api\n     */\n    Projection.prototype.setGetPointResolution = function (func) {\n        this.getPointResolutionFunc_ = func;\n    };\n    /**\n     * Get the custom point resolution function for this projection (if set).\n     * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n     * resolution function (if set).\n     */\n    Projection.prototype.getPointResolutionFunc = function () {\n        return this.getPointResolutionFunc_;\n    };\n    return Projection;\n}());\nexport default Projection;\n//# sourceMappingURL=Projection.js.map","/**\n * @module ol/math\n */\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n    return Math.min(Math.max(value, min), max);\n}\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function () {\n    // Wrapped in a iife, to save the overhead of checking for the native\n    // implementation on every invocation.\n    var cosh;\n    if ('cosh' in Math) {\n        // The environment supports the native Math.cosh function, use it…\n        cosh = Math.cosh;\n    }\n    else {\n        // … else, use the reference implementation of MDN:\n        cosh = function (x) {\n            var y = /** @type {Math} */ (Math).exp(x);\n            return (y + 1 / y) / 2;\n        };\n    }\n    return cosh;\n})();\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport var log2 = (function () {\n    // Wrapped in a iife, to save the overhead of checking for the native\n    // implementation on every invocation.\n    var log2;\n    if ('log2' in Math) {\n        // The environment supports the native Math.log2 function, use it…\n        log2 = Math.log2;\n    }\n    else {\n        // … else, use the reference implementation of MDN:\n        log2 = function (x) {\n            return Math.log(x) * Math.LOG2E;\n        };\n    }\n    return log2;\n})();\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    if (dx !== 0 || dy !== 0) {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            x1 = x2;\n            y1 = y2;\n        }\n        else if (t > 0) {\n            x1 += dx * t;\n            y1 += dy * t;\n        }\n    }\n    return squaredDistance(x, y, x1, y1);\n}\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    return dx * dx + dy * dy;\n}\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n    var n = mat.length;\n    for (var i = 0; i < n; i++) {\n        // Find max in the i-th column (ignoring i - 1 first rows)\n        var maxRow = i;\n        var maxEl = Math.abs(mat[i][i]);\n        for (var r = i + 1; r < n; r++) {\n            var absValue = Math.abs(mat[r][i]);\n            if (absValue > maxEl) {\n                maxEl = absValue;\n                maxRow = r;\n            }\n        }\n        if (maxEl === 0) {\n            return null; // matrix is singular\n        }\n        // Swap max row with i-th (current) row\n        var tmp = mat[maxRow];\n        mat[maxRow] = mat[i];\n        mat[i] = tmp;\n        // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n        for (var j = i + 1; j < n; j++) {\n            var coef = -mat[j][i] / mat[i][i];\n            for (var k = i; k < n + 1; k++) {\n                if (i == k) {\n                    mat[j][k] = 0;\n                }\n                else {\n                    mat[j][k] += coef * mat[i][k];\n                }\n            }\n        }\n    }\n    // Solve Ax=b for upper triangular matrix A (mat)\n    var x = new Array(n);\n    for (var l = n - 1; l >= 0; l--) {\n        x[l] = mat[l][n] / mat[l][l];\n        for (var m = l - 1; m >= 0; m--) {\n            mat[m][n] -= mat[m][l] * x[l];\n        }\n    }\n    return x;\n}\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n    return (angleInRadians * 180) / Math.PI;\n}\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n    return (angleInDegrees * Math.PI) / 180;\n}\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n    var r = a % b;\n    return r * b < 0 ? r + b : r;\n}\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n    return a + x * (b - a);\n}\n//# sourceMappingURL=math.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport { cosh } from '../math.js';\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport var MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = /** @class */ (function (_super) {\n    __extends(EPSG3857Projection, _super);\n    /**\n     * @param {string} code Code.\n     */\n    function EPSG3857Projection(code) {\n        return _super.call(this, {\n            code: code,\n            units: Units.METERS,\n            extent: EXTENT,\n            global: true,\n            worldExtent: WORLD_EXTENT,\n            getPointResolution: function (resolution, point) {\n                return resolution / cosh(point[1] / RADIUS);\n            },\n        }) || this;\n    }\n    return EPSG3857Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG3857Projection('EPSG:3857'),\n    new EPSG3857Projection('EPSG:102100'),\n    new EPSG3857Projection('EPSG:102113'),\n    new EPSG3857Projection('EPSG:900913'),\n    new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n    new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = (HALF_SIZE * input[i]) / 180;\n        var y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n        if (y > MAX_SAFE_Y) {\n            y = MAX_SAFE_Y;\n        }\n        else if (y < -MAX_SAFE_Y) {\n            y = -MAX_SAFE_Y;\n        }\n        output[i + 1] = y;\n    }\n    return output;\n}\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = (180 * input[i]) / HALF_SIZE;\n        output[i + 1] =\n            (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n    }\n    return output;\n}\n//# sourceMappingURL=epsg3857.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = /** @class */ (function (_super) {\n    __extends(EPSG4326Projection, _super);\n    /**\n     * @param {string} code Code.\n     * @param {string} [opt_axisOrientation] Axis orientation.\n     */\n    function EPSG4326Projection(code, opt_axisOrientation) {\n        return _super.call(this, {\n            code: code,\n            units: Units.DEGREES,\n            extent: EXTENT,\n            axisOrientation: opt_axisOrientation,\n            global: true,\n            metersPerUnit: METERS_PER_UNIT,\n            worldExtent: EXTENT,\n        }) || this;\n    }\n    return EPSG4326Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG4326Projection('CRS:84'),\n    new EPSG4326Projection('EPSG:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n    new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84', 'neu'),\n    new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n    new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/proj/projections\n */\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n    cache = {};\n}\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n    return (cache[code] ||\n        cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n        null);\n}\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n    cache[code] = projection;\n}\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj/transforms\n */\nimport { isEmpty } from '../obj.js';\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nvar transforms = {};\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n    transforms = {};\n}\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    if (!(sourceCode in transforms)) {\n        transforms[sourceCode] = {};\n    }\n    transforms[sourceCode][destinationCode] = transformFn;\n}\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    var transform = transforms[sourceCode][destinationCode];\n    delete transforms[sourceCode][destinationCode];\n    if (isEmpty(transforms[sourceCode])) {\n        delete transforms[sourceCode];\n    }\n    return transform;\n}\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n    var transform;\n    if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n        transform = transforms[sourceCode][destinationCode];\n    }\n    return transform;\n}\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/geom/GeometryType\n */\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n    POINT: 'Point',\n    LINE_STRING: 'LineString',\n    LINEAR_RING: 'LinearRing',\n    POLYGON: 'Polygon',\n    MULTI_POINT: 'MultiPoint',\n    MULTI_LINE_STRING: 'MultiLineString',\n    MULTI_POLYGON: 'MultiPolygon',\n    GEOMETRY_COLLECTION: 'GeometryCollection',\n    CIRCLE: 'Circle',\n};\n//# sourceMappingURL=GeometryType.js.map","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport { toDegrees, toRadians } from './math.js';\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lat2 = toRadians(c2[1]);\n    var deltaLatBy2 = (lat2 - lat1) / 2;\n    var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n    var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n        Math.sin(deltaLonBy2) *\n            Math.sin(deltaLonBy2) *\n            Math.cos(lat1) *\n            Math.cos(lat2);\n    return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n    var length = 0;\n    for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n        length += getDistance(coordinates[i], coordinates[i + 1], radius);\n    }\n    return length;\n}\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var length = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT: {\n            break;\n        }\n        case GeometryType.LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            length = getLengthInternal(coordinates, radius);\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                length += getLengthInternal(coordinates[i], radius);\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                for (j = 0, jj = coords.length; j < jj; ++j) {\n                    length += getLengthInternal(coords[j], radius);\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = \n            /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                length += getLength(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return length;\n}\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n    var area = 0;\n    var len = coordinates.length;\n    var x1 = coordinates[len - 1][0];\n    var y1 = coordinates[len - 1][1];\n    for (var i = 0; i < len; i++) {\n        var x2 = coordinates[i][0];\n        var y2 = coordinates[i][1];\n        area +=\n            toRadians(x2 - x1) *\n                (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n        x1 = x2;\n        y1 = y2;\n    }\n    return (area * radius * radius) / 2.0;\n}\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var area = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n        case GeometryType.LINE_STRING:\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            break;\n        }\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n            area = Math.abs(getAreaInternal(coordinates[0], radius));\n            for (i = 1, ii = coordinates.length; i < ii; ++i) {\n                area -= Math.abs(getAreaInternal(coordinates[i], radius));\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                area += Math.abs(getAreaInternal(coords[0], radius));\n                for (j = 1, jj = coords.length; j < jj; ++j) {\n                    area -= Math.abs(getAreaInternal(coords[j], radius));\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = \n            /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                area += getArea(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return area;\n}\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lon1 = toRadians(c1[0]);\n    var dByR = distance / radius;\n    var lat = Math.asin(Math.sin(lat1) * Math.cos(dByR) +\n        Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n    var lon = lon1 +\n        Math.atan2(Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1), Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n    return [toDegrees(lon), toDegrees(lat)];\n}\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/coordinate\n */\nimport { getWidth } from './extent.js';\nimport { modulo } from './math.js';\nimport { padNumber } from './string.js';\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n    coordinate[0] += +delta[0];\n    coordinate[1] += +delta[1];\n    return coordinate;\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n    var r = circle.getRadius();\n    var center = circle.getCenter();\n    var x0 = center[0];\n    var y0 = center[1];\n    var x1 = coordinate[0];\n    var y1 = coordinate[1];\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    if (dx === 0 && dy === 0) {\n        dx = 1;\n    }\n    var d = Math.sqrt(dx * dx + dy * dy);\n    var x = x0 + (r * dx) / d;\n    var y = y0 + (r * dy) / d;\n    return [x, y];\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n    var x0 = coordinate[0];\n    var y0 = coordinate[1];\n    var start = segment[0];\n    var end = segment[1];\n    var x1 = start[0];\n    var y1 = start[1];\n    var x2 = end[0];\n    var y2 = end[1];\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    var along = dx === 0 && dy === 0\n        ? 0\n        : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n    var x, y;\n    if (along <= 0) {\n        x = x1;\n        y = y1;\n    }\n    else if (along >= 1) {\n        x = x2;\n        y = y2;\n    }\n    else {\n        x = x1 + along * dx;\n        y = y1 + along * dy;\n    }\n    return [x, y];\n}\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n    return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n        return toStringXY(coordinate, opt_fractionDigits);\n    });\n}\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n    var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n    var x = Math.abs(3600 * normalizedDegrees);\n    var dflPrecision = opt_fractionDigits || 0;\n    var precision = Math.pow(10, dflPrecision);\n    var deg = Math.floor(x / 3600);\n    var min = Math.floor((x - deg * 3600) / 60);\n    var sec = x - deg * 3600 - min * 60;\n    sec = Math.ceil(sec * precision) / precision;\n    if (sec >= 60) {\n        sec = 0;\n        min += 1;\n    }\n    if (min >= 60) {\n        min = 0;\n        deg += 1;\n    }\n    return (deg +\n        '\\u00b0 ' +\n        padNumber(min, 2) +\n        '\\u2032 ' +\n        padNumber(sec, 2, dflPrecision) +\n        '\\u2033' +\n        (normalizedDegrees == 0\n            ? ''\n            : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0)));\n}\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n    if (coordinate) {\n        return template\n            .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n            .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n    var equals = true;\n    for (var i = coordinate1.length - 1; i >= 0; --i) {\n        if (coordinate1[i] != coordinate2[i]) {\n            equals = false;\n            break;\n        }\n    }\n    return equals;\n}\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n    var cosAngle = Math.cos(angle);\n    var sinAngle = Math.sin(angle);\n    var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    coordinate[0] = x;\n    coordinate[1] = y;\n    return coordinate;\n}\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n    coordinate[0] *= scale;\n    coordinate[1] *= scale;\n    return coordinate;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n    var dx = coord1[0] - coord2[0];\n    var dy = coord1[1] - coord2[1];\n    return dx * dx + dy * dy;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n    return Math.sqrt(squaredDistance(coord1, coord2));\n}\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n    return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n    if (coordinate) {\n        return (degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n            ' ' +\n            degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits));\n    }\n    else {\n        return '';\n    }\n}\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n    return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n    if (projection.canWrapX()) {\n        var worldWidth = getWidth(projection.getExtent());\n        var worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n        if (worldsAway) {\n            coordinate[0] -= worldsAway * worldWidth;\n        }\n    }\n    return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [opt_sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n    var projectionExtent = projection.getExtent();\n    var worldsAway = 0;\n    if (projection.canWrapX() &&\n        (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])) {\n        var sourceExtentWidth = opt_sourceExtentWidth || getWidth(projectionExtent);\n        worldsAway = Math.floor((coordinate[0] - projectionExtent[0]) / sourceExtentWidth);\n    }\n    return worldsAway;\n}\n//# sourceMappingURL=coordinate.js.map","/**\n * @module ol/proj\n */\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, { METERS_PER_UNIT } from './proj/Units.js';\nimport { PROJECTIONS as EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326, } from './proj/epsg3857.js';\nimport { PROJECTIONS as EPSG4326_PROJECTIONS } from './proj/epsg4326.js';\nimport { add as addProj, clear as clearProj, get as getProj, } from './proj/projections.js';\nimport { add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc, } from './proj/transforms.js';\nimport { applyTransform, getWidth } from './extent.js';\nimport { clamp, modulo } from './math.js';\nimport { getDistance } from './sphere.js';\nimport { getWorldsAway } from './coordinate.js';\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\nexport { METERS_PER_UNIT };\nexport { Projection };\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n    var output;\n    if (opt_output !== undefined) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        output = opt_output;\n    }\n    else {\n        output = input.slice();\n    }\n    return output;\n}\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n    if (opt_output !== undefined && input !== opt_output) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        input = opt_output;\n    }\n    return input;\n}\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n    addProj(projection.getCode(), projection);\n    addTransformFunc(projection, projection, cloneTransform);\n}\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n    projections.forEach(addProjection);\n}\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n    return typeof projectionLike === 'string'\n        ? getProj(/** @type {string} */ (projectionLike))\n        : /** @type {Projection} */ (projectionLike) || null;\n}\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default} [opt_units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n    projection = get(projection);\n    var pointResolution;\n    var getter = projection.getPointResolutionFunc();\n    if (getter) {\n        pointResolution = getter(resolution, point);\n        if (opt_units && opt_units !== projection.getUnits()) {\n            var metersPerUnit = projection.getMetersPerUnit();\n            if (metersPerUnit) {\n                pointResolution =\n                    (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n            }\n        }\n    }\n    else {\n        var units = projection.getUnits();\n        if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n            pointResolution = resolution;\n        }\n        else {\n            // Estimate point resolution by transforming the center pixel to EPSG:4326,\n            // measuring its width and height on the normal sphere, and taking the\n            // average of the width and height.\n            var toEPSG4326_1 = getTransformFromProjections(projection, get('EPSG:4326'));\n            if (toEPSG4326_1 === identityTransform && units !== Units.DEGREES) {\n                // no transform is available\n                pointResolution = resolution * projection.getMetersPerUnit();\n            }\n            else {\n                var vertices = [\n                    point[0] - resolution / 2,\n                    point[1],\n                    point[0] + resolution / 2,\n                    point[1],\n                    point[0],\n                    point[1] - resolution / 2,\n                    point[0],\n                    point[1] + resolution / 2,\n                ];\n                vertices = toEPSG4326_1(vertices, vertices, 2);\n                var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n                var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n                pointResolution = (width + height) / 2;\n            }\n            var metersPerUnit = opt_units\n                ? METERS_PER_UNIT[opt_units]\n                : projection.getMetersPerUnit();\n            if (metersPerUnit !== undefined) {\n                pointResolution /= metersPerUnit;\n            }\n        }\n    }\n    return pointResolution;\n}\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n    addProjections(projections);\n    projections.forEach(function (source) {\n        projections.forEach(function (destination) {\n            if (source !== destination) {\n                addTransformFunc(source, destination, cloneTransform);\n            }\n        });\n    });\n}\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n    projections1.forEach(function (projection1) {\n        projections2.forEach(function (projection2) {\n            addTransformFunc(projection1, projection2, forwardTransform);\n            addTransformFunc(projection2, projection1, inverseTransform);\n        });\n    });\n}\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n    clearProj();\n    clearTransformFuncs();\n}\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n    if (!projection) {\n        return get(defaultCode);\n    }\n    else if (typeof projection === 'string') {\n        return get(projection);\n    }\n    else {\n        return /** @type {Projection} */ (projection);\n    }\n}\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n    return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [opt_output] Output.\n     * @param {number} [opt_dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n        var length = input.length;\n        var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n        var output = opt_output !== undefined ? opt_output : new Array(length);\n        for (var i = 0; i < length; i += dimension) {\n            var point = coordTransform([input[i], input[i + 1]]);\n            output[i] = point[0];\n            output[i + 1] = point[1];\n            for (var j = dimension - 1; j >= 2; --j) {\n                output[i + j] = input[i + j];\n            }\n        }\n        return output;\n    });\n}\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n    var sourceProj = get(source);\n    var destProj = get(destination);\n    addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n    addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [opt_projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n    return transform(coordinate, 'EPSG:4326', opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [opt_projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n    var lonLat = transform(coordinate, opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n    var lon = lonLat[0];\n    if (lon < -180 || lon > 180) {\n        lonLat[0] = modulo(lon + 180, 360) - 180;\n    }\n    return lonLat;\n}\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n    if (projection1 === projection2) {\n        return true;\n    }\n    var equalUnits = projection1.getUnits() === projection2.getUnits();\n    if (projection1.getCode() === projection2.getCode()) {\n        return equalUnits;\n    }\n    else {\n        var transformFunc = getTransformFromProjections(projection1, projection2);\n        return transformFunc === cloneTransform && equalUnits;\n    }\n}\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n    var sourceCode = sourceProjection.getCode();\n    var destinationCode = destinationProjection.getCode();\n    var transformFunc = getTransformFunc(sourceCode, destinationCode);\n    if (!transformFunc) {\n        transformFunc = identityTransform;\n    }\n    return transformFunc;\n}\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n    var sourceProjection = get(source);\n    var destinationProjection = get(destination);\n    return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n    var transformFunc = getTransform(source, destination);\n    return transformFunc(coordinate, undefined, coordinate.length);\n}\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n    var transformFunc = getTransform(source, destination);\n    return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n    var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n    return transformFunc(point);\n}\n/**\n * @type {?Projection}\n */\nvar userProjection = null;\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n    userProjection = get(projection);\n}\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n    userProjection = null;\n}\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n    return userProjection;\n}\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n    setUserProjection('EPSG:4326');\n}\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n    if (!userProjection) {\n        return coordinate;\n    }\n    return transform(coordinate, sourceProjection, userProjection);\n}\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n    if (!userProjection) {\n        return coordinate;\n    }\n    return transform(coordinate, userProjection, destProjection);\n}\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n    if (!userProjection) {\n        return extent;\n    }\n    return transformExtent(extent, sourceProjection, userProjection);\n}\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n    if (!userProjection) {\n        return extent;\n    }\n    return transformExtent(extent, userProjection, destProjection);\n}\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n    if (!userProjection) {\n        return resolution;\n    }\n    var sourceUnits = get(sourceProjection).getUnits();\n    var userUnits = userProjection.getUnits();\n    return sourceUnits && userUnits\n        ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n        : resolution;\n}\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n    if (!userProjection) {\n        return resolution;\n    }\n    var sourceUnits = get(destProjection).getUnits();\n    var userUnits = userProjection.getUnits();\n    return sourceUnits && userUnits\n        ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n        : resolution;\n}\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n    return function (coord) {\n        var sourceX = coord[0];\n        var sourceY = coord[1];\n        var transformed, worldsAway;\n        if (sourceProj.canWrapX()) {\n            var sourceExtent = sourceProj.getExtent();\n            var sourceExtentWidth = getWidth(sourceExtent);\n            worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n            if (worldsAway) {\n                // Move x to the real world\n                sourceX = sourceX - worldsAway * sourceExtentWidth;\n            }\n            sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n            sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n            transformed = transform([sourceX, sourceY]);\n        }\n        else {\n            transformed = transform(coord);\n        }\n        if (worldsAway && destProj.canWrapX()) {\n            // Move transformed coordinate back to the offset world\n            transformed[0] += worldsAway * getWidth(destProj.getExtent());\n        }\n        return transformed;\n    };\n}\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n    // Add transformations that don't alter coordinates to convert within set of\n    // projections with equal meaning.\n    addEquivalentProjections(EPSG3857_PROJECTIONS);\n    addEquivalentProjections(EPSG4326_PROJECTIONS);\n    // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n    // coordinates and back.\n    addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\naddCommon();\n//# sourceMappingURL=proj.js.map","/**\n * @module ol/geom/flat/transform\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var x = flatCoordinates[j];\n        var y = flatCoordinates[j + 1];\n        dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n        dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n        dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + sx * deltaX;\n        dest[i++] = anchorY + sy * deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        dest[i++] = flatCoordinates[j] + deltaX;\n        dest[i++] = flatCoordinates[j + 1] + deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n//# sourceMappingURL=transform.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport { abstract } from '../util.js';\nimport { compose as composeTransform, create as createTransform, } from '../transform.js';\nimport { createEmpty, createOrUpdateEmpty, getHeight, returnOrUpdate, } from '../extent.js';\nimport { get as getProjection, getTransform } from '../proj.js';\nimport { memoizeOne } from '../functions.js';\nimport { transform2D } from './flat/transform.js';\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = /** @class */ (function (_super) {\n    __extends(Geometry, _super);\n    function Geometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.extent_ = createEmpty();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.extentRevision_ = -1;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryRevision = 0;\n        /**\n         * Get a transformed and simplified version of the geometry.\n         * @abstract\n         * @param {number} revision The geometry revision.\n         * @param {number} squaredTolerance Squared tolerance.\n         * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n         * @return {Geometry} Simplified geometry.\n         */\n        _this.simplifyTransformedInternal = memoizeOne(function (revision, squaredTolerance, opt_transform) {\n            if (!opt_transform) {\n                return this.getSimplifiedGeometry(squaredTolerance);\n            }\n            var clone = this.clone();\n            clone.applyTransform(opt_transform);\n            return clone.getSimplifiedGeometry(squaredTolerance);\n        });\n        return _this;\n    }\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    Geometry.prototype.simplifyTransformed = function (squaredTolerance, opt_transform) {\n        return this.simplifyTransformedInternal(this.getRevision(), squaredTolerance, opt_transform);\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @abstract\n     * @return {!Geometry} Clone.\n     */\n    Geometry.prototype.clone = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Geometry.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        return abstract();\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    Geometry.prototype.containsXY = function (x, y) {\n        var coord = this.getClosestPoint([x, y]);\n        return coord[0] === x && coord[1] === y;\n    };\n    /**\n     * Return the closest point of the geometry to the passed point as\n     * {@link module:ol/coordinate~Coordinate coordinate}.\n     * @param {import(\"../coordinate.js\").Coordinate} point Point.\n     * @param {import(\"../coordinate.js\").Coordinate} [opt_closestPoint] Closest point.\n     * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n     * @api\n     */\n    Geometry.prototype.getClosestPoint = function (point, opt_closestPoint) {\n        var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n        this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n        return closestPoint;\n    };\n    /**\n     * Returns true if this geometry includes the specified coordinate. If the\n     * coordinate is on the boundary of the geometry, returns false.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains coordinate.\n     * @api\n     */\n    Geometry.prototype.intersectsCoordinate = function (coordinate) {\n        return this.containsXY(coordinate[0], coordinate[1]);\n    };\n    /**\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    Geometry.prototype.computeExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Get the extent of the geometry.\n     * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Geometry.prototype.getExtent = function (opt_extent) {\n        if (this.extentRevision_ != this.getRevision()) {\n            var extent = this.computeExtent(this.extent_);\n            if (isNaN(extent[0]) || isNaN(extent[1])) {\n                createOrUpdateEmpty(extent);\n            }\n            this.extentRevision_ = this.getRevision();\n        }\n        return returnOrUpdate(this.extent_, opt_extent);\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} angle Rotation angle in radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    Geometry.prototype.rotate = function (angle, anchor) {\n        abstract();\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n     * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    Geometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        abstract();\n    };\n    /**\n     * Create a simplified version of this geometry.  For linestrings, this uses\n     * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n     * algorithm.  For polygons, a quantization-based\n     * simplification is used to preserve topology.\n     * @param {number} tolerance The tolerance distance for simplification.\n     * @return {Geometry} A new, simplified version of the original geometry.\n     * @api\n     */\n    Geometry.prototype.simplify = function (tolerance) {\n        return this.getSimplifiedGeometry(tolerance * tolerance);\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker\n     * algorithm.\n     * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {Geometry} Simplified geometry.\n     */\n    Geometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        return abstract();\n    };\n    /**\n     * Get the type of this geometry.\n     * @abstract\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     */\n    Geometry.prototype.getType = function () {\n        return abstract();\n    };\n    /**\n     * Apply a transform function to the coordinates of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @abstract\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n     * Called with a flat array of geometry coordinates.\n     */\n    Geometry.prototype.applyTransform = function (transformFn) {\n        abstract();\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     */\n    Geometry.prototype.intersectsExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @abstract\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    Geometry.prototype.translate = function (deltaX, deltaY) {\n        abstract();\n    };\n    /**\n     * Transform each coordinate of the geometry from one coordinate reference\n     * system to another. The geometry is modified in place.\n     * For example, a line will be transformed to a line and a circle to a circle.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @return {Geometry} This geometry.  Note that original geometry is\n     *     modified in place.\n     * @api\n     */\n    Geometry.prototype.transform = function (source, destination) {\n        /** @type {import(\"../proj/Projection.js\").default} */\n        var sourceProj = getProjection(source);\n        var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS\n            ? function (inCoordinates, outCoordinates, stride) {\n                var pixelExtent = sourceProj.getExtent();\n                var projectedExtent = sourceProj.getWorldExtent();\n                var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n                composeTransform(tmpTransform, projectedExtent[0], projectedExtent[3], scale, -scale, 0, 0, 0);\n                transform2D(inCoordinates, 0, inCoordinates.length, stride, tmpTransform, outCoordinates);\n                return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n            }\n            : getTransform(sourceProj, destination);\n        this.applyTransform(transformFn);\n        return this;\n    };\n    return Geometry;\n}(BaseObject));\nexport default Geometry;\n//# sourceMappingURL=Geometry.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport GeometryType from './GeometryType.js';\nimport { closestSquaredDistanceXY, createOrUpdateEmpty, extend, getCenter, } from '../extent.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nvar GeometryCollection = /** @class */ (function (_super) {\n    __extends(GeometryCollection, _super);\n    /**\n     * @param {Array<Geometry>} [opt_geometries] Geometries.\n     */\n    function GeometryCollection(opt_geometries) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {Array<Geometry>}\n         */\n        _this.geometries_ = opt_geometries ? opt_geometries : null;\n        /**\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.changeEventsKeys_ = [];\n        _this.listenGeometriesChange_();\n        return _this;\n    }\n    /**\n     * @private\n     */\n    GeometryCollection.prototype.unlistenGeometriesChange_ = function () {\n        this.changeEventsKeys_.forEach(unlistenByKey);\n        this.changeEventsKeys_.length = 0;\n    };\n    /**\n     * @private\n     */\n    GeometryCollection.prototype.listenGeometriesChange_ = function () {\n        if (!this.geometries_) {\n            return;\n        }\n        for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n            this.changeEventsKeys_.push(listen(this.geometries_[i], EventType.CHANGE, this.changed, this));\n        }\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!GeometryCollection} Clone.\n     * @api\n     */\n    GeometryCollection.prototype.clone = function () {\n        var geometryCollection = new GeometryCollection(null);\n        geometryCollection.setGeometries(this.geometries_);\n        geometryCollection.applyProperties(this);\n        return geometryCollection;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    GeometryCollection.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            minSquaredDistance = geometries[i].closestPointXY(x, y, closestPoint, minSquaredDistance);\n        }\n        return minSquaredDistance;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    GeometryCollection.prototype.containsXY = function (x, y) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            if (geometries[i].containsXY(x, y)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    GeometryCollection.prototype.computeExtent = function (extent) {\n        createOrUpdateEmpty(extent);\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            extend(extent, geometries[i].getExtent());\n        }\n        return extent;\n    };\n    /**\n     * Return the geometries that make up this geometry collection.\n     * @return {Array<Geometry>} Geometries.\n     * @api\n     */\n    GeometryCollection.prototype.getGeometries = function () {\n        return cloneGeometries(this.geometries_);\n    };\n    /**\n     * @return {Array<Geometry>} Geometries.\n     */\n    GeometryCollection.prototype.getGeometriesArray = function () {\n        return this.geometries_;\n    };\n    /**\n     * @return {Array<Geometry>} Geometries.\n     */\n    GeometryCollection.prototype.getGeometriesArrayRecursive = function () {\n        /** @type {Array<Geometry>} */\n        var geometriesArray = [];\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            if (geometries[i].getType() === this.getType()) {\n                geometriesArray = geometriesArray.concat(\n                /** @type {GeometryCollection} */ (geometries[i]).getGeometriesArrayRecursive());\n            }\n            else {\n                geometriesArray.push(geometries[i]);\n            }\n        }\n        return geometriesArray;\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {GeometryCollection} Simplified GeometryCollection.\n     */\n    GeometryCollection.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        if (this.simplifiedGeometryRevision !== this.getRevision()) {\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n            this.simplifiedGeometryRevision = this.getRevision();\n        }\n        if (squaredTolerance < 0 ||\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n                squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n            return this;\n        }\n        var simplifiedGeometries = [];\n        var geometries = this.geometries_;\n        var simplified = false;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            var geometry = geometries[i];\n            var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n            simplifiedGeometries.push(simplifiedGeometry);\n            if (simplifiedGeometry !== geometry) {\n                simplified = true;\n            }\n        }\n        if (simplified) {\n            var simplifiedGeometryCollection = new GeometryCollection(null);\n            simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n            return simplifiedGeometryCollection;\n        }\n        else {\n            this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n            return this;\n        }\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    GeometryCollection.prototype.getType = function () {\n        return GeometryType.GEOMETRY_COLLECTION;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    GeometryCollection.prototype.intersectsExtent = function (extent) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            if (geometries[i].intersectsExtent(extent)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    GeometryCollection.prototype.isEmpty = function () {\n        return this.geometries_.length === 0;\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @param {number} angle Rotation angle in radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    GeometryCollection.prototype.rotate = function (angle, anchor) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].rotate(angle, anchor);\n        }\n        this.changed();\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n     * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    GeometryCollection.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        var anchor = opt_anchor;\n        if (!anchor) {\n            anchor = getCenter(this.getExtent());\n        }\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].scale(sx, opt_sy, anchor);\n        }\n        this.changed();\n    };\n    /**\n     * Set the geometries that make up this geometry collection.\n     * @param {Array<Geometry>} geometries Geometries.\n     * @api\n     */\n    GeometryCollection.prototype.setGeometries = function (geometries) {\n        this.setGeometriesArray(cloneGeometries(geometries));\n    };\n    /**\n     * @param {Array<Geometry>} geometries Geometries.\n     */\n    GeometryCollection.prototype.setGeometriesArray = function (geometries) {\n        this.unlistenGeometriesChange_();\n        this.geometries_ = geometries;\n        this.listenGeometriesChange_();\n        this.changed();\n    };\n    /**\n     * Apply a transform function to the coordinates of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n     * Called with a flat array of geometry coordinates.\n     * @api\n     */\n    GeometryCollection.prototype.applyTransform = function (transformFn) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].applyTransform(transformFn);\n        }\n        this.changed();\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    GeometryCollection.prototype.translate = function (deltaX, deltaY) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].translate(deltaX, deltaY);\n        }\n        this.changed();\n    };\n    /**\n     * Clean up.\n     */\n    GeometryCollection.prototype.disposeInternal = function () {\n        this.unlistenGeometriesChange_();\n        _super.prototype.disposeInternal.call(this);\n    };\n    return GeometryCollection;\n}(Geometry));\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n    var clonedGeometries = [];\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n        clonedGeometries.push(geometries[i].clone());\n    }\n    return clonedGeometries;\n}\nexport default GeometryCollection;\n//# sourceMappingURL=GeometryCollection.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n    XY: 'XY',\n    XYZ: 'XYZ',\n    XYM: 'XYM',\n    XYZM: 'XYZM',\n};\n//# sourceMappingURL=GeometryLayout.js.map","/**\n * @module ol/style/IconAnchorUnits\n */\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n    /**\n     * Anchor is a fraction\n     * @api\n     */\n    FRACTION: 'fraction',\n    /**\n     * Anchor is in pixels\n     * @api\n     */\n    PIXELS: 'pixels',\n};\n//# sourceMappingURL=IconAnchorUnits.js.map","/**\n * @module ol/style/IconOrigin\n */\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n    /**\n     * Origin is at bottom left\n     * @api\n     */\n    BOTTOM_LEFT: 'bottom-left',\n    /**\n     * Origin is at bottom right\n     * @api\n     */\n    BOTTOM_RIGHT: 'bottom-right',\n    /**\n     * Origin is at top left\n     * @api\n     */\n    TOP_LEFT: 'top-left',\n    /**\n     * Origin is at top right\n     * @api\n     */\n    TOP_RIGHT: 'top-right',\n};\n//# sourceMappingURL=IconOrigin.js.map","/**\n * @module ol/ImageState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    ERROR: 3,\n    EMPTY: 4,\n};\n//# sourceMappingURL=ImageState.js.map","/**\n * @module ol/size\n */\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = size[0] + 2 * num;\n    opt_size[1] = size[1] + 2 * num;\n    return opt_size;\n}\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n    return size[0] > 0 && size[1] > 0;\n}\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = (size[0] * ratio + 0.5) | 0;\n    opt_size[1] = (size[1] * ratio + 0.5) | 0;\n    return opt_size;\n}\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n    if (Array.isArray(size)) {\n        return size;\n    }\n    else {\n        if (opt_size === undefined) {\n            opt_size = [size, size];\n        }\n        else {\n            opt_size[0] = size;\n            opt_size[1] = size;\n        }\n        return opt_size;\n    }\n}\n//# sourceMappingURL=size.js.map","/**\n * @module ol/style/Image\n */\nimport { abstract } from '../util.js';\nimport { toSize } from '../size.js';\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n */\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nvar ImageStyle = /** @class */ (function () {\n    /**\n     * @param {Options} options Options.\n     */\n    function ImageStyle(options) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.opacity_ = options.opacity;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size}\n         */\n        this.scale_ = options.scale;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.scaleArray_ = toSize(options.scale);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.displacement_ = options.displacement;\n    }\n    /**\n     * Clones the style.\n     * @return {ImageStyle} The cloned style.\n     * @api\n     */\n    ImageStyle.prototype.clone = function () {\n        var scale = this.getScale();\n        return new ImageStyle({\n            opacity: this.getOpacity(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            displacement: this.getDisplacement().slice(),\n        });\n    };\n    /**\n     * Get the symbolizer opacity.\n     * @return {number} Opacity.\n     * @api\n     */\n    ImageStyle.prototype.getOpacity = function () {\n        return this.opacity_;\n    };\n    /**\n     * Determine whether the symbolizer rotates with the map.\n     * @return {boolean} Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the symoblizer rotation.\n     * @return {number} Rotation.\n     * @api\n     */\n    ImageStyle.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the symbolizer scale.\n     * @return {number|import(\"../size.js\").Size} Scale.\n     * @api\n     */\n    ImageStyle.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the symbolizer scale array.\n     * @return {import(\"../size.js\").Size} Scale array.\n     */\n    ImageStyle.prototype.getScaleArray = function () {\n        return this.scaleArray_;\n    };\n    /**\n     * Get the displacement of the shape\n     * @return {Array<number>} Shape's center displacement\n     * @api\n     */\n    ImageStyle.prototype.getDisplacement = function () {\n        return this.displacement_;\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @abstract\n     * @return {Array<number>} Anchor.\n     */\n    ImageStyle.prototype.getAnchor = function () {\n        return abstract();\n    };\n    /**\n     * Get the image element for the symbolizer.\n     * @abstract\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getImage = function (pixelRatio) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getHitDetectionImage = function () {\n        return abstract();\n    };\n    /**\n     * Get the image pixel ratio.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Pixel ratio.\n     */\n    ImageStyle.prototype.getPixelRatio = function (pixelRatio) {\n        return 1;\n    };\n    /**\n     * @abstract\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    ImageStyle.prototype.getImageState = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    ImageStyle.prototype.getImageSize = function () {\n        return abstract();\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @abstract\n     * @return {Array<number>} Origin.\n     */\n    ImageStyle.prototype.getOrigin = function () {\n        return abstract();\n    };\n    /**\n     * Get the size of the symbolizer (in pixels).\n     * @abstract\n     * @return {import(\"../size.js\").Size} Size.\n     */\n    ImageStyle.prototype.getSize = function () {\n        return abstract();\n    };\n    /**\n     * Set the opacity.\n     *\n     * @param {number} opacity Opacity.\n     * @api\n     */\n    ImageStyle.prototype.setOpacity = function (opacity) {\n        this.opacity_ = opacity;\n    };\n    /**\n     * Set whether to rotate the style with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number} rotation Rotation.\n     * @api\n     */\n    ImageStyle.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number|import(\"../size.js\").Size} scale Scale.\n     * @api\n     */\n    ImageStyle.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n        this.scaleArray_ = toSize(scale);\n    };\n    /**\n     * @abstract\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    ImageStyle.prototype.listenImageChange = function (listener) {\n        abstract();\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageStyle.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * @abstract\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    ImageStyle.prototype.unlistenImageChange = function (listener) {\n        abstract();\n    };\n    return ImageStyle;\n}());\nexport default ImageStyle;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/color\n */\nimport { assert } from './asserts.js';\nimport { clamp } from './math.js';\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n    if (typeof color === 'string') {\n        return color;\n    }\n    else {\n        return toString(color);\n    }\n}\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n    var el = document.createElement('div');\n    el.style.color = color;\n    if (el.style.color !== '') {\n        document.body.appendChild(el);\n        var rgb = getComputedStyle(el).color;\n        document.body.removeChild(el);\n        return rgb;\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport var fromString = (function () {\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n    /**\n     * @type {Object<string, Color>}\n     */\n    var cache = {};\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n    return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n            color = cache[s];\n        }\n        else {\n            if (cacheSize >= MAX_CACHE_SIZE) {\n                var i = 0;\n                for (var key in cache) {\n                    if ((i++ & 3) === 0) {\n                        delete cache[key];\n                        --cacheSize;\n                    }\n                }\n            }\n            color = fromStringInternal_(s);\n            cache[s] = color;\n            ++cacheSize;\n        }\n        return color;\n    });\n})();\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n    if (Array.isArray(color)) {\n        return color;\n    }\n    else {\n        return fromString(color);\n    }\n}\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n    var r, g, b, a, color;\n    if (NAMED_COLOR_RE_.exec(s)) {\n        s = fromNamed(s);\n    }\n    if (HEX_COLOR_RE_.exec(s)) {\n        // hex\n        var n = s.length - 1; // number of hex digits\n        var d = // number of digits per channel\n         void 0; // number of digits per channel\n        if (n <= 4) {\n            d = 1;\n        }\n        else {\n            d = 2;\n        }\n        var hasAlpha = n === 4 || n === 8;\n        r = parseInt(s.substr(1 + 0 * d, d), 16);\n        g = parseInt(s.substr(1 + 1 * d, d), 16);\n        b = parseInt(s.substr(1 + 2 * d, d), 16);\n        if (hasAlpha) {\n            a = parseInt(s.substr(1 + 3 * d, d), 16);\n        }\n        else {\n            a = 255;\n        }\n        if (d == 1) {\n            r = (r << 4) + r;\n            g = (g << 4) + g;\n            b = (b << 4) + b;\n            if (hasAlpha) {\n                a = (a << 4) + a;\n            }\n        }\n        color = [r, g, b, a / 255];\n    }\n    else if (s.indexOf('rgba(') == 0) {\n        // rgba()\n        color = s.slice(5, -1).split(',').map(Number);\n        normalize(color);\n    }\n    else if (s.indexOf('rgb(') == 0) {\n        // rgb()\n        color = s.slice(4, -1).split(',').map(Number);\n        color.push(1);\n        normalize(color);\n    }\n    else {\n        assert(false, 14); // Invalid color\n    }\n    return color;\n}\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n    color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n    color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n    color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n    color[3] = clamp(color[3], 0, 1);\n    return color;\n}\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n    var r = color[0];\n    if (r != (r | 0)) {\n        r = (r + 0.5) | 0;\n    }\n    var g = color[1];\n    if (g != (g | 0)) {\n        g = (g + 0.5) | 0;\n    }\n    var b = color[2];\n    if (b != (b | 0)) {\n        b = (b + 0.5) | 0;\n    }\n    var a = color[3] === undefined ? 1 : color[3];\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n    if (NAMED_COLOR_RE_.test(s)) {\n        s = fromNamed(s);\n    }\n    return (HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0);\n}\n//# sourceMappingURL=color.js.map","import { WORKER_OFFSCREEN_CANVAS } from './has.js';\n/**\n * @module ol/dom\n */\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [opt_width] Canvas width.\n * @param {number} [opt_height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [opt_canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [opt_Context2DSettings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height, opt_canvasPool, opt_Context2DSettings) {\n    /** @type {HTMLCanvasElement|OffscreenCanvas} */\n    var canvas;\n    if (opt_canvasPool && opt_canvasPool.length) {\n        canvas = opt_canvasPool.shift();\n    }\n    else if (WORKER_OFFSCREEN_CANVAS) {\n        canvas = new OffscreenCanvas(opt_width || 300, opt_height || 300);\n    }\n    else {\n        canvas = document.createElement('canvas');\n        canvas.style.all = 'unset';\n    }\n    if (opt_width) {\n        canvas.width = opt_width;\n    }\n    if (opt_height) {\n        canvas.height = opt_height;\n    }\n    //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n    return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d', opt_Context2DSettings));\n}\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n    var width = element.offsetWidth;\n    var style = getComputedStyle(element);\n    width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n    return width;\n}\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n    var height = element.offsetHeight;\n    var style = getComputedStyle(element);\n    height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n    return height;\n}\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n    var parent = oldNode.parentNode;\n    if (parent) {\n        parent.replaceChild(newNode, oldNode);\n    }\n}\n/**\n * @param {Node} node The node to remove.\n * @return {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n    return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n    while (node.lastChild) {\n        node.removeChild(node.lastChild);\n    }\n}\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n    var oldChildren = node.childNodes;\n    for (var i = 0; true; ++i) {\n        var oldChild = oldChildren[i];\n        var newChild = children[i];\n        // check if our work is done\n        if (!oldChild && !newChild) {\n            break;\n        }\n        // check if children match\n        if (oldChild === newChild) {\n            continue;\n        }\n        // check if a new child needs to be added\n        if (!oldChild) {\n            node.appendChild(newChild);\n            continue;\n        }\n        // check if an old child needs to be removed\n        if (!newChild) {\n            node.removeChild(oldChild);\n            --i;\n            continue;\n        }\n        // reorder\n        node.insertBefore(newChild, oldChild);\n    }\n}\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport { asString } from '../color.js';\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = /** @class */ (function () {\n    function IconImageCache() {\n        /**\n         * @type {!Object<string, import(\"./IconImage.js\").default>}\n         * @private\n         */\n        this.cache_ = {};\n        /**\n         * @type {number}\n         * @private\n         */\n        this.cacheSize_ = 0;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.maxCacheSize_ = 32;\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    IconImageCache.prototype.clear = function () {\n        this.cache_ = {};\n        this.cacheSize_ = 0;\n    };\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    IconImageCache.prototype.canExpireCache = function () {\n        return this.cacheSize_ > this.maxCacheSize_;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    IconImageCache.prototype.expire = function () {\n        if (this.canExpireCache()) {\n            var i = 0;\n            for (var key in this.cache_) {\n                var iconImage = this.cache_[key];\n                if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n                    delete this.cache_[key];\n                    --this.cacheSize_;\n                }\n            }\n        }\n    };\n    /**\n     * @param {string} src Src.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../color.js\").Color} color Color.\n     * @return {import(\"./IconImage.js\").default} Icon image.\n     */\n    IconImageCache.prototype.get = function (src, crossOrigin, color) {\n        var key = getKey(src, crossOrigin, color);\n        return key in this.cache_ ? this.cache_[key] : null;\n    };\n    /**\n     * @param {string} src Src.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../color.js\").Color} color Color.\n     * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n     */\n    IconImageCache.prototype.set = function (src, crossOrigin, color, iconImage) {\n        var key = getKey(src, crossOrigin, color);\n        this.cache_[key] = iconImage;\n        ++this.cacheSize_;\n    };\n    /**\n     * Set the cache size of the icon cache. Default is `32`. Change this value when\n     * your map uses more than 32 different icon images and you are not caching icon\n     * styles on the application level.\n     * @param {number} maxCacheSize Cache max size.\n     * @api\n     */\n    IconImageCache.prototype.setSize = function (maxCacheSize) {\n        this.maxCacheSize_ = maxCacheSize;\n        this.expire();\n    };\n    return IconImageCache;\n}());\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n    var colorString = color ? asString(color) : 'null';\n    return crossOrigin + ':' + src + ':' + colorString;\n}\nexport default IconImageCache;\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n//# sourceMappingURL=IconImageCache.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport { abstract } from './util.js';\n/**\n * @abstract\n */\nvar ImageBase = /** @class */ (function (_super) {\n    __extends(ImageBase, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./ImageState.js\").default} state State.\n     */\n    function ImageBase(extent, resolution, pixelRatio, state) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.extent = extent;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @protected\n         * @type {number|undefined}\n         */\n        _this.resolution = resolution;\n        /**\n         * @protected\n         * @type {import(\"./ImageState.js\").default}\n         */\n        _this.state = state;\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    ImageBase.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @return {import(\"./extent.js\").Extent} Extent.\n     */\n    ImageBase.prototype.getExtent = function () {\n        return this.extent;\n    };\n    /**\n     * @abstract\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     */\n    ImageBase.prototype.getImage = function () {\n        return abstract();\n    };\n    /**\n     * @return {number} PixelRatio.\n     */\n    ImageBase.prototype.getPixelRatio = function () {\n        return this.pixelRatio_;\n    };\n    /**\n     * @return {number} Resolution.\n     */\n    ImageBase.prototype.getResolution = function () {\n        return /** @type {number} */ (this.resolution);\n    };\n    /**\n     * @return {import(\"./ImageState.js\").default} State.\n     */\n    ImageBase.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageBase.prototype.load = function () {\n        abstract();\n    };\n    return ImageBase;\n}(EventTarget));\nexport default ImageBase;\n//# sourceMappingURL=ImageBase.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport { IMAGE_DECODE } from './has.js';\nimport { getHeight } from './extent.js';\nimport { listenOnce, unlistenByKey } from './events.js';\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\nvar ImageWrapper = /** @class */ (function (_super) {\n    __extends(ImageWrapper, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {LoadFunction} imageLoadFunction Image load function.\n     */\n    function ImageWrapper(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n        var _this = _super.call(this, extent, resolution, pixelRatio, ImageState.IDLE) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @protected\n         * @type {import(\"./ImageState.js\").default}\n         */\n        _this.state = ImageState.IDLE;\n        /**\n         * @private\n         * @type {LoadFunction}\n         */\n        _this.imageLoadFunction_ = imageLoadFunction;\n        return _this;\n    }\n    /**\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @api\n     */\n    ImageWrapper.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageError_ = function () {\n        this.state = ImageState.ERROR;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageLoad_ = function () {\n        if (this.resolution === undefined) {\n            this.resolution = getHeight(this.extent) / this.image_.height;\n        }\n        this.state = ImageState.LOADED;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @api\n     */\n    ImageWrapper.prototype.load = function () {\n        if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n            this.state = ImageState.LOADING;\n            this.changed();\n            this.imageLoadFunction_(this, this.src_);\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n     */\n    ImageWrapper.prototype.setImage = function (image) {\n        this.image_ = image;\n        this.resolution = getHeight(this.extent) / this.image_.height;\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return ImageWrapper;\n}(ImageBase));\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n    var img = /** @type {HTMLImageElement} */ (image);\n    if (img.src && IMAGE_DECODE) {\n        var promise = img.decode();\n        var listening_1 = true;\n        var unlisten = function () {\n            listening_1 = false;\n        };\n        promise\n            .then(function () {\n            if (listening_1) {\n                loadHandler();\n            }\n        })\n            .catch(function (error) {\n            if (listening_1) {\n                // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n                //        https://bugs.webkit.org/show_bug.cgi?id=198527\n                if (error.name === 'EncodingError' &&\n                    error.message === 'Invalid image type.') {\n                    loadHandler();\n                }\n                else {\n                    errorHandler();\n                }\n            }\n        });\n        return unlisten;\n    }\n    var listenerKeys = [\n        listenOnce(img, EventType.LOAD, loadHandler),\n        listenOnce(img, EventType.ERROR, errorHandler),\n    ];\n    return function unlisten() {\n        listenerKeys.forEach(unlistenByKey);\n    };\n}\nexport default ImageWrapper;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/style/IconImage\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport { asString } from '../color.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { shared as iconImageCache } from './IconImageCache.js';\nimport { listenImage } from '../Image.js';\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar taintedTestContext = null;\nvar IconImage = /** @class */ (function (_super) {\n    __extends(IconImage, _super);\n    /**\n     * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n     * @param {string|undefined} src Src.\n     * @param {import(\"../size.js\").Size} size Size.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../ImageState.js\").default} imageState Image state.\n     * @param {import(\"../color.js\").Color} color Color.\n     */\n    function IconImage(image, src, size, crossOrigin, imageState, color) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.hitDetectionImage_ = null;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = !image ? new Image() : image;\n        if (crossOrigin !== null) {\n            /** @type {HTMLImageElement} */ (_this.image_).crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {Object<number, HTMLCanvasElement>}\n         */\n        _this.canvas_ = {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color}\n         */\n        _this.color_ = color;\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @private\n         * @type {import(\"../ImageState.js\").default}\n         */\n        _this.imageState_ = imageState;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = size;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         */\n        _this.tainted_;\n        return _this;\n    }\n    /**\n     * @private\n     * @return {boolean} The image canvas is tainted.\n     */\n    IconImage.prototype.isTainted_ = function () {\n        if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n            if (!taintedTestContext) {\n                taintedTestContext = createCanvasContext2D(1, 1);\n            }\n            taintedTestContext.drawImage(this.image_, 0, 0);\n            try {\n                taintedTestContext.getImageData(0, 0, 1, 1);\n                this.tainted_ = false;\n            }\n            catch (e) {\n                taintedTestContext = null;\n                this.tainted_ = true;\n            }\n        }\n        return this.tainted_ === true;\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.dispatchChangeEvent_ = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.handleImageError_ = function () {\n        this.imageState_ = ImageState.ERROR;\n        this.unlistenImage_();\n        this.dispatchChangeEvent_();\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.handleImageLoad_ = function () {\n        this.imageState_ = ImageState.LOADED;\n        if (this.size_) {\n            this.image_.width = this.size_[0];\n            this.image_.height = this.size_[1];\n        }\n        else {\n            this.size_ = [this.image_.width, this.image_.height];\n        }\n        this.unlistenImage_();\n        this.dispatchChangeEvent_();\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n     */\n    IconImage.prototype.getImage = function (pixelRatio) {\n        this.replaceColor_(pixelRatio);\n        return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Image or Canvas element.\n     */\n    IconImage.prototype.getPixelRatio = function (pixelRatio) {\n        this.replaceColor_(pixelRatio);\n        return this.canvas_[pixelRatio] ? pixelRatio : 1;\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    IconImage.prototype.getImageState = function () {\n        return this.imageState_;\n    };\n    /**\n     * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n     */\n    IconImage.prototype.getHitDetectionImage = function () {\n        if (!this.hitDetectionImage_) {\n            if (this.isTainted_()) {\n                var width = this.size_[0];\n                var height = this.size_[1];\n                var context = createCanvasContext2D(width, height);\n                context.fillRect(0, 0, width, height);\n                this.hitDetectionImage_ = context.canvas;\n            }\n            else {\n                this.hitDetectionImage_ = this.image_;\n            }\n        }\n        return this.hitDetectionImage_;\n    };\n    /**\n     * Get the size of the icon (in pixels).\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    IconImage.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * @return {string|undefined} Image src.\n     */\n    IconImage.prototype.getSrc = function () {\n        return this.src_;\n    };\n    /**\n     * Load not yet loaded URI.\n     */\n    IconImage.prototype.load = function () {\n        if (this.imageState_ == ImageState.IDLE) {\n            this.imageState_ = ImageState.LOADING;\n            try {\n                /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n            }\n            catch (e) {\n                this.handleImageError_();\n            }\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @private\n     */\n    IconImage.prototype.replaceColor_ = function (pixelRatio) {\n        if (!this.color_ ||\n            this.canvas_[pixelRatio] ||\n            this.imageState_ !== ImageState.LOADED) {\n            return;\n        }\n        var canvas = document.createElement('canvas');\n        this.canvas_[pixelRatio] = canvas;\n        canvas.width = Math.ceil(this.image_.width * pixelRatio);\n        canvas.height = Math.ceil(this.image_.height * pixelRatio);\n        var ctx = canvas.getContext('2d');\n        ctx.scale(pixelRatio, pixelRatio);\n        ctx.drawImage(this.image_, 0, 0);\n        ctx.globalCompositeOperation = 'multiply';\n        // Internet Explorer 11 does not support the multiply operation.\n        // If the canvas is tainted in Internet Explorer this still produces\n        // a solid color image with the shape of the icon.\n        if (ctx.globalCompositeOperation === 'multiply' || this.isTainted_()) {\n            ctx.fillStyle = asString(this.color_);\n            ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n            ctx.globalCompositeOperation = 'destination-in';\n            ctx.drawImage(this.image_, 0, 0);\n        }\n        else {\n            var imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n            var data = imgData.data;\n            var r = this.color_[0] / 255.0;\n            var g = this.color_[1] / 255.0;\n            var b = this.color_[2] / 255.0;\n            var a = this.color_[3];\n            for (var i = 0, ii = data.length; i < ii; i += 4) {\n                data[i] *= r;\n                data[i + 1] *= g;\n                data[i + 2] *= b;\n                data[i + 3] *= a;\n            }\n            ctx.putImageData(imgData, 0, 0);\n        }\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    IconImage.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return IconImage;\n}(EventTarget));\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n    var iconImage = iconImageCache.get(src, crossOrigin, color);\n    if (!iconImage) {\n        iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n        iconImageCache.set(src, crossOrigin, color, iconImage);\n    }\n    return iconImage;\n}\nexport default IconImage;\n//# sourceMappingURL=IconImage.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport { asArray } from '../color.js';\nimport { assert } from '../asserts.js';\nimport { get as getIconImage } from './IconImage.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement the icon\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nvar Icon = /** @class */ (function (_super) {\n    __extends(Icon, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function Icon(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        /**\n         * @type {number}\n         */\n        var opacity = options.opacity !== undefined ? options.opacity : 1;\n        /**\n         * @type {number}\n         */\n        var rotation = options.rotation !== undefined ? options.rotation : 0;\n        /**\n         * @type {number|import(\"../size.js\").Size}\n         */\n        var scale = options.scale !== undefined ? options.scale : 1;\n        /**\n         * @type {boolean}\n         */\n        var rotateWithView = options.rotateWithView !== undefined ? options.rotateWithView : false;\n        _this = _super.call(this, {\n            opacity: opacity,\n            rotation: rotation,\n            scale: scale,\n            displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n            rotateWithView: rotateWithView,\n        }) || this;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.normalizedAnchor_ = null;\n        /**\n         * @private\n         * @type {import(\"./IconOrigin.js\").default}\n         */\n        _this.anchorOrigin_ =\n            options.anchorOrigin !== undefined\n                ? options.anchorOrigin\n                : IconOrigin.TOP_LEFT;\n        /**\n         * @private\n         * @type {import(\"./IconAnchorUnits.js\").default}\n         */\n        _this.anchorXUnits_ =\n            options.anchorXUnits !== undefined\n                ? options.anchorXUnits\n                : IconAnchorUnits.FRACTION;\n        /**\n         * @private\n         * @type {import(\"./IconAnchorUnits.js\").default}\n         */\n        _this.anchorYUnits_ =\n            options.anchorYUnits !== undefined\n                ? options.anchorYUnits\n                : IconAnchorUnits.FRACTION;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        var image = options.img !== undefined ? options.img : null;\n        /**\n         * @type {import(\"../size.js\").Size}\n         */\n        var imgSize = options.imgSize !== undefined ? options.imgSize : null;\n        /**\n         * @type {string|undefined}\n         */\n        var src = options.src;\n        assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n        assert(!image || (image && imgSize), 5); // `imgSize` must be set when `image` is provided\n        if ((src === undefined || src.length === 0) && image) {\n            src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n        }\n        assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n        /**\n         * @type {import(\"../ImageState.js\").default}\n         */\n        var imageState = options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color}\n         */\n        _this.color_ = options.color !== undefined ? asArray(options.color) : null;\n        /**\n         * @private\n         * @type {import(\"./IconImage.js\").default}\n         */\n        _this.iconImage_ = getIconImage(image, \n        /** @type {string} */ (src), imgSize, _this.crossOrigin_, imageState, _this.color_);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n        /**\n         * @private\n         * @type {import(\"./IconOrigin.js\").default}\n         */\n        _this.offsetOrigin_ =\n            options.offsetOrigin !== undefined\n                ? options.offsetOrigin\n                : IconOrigin.TOP_LEFT;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.origin_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = options.size !== undefined ? options.size : null;\n        return _this;\n    }\n    /**\n     * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n     * @return {Icon} The cloned style.\n     * @api\n     */\n    Icon.prototype.clone = function () {\n        var scale = this.getScale();\n        return new Icon({\n            anchor: this.anchor_.slice(),\n            anchorOrigin: this.anchorOrigin_,\n            anchorXUnits: this.anchorXUnits_,\n            anchorYUnits: this.anchorYUnits_,\n            crossOrigin: this.crossOrigin_,\n            color: this.color_ && this.color_.slice\n                ? this.color_.slice()\n                : this.color_ || undefined,\n            src: this.getSrc(),\n            offset: this.offset_.slice(),\n            offsetOrigin: this.offsetOrigin_,\n            size: this.size_ !== null ? this.size_.slice() : undefined,\n            opacity: this.getOpacity(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n        });\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @return {Array<number>} Anchor.\n     * @api\n     */\n    Icon.prototype.getAnchor = function () {\n        if (this.normalizedAnchor_) {\n            return this.normalizedAnchor_;\n        }\n        var anchor = this.anchor_;\n        var size = this.getSize();\n        if (this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n            this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n            if (!size) {\n                return null;\n            }\n            anchor = this.anchor_.slice();\n            if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n                anchor[0] *= size[0];\n            }\n            if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n                anchor[1] *= size[1];\n            }\n        }\n        if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n            if (!size) {\n                return null;\n            }\n            if (anchor === this.anchor_) {\n                anchor = this.anchor_.slice();\n            }\n            if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n                this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                anchor[0] = -anchor[0] + size[0];\n            }\n            if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n                this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                anchor[1] = -anchor[1] + size[1];\n            }\n        }\n        var displacement = this.getDisplacement();\n        anchor[0] -= displacement[0];\n        anchor[1] += displacement[1];\n        this.normalizedAnchor_ = anchor;\n        return this.normalizedAnchor_;\n    };\n    /**\n     * Set the anchor point. The anchor determines the center point for the\n     * symbolizer.\n     *\n     * @param {Array<number>} anchor Anchor.\n     * @api\n     */\n    Icon.prototype.setAnchor = function (anchor) {\n        this.anchor_ = anchor;\n        this.normalizedAnchor_ = null;\n    };\n    /**\n     * Get the icon color.\n     * @return {import(\"../color.js\").Color} Color.\n     * @api\n     */\n    Icon.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Get the image icon.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n     * @api\n     */\n    Icon.prototype.getImage = function (pixelRatio) {\n        return this.iconImage_.getImage(pixelRatio);\n    };\n    /**\n     * Get the pixel ratio.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} The pixel ratio of the image.\n     * @api\n     */\n    Icon.prototype.getPixelRatio = function (pixelRatio) {\n        return this.iconImage_.getPixelRatio(pixelRatio);\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    Icon.prototype.getImageSize = function () {\n        return this.iconImage_.getSize();\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    Icon.prototype.getImageState = function () {\n        return this.iconImage_.getImageState();\n    };\n    /**\n     * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n     */\n    Icon.prototype.getHitDetectionImage = function () {\n        return this.iconImage_.getHitDetectionImage();\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @return {Array<number>} Origin.\n     * @api\n     */\n    Icon.prototype.getOrigin = function () {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        var offset = this.offset_;\n        if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n            var size = this.getSize();\n            var iconImageSize = this.iconImage_.getSize();\n            if (!size || !iconImageSize) {\n                return null;\n            }\n            offset = offset.slice();\n            if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                offset[0] = iconImageSize[0] - size[0] - offset[0];\n            }\n            if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                offset[1] = iconImageSize[1] - size[1] - offset[1];\n            }\n        }\n        this.origin_ = offset;\n        return this.origin_;\n    };\n    /**\n     * Get the image URL.\n     * @return {string|undefined} Image src.\n     * @api\n     */\n    Icon.prototype.getSrc = function () {\n        return this.iconImage_.getSrc();\n    };\n    /**\n     * Get the size of the icon (in pixels).\n     * @return {import(\"../size.js\").Size} Image size.\n     * @api\n     */\n    Icon.prototype.getSize = function () {\n        return !this.size_ ? this.iconImage_.getSize() : this.size_;\n    };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    Icon.prototype.listenImageChange = function (listener) {\n        this.iconImage_.addEventListener(EventType.CHANGE, listener);\n    };\n    /**\n     * Load not yet loaded URI.\n     * When rendering a feature with an icon style, the vector renderer will\n     * automatically call this method. However, you might want to call this\n     * method yourself for preloading or other purposes.\n     * @api\n     */\n    Icon.prototype.load = function () {\n        this.iconImage_.load();\n    };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    Icon.prototype.unlistenImageChange = function (listener) {\n        this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n    };\n    return Icon;\n}(ImageStyle));\nexport default Icon;\n//# sourceMappingURL=Icon.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport { abstract } from '../util.js';\nimport { createOrUpdateFromFlatCoordinates, getCenter } from '../extent.js';\nimport { rotate, scale, transform2D, translate } from './flat/transform.js';\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = /** @class */ (function (_super) {\n    __extends(SimpleGeometry, _super);\n    function SimpleGeometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {import(\"./GeometryLayout.js\").default}\n         */\n        _this.layout = GeometryLayout.XY;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.stride = 2;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.flatCoordinates = null;\n        return _this;\n    }\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    SimpleGeometry.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromFlatCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * @abstract\n     * @return {Array<*>} Coordinates.\n     */\n    SimpleGeometry.prototype.getCoordinates = function () {\n        return abstract();\n    };\n    /**\n     * Return the first coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n     * @api\n     */\n    SimpleGeometry.prototype.getFirstCoordinate = function () {\n        return this.flatCoordinates.slice(0, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat coordinates.\n     */\n    SimpleGeometry.prototype.getFlatCoordinates = function () {\n        return this.flatCoordinates;\n    };\n    /**\n     * Return the last coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} Last point.\n     * @api\n     */\n    SimpleGeometry.prototype.getLastCoordinate = function () {\n        return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n    };\n    /**\n     * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n     * @return {import(\"./GeometryLayout.js\").default} Layout.\n     * @api\n     */\n    SimpleGeometry.prototype.getLayout = function () {\n        return this.layout;\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {SimpleGeometry} Simplified geometry.\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        if (this.simplifiedGeometryRevision !== this.getRevision()) {\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n            this.simplifiedGeometryRevision = this.getRevision();\n        }\n        // If squaredTolerance is negative or if we know that simplification will not\n        // have any effect then just return this.\n        if (squaredTolerance < 0 ||\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n                squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n            return this;\n        }\n        var simplifiedGeometry = this.getSimplifiedGeometryInternal(squaredTolerance);\n        var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n        if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n            return simplifiedGeometry;\n        }\n        else {\n            // Simplification did not actually remove any coordinates.  We now know\n            // that any calls to getSimplifiedGeometry with a squaredTolerance less\n            // than or equal to the current squaredTolerance will also not have any\n            // effect.  This allows us to short circuit simplification (saving CPU\n            // cycles) and prevents the cache of simplified geometries from filling\n            // up with useless identical copies of this geometry (saving memory).\n            this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n            return this;\n        }\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {SimpleGeometry} Simplified geometry.\n     * @protected\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        return this;\n    };\n    /**\n     * @return {number} Stride.\n     */\n    SimpleGeometry.prototype.getStride = function () {\n        return this.stride;\n    };\n    /**\n     * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     */\n    SimpleGeometry.prototype.setFlatCoordinates = function (layout, flatCoordinates) {\n        this.stride = getStrideForLayout(layout);\n        this.layout = layout;\n        this.flatCoordinates = flatCoordinates;\n    };\n    /**\n     * @abstract\n     * @param {!Array<*>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     */\n    SimpleGeometry.prototype.setCoordinates = function (coordinates, opt_layout) {\n        abstract();\n    };\n    /**\n     * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n     * @param {Array<*>} coordinates Coordinates.\n     * @param {number} nesting Nesting.\n     * @protected\n     */\n    SimpleGeometry.prototype.setLayout = function (layout, coordinates, nesting) {\n        /** @type {number} */\n        var stride;\n        if (layout) {\n            stride = getStrideForLayout(layout);\n        }\n        else {\n            for (var i = 0; i < nesting; ++i) {\n                if (coordinates.length === 0) {\n                    this.layout = GeometryLayout.XY;\n                    this.stride = 2;\n                    return;\n                }\n                else {\n                    coordinates = /** @type {Array} */ (coordinates[0]);\n                }\n            }\n            stride = coordinates.length;\n            layout = getLayoutForStride(stride);\n        }\n        this.layout = layout;\n        this.stride = stride;\n    };\n    /**\n     * Apply a transform function to the coordinates of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n     * Called with a flat array of geometry coordinates.\n     * @api\n     */\n    SimpleGeometry.prototype.applyTransform = function (transformFn) {\n        if (this.flatCoordinates) {\n            transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n            this.changed();\n        }\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @param {number} angle Rotation angle in counter-clockwise radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    SimpleGeometry.prototype.rotate = function (angle, anchor) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            rotate(flatCoordinates, 0, flatCoordinates.length, stride, angle, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n     * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    SimpleGeometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        var sy = opt_sy;\n        if (sy === undefined) {\n            sy = sx;\n        }\n        var anchor = opt_anchor;\n        if (!anchor) {\n            anchor = getCenter(this.getExtent());\n        }\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            scale(flatCoordinates, 0, flatCoordinates.length, stride, sx, sy, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    SimpleGeometry.prototype.translate = function (deltaX, deltaY) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            translate(flatCoordinates, 0, flatCoordinates.length, stride, deltaX, deltaY, flatCoordinates);\n            this.changed();\n        }\n    };\n    return SimpleGeometry;\n}(Geometry));\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n    var layout;\n    if (stride == 2) {\n        layout = GeometryLayout.XY;\n    }\n    else if (stride == 3) {\n        layout = GeometryLayout.XYZ;\n    }\n    else if (stride == 4) {\n        layout = GeometryLayout.XYZM;\n    }\n    return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n    var stride;\n    if (layout == GeometryLayout.XY) {\n        stride = 2;\n    }\n    else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n        stride = 3;\n    }\n    else if (layout == GeometryLayout.XYZM) {\n        stride = 4;\n    }\n    return /** @type {number} */ (stride);\n}\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n    var flatCoordinates = simpleGeometry.getFlatCoordinates();\n    if (!flatCoordinates) {\n        return null;\n    }\n    else {\n        var stride = simpleGeometry.getStride();\n        return transform2D(flatCoordinates, 0, flatCoordinates.length, stride, transform, opt_dest);\n    }\n}\nexport default SimpleGeometry;\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport { lerp, squaredDistance as squaredDx } from '../../math.js';\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n    var x1 = flatCoordinates[offset1];\n    var y1 = flatCoordinates[offset1 + 1];\n    var dx = flatCoordinates[offset2] - x1;\n    var dy = flatCoordinates[offset2 + 1] - y1;\n    var offset;\n    if (dx === 0 && dy === 0) {\n        offset = offset1;\n    }\n    else {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            offset = offset2;\n        }\n        else if (t > 0) {\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = lerp(flatCoordinates[offset1 + i], flatCoordinates[offset2 + i], t);\n            }\n            closestPoint.length = stride;\n            return;\n        }\n        else {\n            offset = offset1;\n        }\n    }\n    for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n    }\n    closestPoint.length = stride;\n}\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    for (offset += stride; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        var squaredDelta = squaredDx(x1, y1, x2, y2);\n        if (squaredDelta > max) {\n            max = squaredDelta;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n        offset = end;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n        offset = ends[ends.length - 1];\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    if (offset == end) {\n        return minSquaredDistance;\n    }\n    var i, squaredDistance;\n    if (maxDelta === 0) {\n        // All points are identical, so just test the first point.\n        squaredDistance = squaredDx(x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n        if (squaredDistance < minSquaredDistance) {\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[offset + i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    }\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    var index = offset + stride;\n    while (index < end) {\n        assignClosest(flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n            index += stride;\n        }\n        else {\n            // Skip ahead multiple points, because we know that all the skipped\n            // points cannot be any closer than the closest point we have found so\n            // far.  We know this because we know how close the current point is, how\n            // close the closest point we have found so far is, and the maximum\n            // distance between consecutive points.  For example, if we're currently\n            // at distance 10, the best we've found so far is 3, and that the maximum\n            // distance between consecutive points is 2, then we'll need to skip at\n            // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n            // finding a closer point.  We use Math.max(..., 1) to ensure that we\n            // always advance at least one point, to avoid an infinite loop.\n            index +=\n                stride *\n                    Math.max(((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n                        maxDelta) |\n                        0, 1);\n        }\n    }\n    if (isRing) {\n        // Check the closing segment.\n        assignClosest(flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n        }\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        minSquaredDistance = assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = end;\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset, endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        minSquaredDistance = assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = ends[ends.length - 1];\n    }\n    return minSquaredDistance;\n}\n//# sourceMappingURL=closest.js.map","/**\n * @module ol/geom/flat/deflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n    for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n        flatCoordinates[offset++] = coordinate[i];\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        var coordinate = coordinates[i];\n        for (var j = 0; j < stride; ++j) {\n            flatCoordinates[offset++] = coordinate[j];\n        }\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [opt_ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n    var ends = opt_ends ? opt_ends : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n        var end = deflateCoordinates(flatCoordinates, offset, coordinatess[j], stride);\n        ends[i++] = end;\n        offset = end;\n    }\n    ends.length = i;\n    return ends;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [opt_endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n    var endss = opt_endss ? opt_endss : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n        var ends = deflateCoordinatesArray(flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n        endss[i++] = ends;\n        offset = ends[ends.length - 1];\n    }\n    endss.length = i;\n    return endss;\n}\n//# sourceMappingURL=deflate.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\nimport { squaredDistance, squaredSegmentDistance } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [opt_simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end, stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n    var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined\n        ? opt_simplifiedFlatCoordinates\n        : [];\n    if (!highQuality) {\n        end = radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        flatCoordinates = simplifiedFlatCoordinates;\n        offset = 0;\n        stride = 2;\n    }\n    simplifiedFlatCoordinates.length = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n    return simplifiedFlatCoordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    var n = (end - offset) / stride;\n    if (n < 3) {\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    /** @type {Array<number>} */\n    var markers = new Array(n);\n    markers[0] = 1;\n    markers[n - 1] = 1;\n    /** @type {Array<number>} */\n    var stack = [offset, end - stride];\n    var index = 0;\n    while (stack.length > 0) {\n        var last = stack.pop();\n        var first = stack.pop();\n        var maxSquaredDistance = 0;\n        var x1 = flatCoordinates[first];\n        var y1 = flatCoordinates[first + 1];\n        var x2 = flatCoordinates[last];\n        var y2 = flatCoordinates[last + 1];\n        for (var i = first + stride; i < last; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            var squaredDistance_1 = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n            if (squaredDistance_1 > maxSquaredDistance) {\n                index = i;\n                maxSquaredDistance = squaredDistance_1;\n            }\n        }\n        if (maxSquaredDistance > squaredTolerance) {\n            markers[(index - offset) / stride] = 1;\n            if (first + stride < index) {\n                stack.push(first, index);\n            }\n            if (index + stride < last) {\n                stack.push(index, last);\n            }\n        }\n    }\n    for (var i = 0; i < n; ++i) {\n        if (markers[i]) {\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride + 1];\n        }\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(flatCoordinates, offset, endss, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    if (end <= offset + stride) {\n        // zero or one point, no simplification possible, so copy and return\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    // copy first point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    var x2 = x1;\n    var y2 = y1;\n    for (offset += stride; offset < end; offset += stride) {\n        x2 = flatCoordinates[offset];\n        y2 = flatCoordinates[offset + 1];\n        if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n            // copy point at offset\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    if (x2 != x1 || y2 != y1) {\n        // copy last point\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n    return tolerance * Math.round(value / tolerance);\n}\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    // do nothing if the line is empty\n    if (offset == end) {\n        return simplifiedOffset;\n    }\n    // snap the first coordinate (P1)\n    var x1 = snap(flatCoordinates[offset], tolerance);\n    var y1 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // add the first coordinate to the output\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    // find the next coordinate that does not snap to the same value as the first\n    // coordinate (P2)\n    var x2, y2;\n    do {\n        x2 = snap(flatCoordinates[offset], tolerance);\n        y2 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        if (offset == end) {\n            // all coordinates snap to the same value, the line collapses to a point\n            // push the last snapped value anyway to ensure that the output contains\n            // at least two points\n            // FIXME should we really return at least two points anyway?\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            return simplifiedOffset;\n        }\n    } while (x2 == x1 && y2 == y1);\n    while (offset < end) {\n        // snap the next coordinate (P3)\n        var x3 = snap(flatCoordinates[offset], tolerance);\n        var y3 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        // skip P3 if it is equal to P2\n        if (x3 == x2 && y3 == y2) {\n            continue;\n        }\n        // calculate the delta between P1 and P2\n        var dx1 = x2 - x1;\n        var dy1 = y2 - y1;\n        // calculate the delta between P3 and P1\n        var dx2 = x3 - x1;\n        var dy2 = y3 - y1;\n        // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n        // P1 in the same direction then P2 is on the straight line between P1 and\n        // P3\n        if (dx1 * dy2 == dy1 * dx2 &&\n            ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n            ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n            // discard P2 and set P2 = P3\n            x2 = x3;\n            y2 = y3;\n            continue;\n        }\n        // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n        // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n        // and continue with P1 = P2 and P2 = P3\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n        x1 = x2;\n        y1 = y2;\n        x2 = x3;\n        y2 = y3;\n    }\n    // add the last point (P2)\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(flatCoordinates, offset, endss, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n//# sourceMappingURL=simplify.js.map","/**\n * @module ol/geom/flat/segments\n */\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n    var ret;\n    offset += stride;\n    for (; offset < end; offset += stride) {\n        ret = callback(flatCoordinates.slice(offset - stride, offset), flatCoordinates.slice(offset, offset + stride));\n        if (ret) {\n            return ret;\n        }\n    }\n    return false;\n}\n//# sourceMappingURL=segments.js.map","/**\n * @module ol/geom/flat/inflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [opt_coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n    var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        coordinates[i++] = flatCoordinates.slice(j, j + stride);\n    }\n    coordinates.length = i;\n    return coordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [opt_coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n    var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n    var i = 0;\n    for (var j = 0, jj = ends.length; j < jj; ++j) {\n        var end = ends[j];\n        coordinatess[i++] = inflateCoordinates(flatCoordinates, offset, end, stride, coordinatess[i]);\n        offset = end;\n    }\n    coordinatess.length = i;\n    return coordinatess;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [opt_coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n    var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n    var i = 0;\n    for (var j = 0, jj = endss.length; j < jj; ++j) {\n        var ends = endss[j];\n        coordinatesss[i++] = inflateCoordinatesArray(flatCoordinates, offset, ends, stride, coordinatesss[i]);\n        offset = ends[ends.length - 1];\n    }\n    coordinatesss.length = i;\n    return coordinatesss;\n}\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/geom/flat/interpolate\n */\nimport { binarySearch } from '../../array.js';\nimport { lerp } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [opt_dest] Destination.\n * @param {number} [opt_dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest, opt_dimension) {\n    var o, t;\n    var n = (end - offset) / stride;\n    if (n === 1) {\n        o = offset;\n    }\n    else if (n === 2) {\n        o = offset;\n        t = fraction;\n    }\n    else if (n !== 0) {\n        var x1 = flatCoordinates[offset];\n        var y1 = flatCoordinates[offset + 1];\n        var length_1 = 0;\n        var cumulativeLengths = [0];\n        for (var i = offset + stride; i < end; i += stride) {\n            var x2 = flatCoordinates[i];\n            var y2 = flatCoordinates[i + 1];\n            length_1 += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n            cumulativeLengths.push(length_1);\n            x1 = x2;\n            y1 = y2;\n        }\n        var target = fraction * length_1;\n        var index = binarySearch(cumulativeLengths, target);\n        if (index < 0) {\n            t =\n                (target - cumulativeLengths[-index - 2]) /\n                    (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n            o = offset + (-index - 2) * stride;\n        }\n        else {\n            o = offset + index * stride;\n        }\n    }\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var dest = opt_dest ? opt_dest : new Array(dimension);\n    for (var i = 0; i < dimension; ++i) {\n        dest[i] =\n            o === undefined\n                ? NaN\n                : t === undefined\n                    ? flatCoordinates[o + i]\n                    : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n    if (end == offset) {\n        return null;\n    }\n    var coordinate;\n    if (m < flatCoordinates[offset + stride - 1]) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(offset, offset + stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    else if (flatCoordinates[end - 1] < m) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(end - stride, end);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    // FIXME use O(1) search\n    if (m == flatCoordinates[offset + stride - 1]) {\n        return flatCoordinates.slice(offset, offset + stride);\n    }\n    var lo = offset / stride;\n    var hi = end / stride;\n    while (lo < hi) {\n        var mid = (lo + hi) >> 1;\n        if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n            hi = mid;\n        }\n        else {\n            lo = mid + 1;\n        }\n    }\n    var m0 = flatCoordinates[lo * stride - 1];\n    if (m == m0) {\n        return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n    }\n    var m1 = flatCoordinates[(lo + 1) * stride - 1];\n    var t = (m - m0) / (m1 - m0);\n    coordinate = [];\n    for (var i = 0; i < stride - 1; ++i) {\n        coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i], flatCoordinates[lo * stride + i], t));\n    }\n    coordinate.push(m);\n    return coordinate;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n    if (interpolate) {\n        return lineStringCoordinateAtM(flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n    }\n    var coordinate;\n    if (m < flatCoordinates[stride - 1]) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(0, stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    if (flatCoordinates[flatCoordinates.length - 1] < m) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        if (offset == end) {\n            continue;\n        }\n        if (m < flatCoordinates[offset + stride - 1]) {\n            return null;\n        }\n        else if (m <= flatCoordinates[end - 1]) {\n            return lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, false);\n        }\n        offset = end;\n    }\n    return null;\n}\n//# sourceMappingURL=interpolate.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport { forEachCorner } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n    var outside = forEachCorner(extent, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n        return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n    return !outside;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n    // https://geomalgorithms.com/a03-_inclusion.html\n    // Copyright 2000 softSurfer, 2012 Dan Sunday\n    // This code may be freely used and modified for any purpose\n    // providing that this copyright notice is included with it.\n    // SoftSurfer makes no warranty for this code, and cannot be held\n    // liable for any real or imagined damage resulting from its use.\n    // Users of this code must verify correctness for their application.\n    var wn = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        if (y1 <= y) {\n            if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n                wn++;\n            }\n        }\n        else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n            wn--;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return wn !== 0;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n    if (ends.length === 0) {\n        return false;\n    }\n    if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n        return false;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n    if (endss.length === 0) {\n        return false;\n    }\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=contains.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport { containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment, } from '../../extent.js';\nimport { forEach as forEachSegment } from './segments.js';\nimport { linearRingContainsExtent, linearRingContainsXY } from './contains.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n    var coordinatesExtent = extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\n    if (!intersects(extent, coordinatesExtent)) {\n        return false;\n    }\n    if (containsExtent(extent, coordinatesExtent)) {\n        return true;\n    }\n    if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n        return true;\n    }\n    if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n        return true;\n    }\n    return forEachSegment(flatCoordinates, offset, end, stride, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n        return intersectsSegment(extent, point1, point2);\n    });\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        if (intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)) {\n            return true;\n        }\n        offset = ends[i];\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n    if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n    if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n        return false;\n    }\n    if (ends.length === 1) {\n        return true;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n            if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=intersectsextent.js.map","/**\n * @module ol/geom/flat/length\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    var length = 0;\n    for (var i = offset + stride; i < end; i += stride) {\n        var x2 = flatCoordinates[i];\n        var y2 = flatCoordinates[i + 1];\n        length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n        x1 = x2;\n        y1 = y2;\n    }\n    return length;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n    var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n    var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n    var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n    perimeter += Math.sqrt(dx * dx + dy * dy);\n    return perimeter;\n}\n//# sourceMappingURL=length.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { douglasPeucker } from './flat/simplify.js';\nimport { extend } from '../array.js';\nimport { forEach as forEachSegment } from './flat/segments.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { interpolatePoint, lineStringCoordinateAtM } from './flat/interpolate.js';\nimport { intersectsLineString } from './flat/intersectsextent.js';\nimport { lineStringLength } from './flat/length.js';\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nvar LineString = /** @class */ (function (_super) {\n    __extends(LineString, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     */\n    function LineString(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatMidpoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatMidpointRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed coordinate to the coordinates of the linestring.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @api\n     */\n    LineString.prototype.appendCoordinate = function (coordinate) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = coordinate.slice();\n        }\n        else {\n            extend(this.flatCoordinates, coordinate);\n        }\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LineString} Clone.\n     * @api\n     */\n    LineString.prototype.clone = function () {\n        var lineString = new LineString(this.flatCoordinates.slice(), this.layout);\n        lineString.applyProperties(this);\n        return lineString;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    LineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Iterate over each segment, calling the provided callback.\n     * If the callback returns a truthy value the function returns that\n     * value immediately. Otherwise the function returns `false`.\n     *\n     * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n     *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n     * @return {T|boolean} Value.\n     * @template T,S\n     * @api\n     */\n    LineString.prototype.forEachSegment = function (callback) {\n        return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n    };\n    /**\n     * Returns the coordinate at `m` using linear interpolation, or `null` if no\n     * such coordinate exists.\n     *\n     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n     * M will return the first coordinate and Ms greater than the last M will\n     * return the last coordinate.\n     *\n     * @param {number} m M.\n     * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    LineString.prototype.getCoordinateAtM = function (m, opt_extrapolate) {\n        if (this.layout != GeometryLayout.XYM &&\n            this.layout != GeometryLayout.XYZM) {\n            return null;\n        }\n        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n        return lineStringCoordinateAtM(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, m, extrapolate);\n    };\n    /**\n     * Return the coordinates of the linestring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @api\n     */\n    LineString.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinate at the provided fraction along the linestring.\n     * The `fraction` is a number between 0 and 1, where 0 is the start of the\n     * linestring and 1 is the end.\n     * @param {number} fraction Fraction.\n     * @param {import(\"../coordinate.js\").Coordinate} [opt_dest] Optional coordinate whose values will\n     *     be modified. If not provided, a new coordinate will be returned.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n     * @api\n     */\n    LineString.prototype.getCoordinateAt = function (fraction, opt_dest) {\n        return interpolatePoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, fraction, opt_dest, this.stride);\n    };\n    /**\n     * Return the length of the linestring on projected plane.\n     * @return {number} Length (on projected plane).\n     * @api\n     */\n    LineString.prototype.getLength = function () {\n        return lineStringLength(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat midpoint.\n     */\n    LineString.prototype.getFlatMidpoint = function () {\n        if (this.flatMidpointRevision_ != this.getRevision()) {\n            this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n            this.flatMidpointRevision_ = this.getRevision();\n        }\n        return this.flatMidpoint_;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {LineString} Simplified LineString.\n     * @protected\n     */\n    LineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    LineString.prototype.getType = function () {\n        return GeometryType.LINE_STRING;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    LineString.prototype.intersectsExtent = function (extent) {\n        return intersectsLineString(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the linestring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     * @api\n     */\n    LineString.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LineString;\n}(SimpleGeometry));\nexport default LineString;\n//# sourceMappingURL=LineString.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiLineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { arrayMaxSquaredDelta, assignClosestArrayPoint } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { douglasPeuckerArray } from './flat/simplify.js';\nimport { extend } from '../array.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { interpolatePoint, lineStringsCoordinateAtM, } from './flat/interpolate.js';\nimport { intersectsLineStringArray } from './flat/intersectsextent.js';\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nvar MultiLineString = /** @class */ (function (_super) {\n    __extends(MultiLineString, _super);\n    /**\n     * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n     *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n     *     combination with `opt_layout` and `opt_ends` are also accepted.)\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     * @param {Array<number>} [opt_ends] Flat coordinate ends for internal use.\n     */\n    function MultiLineString(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (Array.isArray(coordinates[0])) {\n            _this.setCoordinates(\n            /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        else if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            var layout = _this.getLayout();\n            var lineStrings = /** @type {Array<LineString>} */ (coordinates);\n            var flatCoordinates = [];\n            var ends = [];\n            for (var i = 0, ii = lineStrings.length; i < ii; ++i) {\n                var lineString = lineStrings[i];\n                if (i === 0) {\n                    layout = lineString.getLayout();\n                }\n                extend(flatCoordinates, lineString.getFlatCoordinates());\n                ends.push(flatCoordinates.length);\n            }\n            _this.setFlatCoordinates(layout, flatCoordinates);\n            _this.ends_ = ends;\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linestring to the multilinestring.\n     * @param {LineString} lineString LineString.\n     * @api\n     */\n    MultiLineString.prototype.appendLineString = function (lineString) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = lineString.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiLineString} Clone.\n     * @api\n     */\n    MultiLineString.prototype.clone = function () {\n        var multiLineString = new MultiLineString(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n        multiLineString.applyProperties(this);\n        return multiLineString;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    MultiLineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Returns the coordinate at `m` using linear interpolation, or `null` if no\n     * such coordinate exists.\n     *\n     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n     * M will return the first coordinate and Ms greater than the last M will\n     * return the last coordinate.\n     *\n     * `opt_interpolate` controls interpolation between consecutive LineStrings\n     * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n     * will be linearly interpolated between the last coordinate of one LineString\n     * and the first coordinate of the next LineString.  If `opt_interpolate` is\n     * `false` then the function will return `null` for Ms falling between\n     * LineStrings.\n     *\n     * @param {number} m M.\n     * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n     * @param {boolean} [opt_interpolate] Interpolate. Default is `false`.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    MultiLineString.prototype.getCoordinateAtM = function (m, opt_extrapolate, opt_interpolate) {\n        if ((this.layout != GeometryLayout.XYM &&\n            this.layout != GeometryLayout.XYZM) ||\n            this.flatCoordinates.length === 0) {\n            return null;\n        }\n        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n        var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n        return lineStringsCoordinateAtM(this.flatCoordinates, 0, this.ends_, this.stride, m, extrapolate, interpolate);\n    };\n    /**\n     * Return the coordinates of the multilinestring.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @api\n     */\n    MultiLineString.prototype.getCoordinates = function () {\n        return inflateCoordinatesArray(this.flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    MultiLineString.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * Return the linestring at the specified index.\n     * @param {number} index Index.\n     * @return {LineString} LineString.\n     * @api\n     */\n    MultiLineString.prototype.getLineString = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LineString(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linestrings of this multilinestring.\n     * @return {Array<LineString>} LineStrings.\n     * @api\n     */\n    MultiLineString.prototype.getLineStrings = function () {\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var layout = this.layout;\n        /** @type {Array<LineString>} */\n        var lineStrings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var lineString = new LineString(flatCoordinates.slice(offset, end), layout);\n            lineStrings.push(lineString);\n            offset = end;\n        }\n        return lineStrings;\n    };\n    /**\n     * @return {Array<number>} Flat midpoints.\n     */\n    MultiLineString.prototype.getFlatMidpoints = function () {\n        var midpoints = [];\n        var flatCoordinates = this.flatCoordinates;\n        var offset = 0;\n        var ends = this.ends_;\n        var stride = this.stride;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var midpoint = interpolatePoint(flatCoordinates, offset, end, stride, 0.5);\n            extend(midpoints, midpoint);\n            offset = end;\n        }\n        return midpoints;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {MultiLineString} Simplified MultiLineString.\n     * @protected\n     */\n    MultiLineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = douglasPeuckerArray(this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new MultiLineString(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    MultiLineString.prototype.getType = function () {\n        return GeometryType.MULTI_LINE_STRING;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    MultiLineString.prototype.intersectsExtent = function (extent) {\n        return intersectsLineStringArray(this.flatCoordinates, 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the multilinestring.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {GeometryLayout} [opt_layout] Layout.\n     * @api\n     */\n    MultiLineString.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return MultiLineString;\n}(SimpleGeometry));\nexport default MultiLineString;\n//# sourceMappingURL=MultiLineString.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { containsXY, createOrUpdateFromCoordinate } from '../extent.js';\nimport { deflateCoordinate } from './flat/deflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     */\n    function Point(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        _this.setCoordinates(coordinates, opt_layout);\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Point} Clone.\n     * @api\n     */\n    Point.prototype.clone = function () {\n        var point = new Point(this.flatCoordinates.slice(), this.layout);\n        point.applyProperties(this);\n        return point;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Point.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        var flatCoordinates = this.flatCoordinates;\n        var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n        if (squaredDistance < minSquaredDistance) {\n            var stride = this.stride;\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    };\n    /**\n     * Return the coordinate of the point.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n     * @api\n     */\n    Point.prototype.getCoordinates = function () {\n        return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    Point.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    Point.prototype.getType = function () {\n        return GeometryType.POINT;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    Point.prototype.intersectsExtent = function (extent) {\n        return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n    };\n    /**\n     * @param {!Array<*>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     * @api\n     */\n    Point.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 0);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinate(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return Point;\n}(SimpleGeometry));\nexport default Point;\n//# sourceMappingURL=Point.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiPoint\n */\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { closestSquaredDistanceXY, containsXY } from '../extent.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { extend } from '../array.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nvar MultiPoint = /** @class */ (function (_super) {\n    __extends(MultiPoint, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     */\n    function MultiPoint(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        if (opt_layout && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed point to this multipoint.\n     * @param {Point} point Point.\n     * @api\n     */\n    MultiPoint.prototype.appendPoint = function (point) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = point.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, point.getFlatCoordinates());\n        }\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiPoint} Clone.\n     * @api\n     */\n    MultiPoint.prototype.clone = function () {\n        var multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);\n        multiPoint.applyProperties(this);\n        return multiPoint;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    MultiPoint.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        var flatCoordinates = this.flatCoordinates;\n        var stride = this.stride;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var squaredDistance = squaredDx(x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n            if (squaredDistance < minSquaredDistance) {\n                minSquaredDistance = squaredDistance;\n                for (var j = 0; j < stride; ++j) {\n                    closestPoint[j] = flatCoordinates[i + j];\n                }\n                closestPoint.length = stride;\n            }\n        }\n        return minSquaredDistance;\n    };\n    /**\n     * Return the coordinates of the multipoint.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @api\n     */\n    MultiPoint.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the point at the specified index.\n     * @param {number} index Index.\n     * @return {Point} Point.\n     * @api\n     */\n    MultiPoint.prototype.getPoint = function (index) {\n        var n = !this.flatCoordinates\n            ? 0\n            : this.flatCoordinates.length / this.stride;\n        if (index < 0 || n <= index) {\n            return null;\n        }\n        return new Point(this.flatCoordinates.slice(index * this.stride, (index + 1) * this.stride), this.layout);\n    };\n    /**\n     * Return the points of this multipoint.\n     * @return {Array<Point>} Points.\n     * @api\n     */\n    MultiPoint.prototype.getPoints = function () {\n        var flatCoordinates = this.flatCoordinates;\n        var layout = this.layout;\n        var stride = this.stride;\n        /** @type {Array<Point>} */\n        var points = [];\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var point = new Point(flatCoordinates.slice(i, i + stride), layout);\n            points.push(point);\n        }\n        return points;\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    MultiPoint.prototype.getType = function () {\n        return GeometryType.MULTI_POINT;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    MultiPoint.prototype.intersectsExtent = function (extent) {\n        var flatCoordinates = this.flatCoordinates;\n        var stride = this.stride;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            if (containsXY(extent, x, y)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Set the coordinates of the multipoint.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     * @api\n     */\n    MultiPoint.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return MultiPoint;\n}(SimpleGeometry));\nexport default MultiPoint;\n//# sourceMappingURL=MultiPoint.js.map","/**\n * @module ol/geom/flat/area\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n    var twiceArea = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        twiceArea += y1 * x2 - x1 * y2;\n        x1 = x2;\n        y1 = y2;\n    }\n    return twiceArea / 2;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n    var area = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        area += linearRing(flatCoordinates, offset, end, stride);\n        offset = end;\n    }\n    return area;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var area = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        area += linearRings(flatCoordinates, offset, ends, stride);\n        offset = ends[ends.length - 1];\n    }\n    return area;\n}\n//# sourceMappingURL=area.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { douglasPeucker } from './flat/simplify.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { linearRing as linearRingArea } from './flat/area.js';\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = /** @class */ (function (_super) {\n    __extends(LinearRing, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     */\n    function LinearRing(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LinearRing} Clone.\n     * @api\n     */\n    LinearRing.prototype.clone = function () {\n        return new LinearRing(this.flatCoordinates.slice(), this.layout);\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    LinearRing.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Return the area of the linear ring on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    LinearRing.prototype.getArea = function () {\n        return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinates of the linear ring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @api\n     */\n    LinearRing.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {LinearRing} Simplified LinearRing.\n     * @protected\n     */\n    LinearRing.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    LinearRing.prototype.getType = function () {\n        return GeometryType.LINEAR_RING;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    LinearRing.prototype.intersectsExtent = function (extent) {\n        return false;\n    };\n    /**\n     * Set the coordinates of the linear ring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     * @api\n     */\n    LinearRing.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LinearRing;\n}(SimpleGeometry));\nexport default LinearRing;\n//# sourceMappingURL=LinearRing.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport { linearRingsContainsXY } from './contains.js';\nimport { numberSafeCompareFunction } from '../../array.js';\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n    var i, ii, x, x1, x2, y1, y2;\n    var y = flatCenters[flatCentersOffset + 1];\n    /** @type {Array<number>} */\n    var intersections = [];\n    // Calculate intersections with the horizontal line\n    for (var r = 0, rr = ends.length; r < rr; ++r) {\n        var end = ends[r];\n        x1 = flatCoordinates[end - stride];\n        y1 = flatCoordinates[end - stride + 1];\n        for (i = offset; i < end; i += stride) {\n            x2 = flatCoordinates[i];\n            y2 = flatCoordinates[i + 1];\n            if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n                x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n                intersections.push(x);\n            }\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    // Find the longest segment of the horizontal line that has its center point\n    // inside the linear ring.\n    var pointX = NaN;\n    var maxSegmentLength = -Infinity;\n    intersections.sort(numberSafeCompareFunction);\n    x1 = intersections[0];\n    for (i = 1, ii = intersections.length; i < ii; ++i) {\n        x2 = intersections[i];\n        var segmentLength = Math.abs(x2 - x1);\n        if (segmentLength > maxSegmentLength) {\n            x = (x1 + x2) / 2;\n            if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n                pointX = x;\n                maxSegmentLength = segmentLength;\n            }\n        }\n        x1 = x2;\n    }\n    if (isNaN(pointX)) {\n        // There is no horizontal line that has its center point inside the linear\n        // ring.  Use the center of the the linear ring's extent.\n        pointX = flatCenters[flatCentersOffset];\n    }\n    if (opt_dest) {\n        opt_dest.push(pointX, y, maxSegmentLength);\n        return opt_dest;\n    }\n    else {\n        return [pointX, y, maxSegmentLength];\n    }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n    var interiorPoints = [];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        interiorPoints = getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n        offset = ends[ends.length - 1];\n    }\n    return interiorPoints;\n}\n//# sourceMappingURL=interiorpoint.js.map","/**\n * @module ol/geom/flat/reverse\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n    while (offset < end - stride) {\n        for (var i = 0; i < stride; ++i) {\n            var tmp = flatCoordinates[offset + i];\n            flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n            flatCoordinates[end - stride + i] = tmp;\n        }\n        offset += stride;\n        end -= stride;\n    }\n}\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport { coordinates as reverseCoordinates } from './reverse.js';\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n    // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n    // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n    var edge = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        edge += (x2 - x1) * (y2 + y1);\n        x1 = x2;\n        y1 = y2;\n    }\n    return edge === 0 ? undefined : edge > 0;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        if (i === 0) {\n            if ((right && isClockwise) || (!right && !isClockwise)) {\n                return false;\n            }\n        }\n        else {\n            if ((right && !isClockwise) || (!right && isClockwise)) {\n                return false;\n            }\n        }\n        offset = end;\n    }\n    return true;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)) {\n            return false;\n        }\n        if (ends.length) {\n            offset = ends[ends.length - 1];\n        }\n    }\n    return true;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        var reverse = i === 0\n            ? (right && isClockwise) || (!right && !isClockwise)\n            : (right && !isClockwise) || (!right && isClockwise);\n        if (reverse) {\n            reverseCoordinates(flatCoordinates, offset, end, stride);\n        }\n        offset = end;\n    }\n    return offset;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        offset = orientLinearRings(flatCoordinates, offset, endss[i], stride, opt_right);\n    }\n    return offset;\n}\n//# sourceMappingURL=orient.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { arrayMaxSquaredDelta, assignClosestArrayPoint } from './flat/closest.js';\nimport { closestSquaredDistanceXY, getCenter } from '../extent.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { extend } from '../array.js';\nimport { getInteriorPointOfArray } from './flat/interiorpoint.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { intersectsLinearRingArray } from './flat/intersectsextent.js';\nimport { linearRingsAreOriented, orientLinearRings } from './flat/orient.js';\nimport { linearRings as linearRingsArea } from './flat/area.js';\nimport { linearRingsContainsXY } from './flat/contains.js';\nimport { modulo } from '../math.js';\nimport { quantizeArray } from './flat/simplify.js';\nimport { offset as sphereOffset } from '../sphere.js';\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = /** @class */ (function (_super) {\n    __extends(Polygon, _super);\n    /**\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n     *     Array of linear rings that define the polygon. The first linear ring of the\n     *     array defines the outer-boundary or surface of the polygon. Each subsequent\n     *     linear ring defines a hole in the surface of the polygon. A linear ring is\n     *     an array of vertices' coordinates where the first coordinate and the last are\n     *     equivalent. (For internal use, flat coordinates in combination with\n     *     `opt_layout` and `opt_ends` are also accepted.)\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     * @param {Array<number>} [opt_ends] Ends (for internal use with flat coordinates).\n     */\n    function Polygon(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointRevision_ = -1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatInteriorPoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linear ring to this polygon.\n     * @param {LinearRing} linearRing Linear ring.\n     * @api\n     */\n    Polygon.prototype.appendLinearRing = function (linearRing) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Polygon} Clone.\n     * @api\n     */\n    Polygon.prototype.clone = function () {\n        var polygon = new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n        polygon.applyProperties(this);\n        return polygon;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Polygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    Polygon.prototype.containsXY = function (x, y) {\n        return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the polygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    Polygon.prototype.getArea = function () {\n        return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for polygons.\n     *\n     * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @api\n     */\n    Polygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    Polygon.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * @return {Array<number>} Interior point.\n     */\n    Polygon.prototype.getFlatInteriorPoint = function () {\n        if (this.flatInteriorPointRevision_ != this.getRevision()) {\n            var flatCenter = getCenter(this.getExtent());\n            this.flatInteriorPoint_ = getInteriorPointOfArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, flatCenter, 0);\n            this.flatInteriorPointRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoint_;\n    };\n    /**\n     * Return an interior point of the polygon.\n     * @return {Point} Interior point as XYM coordinate, where M is the\n     * length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    Polygon.prototype.getInteriorPoint = function () {\n        return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n    };\n    /**\n     * Return the number of rings of the polygon,  this includes the exterior\n     * ring and any interior rings.\n     *\n     * @return {number} Number of rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRingCount = function () {\n        return this.ends_.length;\n    };\n    /**\n     * Return the Nth linear ring of the polygon geometry. Return `null` if the\n     * given index is out of range.\n     * The exterior linear ring is available at index `0` and the interior rings\n     * at index `1` and beyond.\n     *\n     * @param {number} index Index.\n     * @return {LinearRing} Linear ring.\n     * @api\n     */\n    Polygon.prototype.getLinearRing = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LinearRing(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linear rings of the polygon.\n     * @return {Array<LinearRing>} Linear rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRings = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var linearRings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n            linearRings.push(linearRing);\n            offset = end;\n        }\n        return linearRings;\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    Polygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length = orientLinearRings(this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {Polygon} Simplified Polygon.\n     * @protected\n     */\n    Polygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = quantizeArray(this.flatCoordinates, 0, this.ends_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    Polygon.prototype.getType = function () {\n        return GeometryType.POLYGON;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    Polygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the polygon.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     * @api\n     */\n    Polygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return Polygon;\n}(SimpleGeometry));\nexport default Polygon;\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [opt_n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [opt_sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n    var n = opt_n ? opt_n : 32;\n    /** @type {Array<number>} */\n    var flatCoordinates = [];\n    for (var i = 0; i < n; ++i) {\n        extend(flatCoordinates, sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius));\n    }\n    flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [\n        flatCoordinates.length,\n    ]);\n}\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var flatCoordinates = [\n        minX,\n        minY,\n        minX,\n        maxY,\n        maxX,\n        maxY,\n        maxX,\n        minY,\n        minX,\n        minY,\n    ];\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [\n        flatCoordinates.length,\n    ]);\n}\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [opt_sides] Number of sides of the polygon. Default is 32.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n    var sides = opt_sides ? opt_sides : 32;\n    var stride = circle.getStride();\n    var layout = circle.getLayout();\n    var center = circle.getCenter();\n    var arrayLength = stride * (sides + 1);\n    var flatCoordinates = new Array(arrayLength);\n    for (var i = 0; i < arrayLength; i += stride) {\n        flatCoordinates[i] = 0;\n        flatCoordinates[i + 1] = 0;\n        for (var j = 2; j < stride; j++) {\n            flatCoordinates[i + j] = center[j];\n        }\n    }\n    var ends = [flatCoordinates.length];\n    var polygon = new Polygon(flatCoordinates, layout, ends);\n    makeRegular(polygon, center, circle.getRadius(), opt_angle);\n    return polygon;\n}\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n    var flatCoordinates = polygon.getFlatCoordinates();\n    var stride = polygon.getStride();\n    var sides = flatCoordinates.length / stride - 1;\n    var startAngle = opt_angle ? opt_angle : 0;\n    for (var i = 0; i <= sides; ++i) {\n        var offset = i * stride;\n        var angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n        flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n        flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n    }\n    polygon.changed();\n}\n//# sourceMappingURL=Polygon.js.map","/**\n * @module ol/geom/flat/center\n */\nimport { createEmpty, createOrUpdateFromFlatCoordinates } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var flatCenters = [];\n    var extent = createEmpty();\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n        flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n        offset = ends[ends.length - 1];\n    }\n    return flatCenters;\n}\n//# sourceMappingURL=center.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiPolygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta, } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateMultiCoordinatesArray } from './flat/deflate.js';\nimport { extend } from '../array.js';\nimport { getInteriorPointsOfMultiArray } from './flat/interiorpoint.js';\nimport { inflateMultiCoordinatesArray } from './flat/inflate.js';\nimport { intersectsLinearRingMultiArray } from './flat/intersectsextent.js';\nimport { linearRingssAreOriented, orientLinearRingsArray, } from './flat/orient.js';\nimport { linearRingss as linearRingssArea } from './flat/area.js';\nimport { linearRingss as linearRingssCenter } from './flat/center.js';\nimport { linearRingssContainsXY } from './flat/contains.js';\nimport { quantizeMultiArray } from './flat/simplify.js';\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nvar MultiPolygon = /** @class */ (function (_super) {\n    __extends(MultiPolygon, _super);\n    /**\n     * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     * @param {Array<Array<number>>} [opt_endss] Array of ends for internal use with flat coordinates.\n     */\n    function MultiPolygon(coordinates, opt_layout, opt_endss) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<Array<number>>}\n         * @private\n         */\n        _this.endss_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointsRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.flatInteriorPoints_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (!opt_endss && !Array.isArray(coordinates[0])) {\n            var layout = _this.getLayout();\n            var polygons = /** @type {Array<Polygon>} */ (coordinates);\n            var flatCoordinates = [];\n            var endss = [];\n            for (var i = 0, ii = polygons.length; i < ii; ++i) {\n                var polygon = polygons[i];\n                if (i === 0) {\n                    layout = polygon.getLayout();\n                }\n                var offset = flatCoordinates.length;\n                var ends = polygon.getEnds();\n                for (var j = 0, jj = ends.length; j < jj; ++j) {\n                    ends[j] += offset;\n                }\n                extend(flatCoordinates, polygon.getFlatCoordinates());\n                endss.push(ends);\n            }\n            opt_layout = layout;\n            coordinates = flatCoordinates;\n            opt_endss = endss;\n        }\n        if (opt_layout !== undefined && opt_endss) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n            _this.endss_ = opt_endss;\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed polygon to this multipolygon.\n     * @param {Polygon} polygon Polygon.\n     * @api\n     */\n    MultiPolygon.prototype.appendPolygon = function (polygon) {\n        /** @type {Array<number>} */\n        var ends;\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = polygon.getFlatCoordinates().slice();\n            ends = polygon.getEnds().slice();\n            this.endss_.push();\n        }\n        else {\n            var offset = this.flatCoordinates.length;\n            extend(this.flatCoordinates, polygon.getFlatCoordinates());\n            ends = polygon.getEnds().slice();\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                ends[i] += offset;\n            }\n        }\n        this.endss_.push(ends);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiPolygon} Clone.\n     * @api\n     */\n    MultiPolygon.prototype.clone = function () {\n        var len = this.endss_.length;\n        var newEndss = new Array(len);\n        for (var i = 0; i < len; ++i) {\n            newEndss[i] = this.endss_[i].slice();\n        }\n        var multiPolygon = new MultiPolygon(this.flatCoordinates.slice(), this.layout, newEndss);\n        multiPolygon.applyProperties(this);\n        return multiPolygon;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    MultiPolygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(this.flatCoordinates, 0, this.endss_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestMultiArrayPoint(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    MultiPolygon.prototype.containsXY = function (x, y) {\n        return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the multipolygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    MultiPolygon.prototype.getArea = function () {\n        return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for multi-polygons.\n     *\n     * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n     * @api\n     */\n    MultiPolygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRingsArray(flatCoordinates, 0, this.endss_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateMultiCoordinatesArray(flatCoordinates, 0, this.endss_, this.stride);\n    };\n    /**\n     * @return {Array<Array<number>>} Endss.\n     */\n    MultiPolygon.prototype.getEndss = function () {\n        return this.endss_;\n    };\n    /**\n     * @return {Array<number>} Flat interior points.\n     */\n    MultiPolygon.prototype.getFlatInteriorPoints = function () {\n        if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n            var flatCenters = linearRingssCenter(this.flatCoordinates, 0, this.endss_, this.stride);\n            this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, flatCenters);\n            this.flatInteriorPointsRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoints_;\n    };\n    /**\n     * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n     * @return {MultiPoint} Interior points as XYM coordinates, where M is\n     * the length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    MultiPolygon.prototype.getInteriorPoints = function () {\n        return new MultiPoint(this.getFlatInteriorPoints().slice(), GeometryLayout.XYM);\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    MultiPolygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length = orientLinearRingsArray(this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {MultiPolygon} Simplified MultiPolygon.\n     * @protected\n     */\n    MultiPolygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEndss = [];\n        simplifiedFlatCoordinates.length = quantizeMultiArray(this.flatCoordinates, 0, this.endss_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEndss);\n        return new MultiPolygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEndss);\n    };\n    /**\n     * Return the polygon at the specified index.\n     * @param {number} index Index.\n     * @return {Polygon} Polygon.\n     * @api\n     */\n    MultiPolygon.prototype.getPolygon = function (index) {\n        if (index < 0 || this.endss_.length <= index) {\n            return null;\n        }\n        var offset;\n        if (index === 0) {\n            offset = 0;\n        }\n        else {\n            var prevEnds = this.endss_[index - 1];\n            offset = prevEnds[prevEnds.length - 1];\n        }\n        var ends = this.endss_[index].slice();\n        var end = ends[ends.length - 1];\n        if (offset !== 0) {\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                ends[i] -= offset;\n            }\n        }\n        return new Polygon(this.flatCoordinates.slice(offset, end), this.layout, ends);\n    };\n    /**\n     * Return the polygons of this multipolygon.\n     * @return {Array<Polygon>} Polygons.\n     * @api\n     */\n    MultiPolygon.prototype.getPolygons = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var endss = this.endss_;\n        var polygons = [];\n        var offset = 0;\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n            var ends = endss[i].slice();\n            var end = ends[ends.length - 1];\n            if (offset !== 0) {\n                for (var j = 0, jj = ends.length; j < jj; ++j) {\n                    ends[j] -= offset;\n                }\n            }\n            var polygon = new Polygon(flatCoordinates.slice(offset, end), layout, ends);\n            polygons.push(polygon);\n            offset = end;\n        }\n        return polygons;\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    MultiPolygon.prototype.getType = function () {\n        return GeometryType.MULTI_POLYGON;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    MultiPolygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the multipolygon.\n     * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     * @api\n     */\n    MultiPolygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 3);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var endss = deflateMultiCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n        if (endss.length === 0) {\n            this.flatCoordinates.length = 0;\n        }\n        else {\n            var lastEnds = endss[endss.length - 1];\n            this.flatCoordinates.length =\n                lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n        }\n        this.changed();\n    };\n    return MultiPolygon;\n}(SimpleGeometry));\nexport default MultiPolygon;\n//# sourceMappingURL=MultiPolygon.js.map","/**\n * @module ol/style/Stroke\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nvar Stroke = /** @class */ (function () {\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function Stroke(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n        /**\n         * @private\n         * @type {CanvasLineCap|undefined}\n         */\n        this.lineCap_ = options.lineCap;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.lineDashOffset_ = options.lineDashOffset;\n        /**\n         * @private\n         * @type {CanvasLineJoin|undefined}\n         */\n        this.lineJoin_ = options.lineJoin;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.miterLimit_ = options.miterLimit;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.width_ = options.width;\n    }\n    /**\n     * Clones the style.\n     * @return {Stroke} The cloned style.\n     * @api\n     */\n    Stroke.prototype.clone = function () {\n        var color = this.getColor();\n        return new Stroke({\n            color: Array.isArray(color) ? color.slice() : color || undefined,\n            lineCap: this.getLineCap(),\n            lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n            lineDashOffset: this.getLineDashOffset(),\n            lineJoin: this.getLineJoin(),\n            miterLimit: this.getMiterLimit(),\n            width: this.getWidth(),\n        });\n    };\n    /**\n     * Get the stroke color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n     * @api\n     */\n    Stroke.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Get the line cap type for the stroke.\n     * @return {CanvasLineCap|undefined} Line cap.\n     * @api\n     */\n    Stroke.prototype.getLineCap = function () {\n        return this.lineCap_;\n    };\n    /**\n     * Get the line dash style for the stroke.\n     * @return {Array<number>} Line dash.\n     * @api\n     */\n    Stroke.prototype.getLineDash = function () {\n        return this.lineDash_;\n    };\n    /**\n     * Get the line dash offset for the stroke.\n     * @return {number|undefined} Line dash offset.\n     * @api\n     */\n    Stroke.prototype.getLineDashOffset = function () {\n        return this.lineDashOffset_;\n    };\n    /**\n     * Get the line join type for the stroke.\n     * @return {CanvasLineJoin|undefined} Line join.\n     * @api\n     */\n    Stroke.prototype.getLineJoin = function () {\n        return this.lineJoin_;\n    };\n    /**\n     * Get the miter limit for the stroke.\n     * @return {number|undefined} Miter limit.\n     * @api\n     */\n    Stroke.prototype.getMiterLimit = function () {\n        return this.miterLimit_;\n    };\n    /**\n     * Get the stroke width.\n     * @return {number|undefined} Width.\n     * @api\n     */\n    Stroke.prototype.getWidth = function () {\n        return this.width_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n     * @api\n     */\n    Stroke.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    /**\n     * Set the line cap.\n     *\n     * @param {CanvasLineCap|undefined} lineCap Line cap.\n     * @api\n     */\n    Stroke.prototype.setLineCap = function (lineCap) {\n        this.lineCap_ = lineCap;\n    };\n    /**\n     * Set the line dash.\n     *\n     * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n     * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n     * property will have no visual effect in these browsers.\n     *\n     * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n     *\n     * @param {Array<number>} lineDash Line dash.\n     * @api\n     */\n    Stroke.prototype.setLineDash = function (lineDash) {\n        this.lineDash_ = lineDash;\n    };\n    /**\n     * Set the line dash offset.\n     *\n     * @param {number|undefined} lineDashOffset Line dash offset.\n     * @api\n     */\n    Stroke.prototype.setLineDashOffset = function (lineDashOffset) {\n        this.lineDashOffset_ = lineDashOffset;\n    };\n    /**\n     * Set the line join.\n     *\n     * @param {CanvasLineJoin|undefined} lineJoin Line join.\n     * @api\n     */\n    Stroke.prototype.setLineJoin = function (lineJoin) {\n        this.lineJoin_ = lineJoin;\n    };\n    /**\n     * Set the miter limit.\n     *\n     * @param {number|undefined} miterLimit Miter limit.\n     * @api\n     */\n    Stroke.prototype.setMiterLimit = function (miterLimit) {\n        this.miterLimit_ = miterLimit;\n    };\n    /**\n     * Set the width.\n     *\n     * @param {number|undefined} width Width.\n     * @api\n     */\n    Stroke.prototype.setWidth = function (width) {\n        this.width_ = width;\n    };\n    return Stroke;\n}());\nexport default Stroke;\n//# sourceMappingURL=Stroke.js.map","/**\n * @module ol/colorlike\n */\nimport { toString } from './color.js';\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n    if (Array.isArray(color)) {\n        return toString(color);\n    }\n    else {\n        return color;\n    }\n}\n//# sourceMappingURL=colorlike.js.map","/**\n * @module ol/css\n */\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nvar fontRegEx = new RegExp([\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n].join(''), 'i');\nvar fontRegExMatchIndex = [\n    'style',\n    'variant',\n    'weight',\n    'size',\n    'lineHeight',\n    'family',\n];\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport var getFontParameters = function (fontSpec) {\n    var match = fontSpec.match(fontRegEx);\n    if (!match) {\n        return null;\n    }\n    var style = /** @type {FontParameters} */ ({\n        lineHeight: 'normal',\n        size: '1.2em',\n        style: 'normal',\n        weight: 'normal',\n        variant: 'normal',\n    });\n    for (var i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n        var value = match[i + 1];\n        if (value !== undefined) {\n            style[fontRegExMatchIndex[i]] = value;\n        }\n    }\n    style.families = style.family.split(/,\\s?/);\n    return style;\n};\n/**\n * @param {number} opacity Opacity (0..1).\n * @return {string} CSS opacity.\n */\nexport function cssOpacity(opacity) {\n    return opacity === 1 ? '' : String(Math.round(opacity * 100) / 100);\n}\n//# sourceMappingURL=css.js.map","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport { WORKER_OFFSCREEN_CANVAS } from '../has.js';\nimport { clear } from '../obj.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { getFontParameters } from '../css.js';\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultFillStyle = '#000';\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport var defaultLineCap = 'round';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport var defaultLineJoin = 'round';\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultStrokeStyle = '#000';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n/**\n * @type {BaseObject}\n */\nexport var checkedFonts = new BaseObject();\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache~LRUCache#setSize cache.setSize()}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport var labelCache = new EventTarget();\nlabelCache.setSize = function () {\n    console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n/**\n * @type {string}\n */\nvar measureFont;\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var registerFont = (function () {\n    var retries = 100;\n    var size = '32px ';\n    var referenceFonts = ['monospace', 'serif'];\n    var len = referenceFonts.length;\n    var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n    var interval, referenceWidth;\n    /**\n     * @param {string} fontStyle Css font-style\n     * @param {string} fontWeight Css font-weight\n     * @param {*} fontFamily Css font-family\n     * @return {boolean} Font with style and weight is available\n     */\n    function isAvailable(fontStyle, fontWeight, fontFamily) {\n        var available = true;\n        for (var i = 0; i < len; ++i) {\n            var referenceFont = referenceFonts[i];\n            referenceWidth = measureTextWidth(fontStyle + ' ' + fontWeight + ' ' + size + referenceFont, text);\n            if (fontFamily != referenceFont) {\n                var width = measureTextWidth(fontStyle +\n                    ' ' +\n                    fontWeight +\n                    ' ' +\n                    size +\n                    fontFamily +\n                    ',' +\n                    referenceFont, text);\n                // If width and referenceWidth are the same, then the fallback was used\n                // instead of the font we wanted, so the font is not available.\n                available = available && width != referenceWidth;\n            }\n        }\n        if (available) {\n            return true;\n        }\n        return false;\n    }\n    function check() {\n        var done = true;\n        var fonts = checkedFonts.getKeys();\n        for (var i = 0, ii = fonts.length; i < ii; ++i) {\n            var font = fonts[i];\n            if (checkedFonts.get(font) < retries) {\n                if (isAvailable.apply(this, font.split('\\n'))) {\n                    clear(textHeights);\n                    // Make sure that loaded fonts are picked up by Safari\n                    measureContext = null;\n                    measureFont = undefined;\n                    checkedFonts.set(font, retries);\n                }\n                else {\n                    checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n                    done = false;\n                }\n            }\n        }\n        if (done) {\n            clearInterval(interval);\n            interval = undefined;\n        }\n    }\n    return function (fontSpec) {\n        var font = getFontParameters(fontSpec);\n        if (!font) {\n            return;\n        }\n        var families = font.families;\n        for (var i = 0, ii = families.length; i < ii; ++i) {\n            var family = families[i];\n            var key = font.style + '\\n' + font.weight + '\\n' + family;\n            if (checkedFonts.get(key) === undefined) {\n                checkedFonts.set(key, retries, true);\n                if (!isAvailable(font.style, font.weight, family)) {\n                    checkedFonts.set(key, 0, true);\n                    if (interval === undefined) {\n                        interval = setInterval(check, 32);\n                    }\n                }\n            }\n        }\n    };\n})();\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function () {\n    /**\n     * @type {HTMLDivElement}\n     */\n    var measureElement;\n    return function (fontSpec) {\n        var height = textHeights[fontSpec];\n        if (height == undefined) {\n            if (WORKER_OFFSCREEN_CANVAS) {\n                var font = getFontParameters(fontSpec);\n                var metrics = measureText(fontSpec, 'Žg');\n                var lineHeight = isNaN(Number(font.lineHeight))\n                    ? 1.2\n                    : Number(font.lineHeight);\n                height =\n                    lineHeight *\n                        (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n            }\n            else {\n                if (!measureElement) {\n                    measureElement = document.createElement('div');\n                    measureElement.innerHTML = 'M';\n                    measureElement.style.minHeight = '0';\n                    measureElement.style.maxHeight = 'none';\n                    measureElement.style.height = 'auto';\n                    measureElement.style.padding = '0';\n                    measureElement.style.border = 'none';\n                    measureElement.style.position = 'absolute';\n                    measureElement.style.display = 'block';\n                    measureElement.style.left = '-99999px';\n                }\n                measureElement.style.font = fontSpec;\n                document.body.appendChild(measureElement);\n                height = measureElement.offsetHeight;\n                document.body.removeChild(measureElement);\n            }\n            textHeights[fontSpec] = height;\n        }\n        return height;\n    };\n})();\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n    if (!measureContext) {\n        measureContext = createCanvasContext2D(1, 1);\n    }\n    if (font != measureFont) {\n        measureContext.font = font;\n        measureFont = measureContext.font;\n    }\n    return measureContext.measureText(text);\n}\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n    return measureText(font, text).width;\n}\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n    if (text in cache) {\n        return cache[text];\n    }\n    var width = measureTextWidth(font, text);\n    cache[text] = width;\n    return width;\n}\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n    var numLines = lines.length;\n    var width = 0;\n    for (var i = 0; i < numLines; ++i) {\n        var currentWidth = measureTextWidth(font, lines[i]);\n        width = Math.max(width, currentWidth);\n        widths.push(currentWidth);\n    }\n    return width;\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n    if (rotation !== 0) {\n        context.translate(offsetX, offsetY);\n        context.rotate(rotation);\n        context.translate(-offsetX, -offsetY);\n    }\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(context, transform, opacity, labelOrImage, originX, originY, w, h, x, y, scale) {\n    context.save();\n    if (opacity !== 1) {\n        context.globalAlpha *= opacity;\n    }\n    if (transform) {\n        context.setTransform.apply(context, transform);\n    }\n    if ( /** @type {*} */(labelOrImage).contextInstructions) {\n        // label\n        context.translate(x, y);\n        context.scale(scale[0], scale[1]);\n        executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n    }\n    else if (scale[0] < 0 || scale[1] < 0) {\n        // flipped image\n        context.translate(x, y);\n        context.scale(scale[0], scale[1]);\n        context.drawImage(\n        /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage), originX, originY, w, h, 0, 0, w, h);\n    }\n    else {\n        // if image not flipped translate and scale can be avoided\n        context.drawImage(\n        /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage), originX, originY, w, h, x, y, w * scale[0], h * scale[1]);\n    }\n    context.restore();\n}\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n    var contextInstructions = label.contextInstructions;\n    for (var i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n        if (Array.isArray(contextInstructions[i + 1])) {\n            context[contextInstructions[i]].apply(context, contextInstructions[i + 1]);\n        }\n        else {\n            context[contextInstructions[i]] = contextInstructions[i + 1];\n        }\n    }\n}\n//# sourceMappingURL=canvas.js.map","/**\n * @module ol/style/RegularShape\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport { asArray } from '../color.js';\nimport { asColorLike } from '../colorlike.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { defaultFillStyle, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, } from '../render/canvas.js';\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n */\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nvar RegularShape = /** @class */ (function (_super) {\n    __extends(RegularShape, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function RegularShape(options) {\n        var _this = this;\n        /**\n         * @type {boolean}\n         */\n        var rotateWithView = options.rotateWithView !== undefined ? options.rotateWithView : false;\n        _this = _super.call(this, {\n            opacity: 1,\n            rotateWithView: rotateWithView,\n            rotation: options.rotation !== undefined ? options.rotation : 0,\n            scale: options.scale !== undefined ? options.scale : 1,\n            displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n        }) || this;\n        /**\n         * @private\n         * @type {Object<number, HTMLCanvasElement>}\n         */\n        _this.canvas_ = undefined;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.hitDetectionCanvas_ = null;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        _this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.origin_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.points_ = options.points;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.radius_ =\n            options.radius !== undefined ? options.radius : options.radius1;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.radius2_ = options.radius2;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.angle_ = options.angle !== undefined ? options.angle : 0;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        _this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = null;\n        /**\n         * @private\n         * @type {RenderOptions}\n         */\n        _this.renderOptions_ = null;\n        _this.render();\n        return _this;\n    }\n    /**\n     * Clones the style.\n     * @return {RegularShape} The cloned style.\n     * @api\n     */\n    RegularShape.prototype.clone = function () {\n        var scale = this.getScale();\n        var style = new RegularShape({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            points: this.getPoints(),\n            radius: this.getRadius(),\n            radius2: this.getRadius2(),\n            angle: this.getAngle(),\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            displacement: this.getDisplacement().slice(),\n        });\n        style.setOpacity(this.getOpacity());\n        return style;\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @return {Array<number>} Anchor.\n     * @api\n     */\n    RegularShape.prototype.getAnchor = function () {\n        return this.anchor_;\n    };\n    /**\n     * Get the angle used in generating the shape.\n     * @return {number} Shape's rotation in radians.\n     * @api\n     */\n    RegularShape.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    /**\n     * Get the fill style for the shape.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    RegularShape.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * @return {HTMLCanvasElement} Image element.\n     */\n    RegularShape.prototype.getHitDetectionImage = function () {\n        if (!this.hitDetectionCanvas_) {\n            this.createHitDetectionCanvas_(this.renderOptions_);\n        }\n        return this.hitDetectionCanvas_;\n    };\n    /**\n     * Get the image icon.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement} Image or Canvas element.\n     * @api\n     */\n    RegularShape.prototype.getImage = function (pixelRatio) {\n        var image = this.canvas_[pixelRatio];\n        if (!image) {\n            var renderOptions = this.renderOptions_;\n            var context = createCanvasContext2D(renderOptions.size * pixelRatio, renderOptions.size * pixelRatio);\n            this.draw_(renderOptions, context, pixelRatio);\n            image = context.canvas;\n            this.canvas_[pixelRatio] = image;\n        }\n        return image;\n    };\n    /**\n     * Get the image pixel ratio.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Pixel ratio.\n     */\n    RegularShape.prototype.getPixelRatio = function (pixelRatio) {\n        return pixelRatio;\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    RegularShape.prototype.getImageSize = function () {\n        return this.size_;\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    RegularShape.prototype.getImageState = function () {\n        return ImageState.LOADED;\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @return {Array<number>} Origin.\n     * @api\n     */\n    RegularShape.prototype.getOrigin = function () {\n        return this.origin_;\n    };\n    /**\n     * Get the number of points for generating the shape.\n     * @return {number} Number of points for stars and regular polygons.\n     * @api\n     */\n    RegularShape.prototype.getPoints = function () {\n        return this.points_;\n    };\n    /**\n     * Get the (primary) radius for the shape.\n     * @return {number} Radius.\n     * @api\n     */\n    RegularShape.prototype.getRadius = function () {\n        return this.radius_;\n    };\n    /**\n     * Get the secondary radius for the shape.\n     * @return {number|undefined} Radius2.\n     * @api\n     */\n    RegularShape.prototype.getRadius2 = function () {\n        return this.radius2_;\n    };\n    /**\n     * Get the size of the symbolizer (in pixels).\n     * @return {import(\"../size.js\").Size} Size.\n     * @api\n     */\n    RegularShape.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * Get the stroke style for the shape.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    RegularShape.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    RegularShape.prototype.listenImageChange = function (listener) { };\n    /**\n     * Load not yet loaded URI.\n     */\n    RegularShape.prototype.load = function () { };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    RegularShape.prototype.unlistenImageChange = function (listener) { };\n    /**\n     * Calculate additional canvas size needed for the miter.\n     * @param {string} lineJoin Line join\n     * @param {number} strokeWidth Stroke width\n     * @param {number} miterLimit Miter limit\n     * @return {number} Additional canvas size needed\n     * @private\n     */\n    RegularShape.prototype.calculateLineJoinSize_ = function (lineJoin, strokeWidth, miterLimit) {\n        if (strokeWidth === 0 ||\n            this.points_ === Infinity ||\n            (lineJoin !== 'bevel' && lineJoin !== 'miter')) {\n            return strokeWidth;\n        }\n        // m  | ^\n        // i  | |\\                  .\n        // t >|  #\\\n        // e  | |\\ \\              .\n        // r      \\s\\\n        //      |  \\t\\          .                 .\n        //          \\r\\                      .   .\n        //      |    \\o\\      .          .  . . .\n        //          e \\k\\            .  .    . .\n        //      |      \\e\\  .    .  .       . .\n        //       d      \\ \\  .  .          . .\n        //      | _ _a_ _\\#  .            . .\n        //   r1          / `             . .\n        //      |                       . .\n        //       b     /               . .\n        //      |                     . .\n        //           / r2            . .\n        //      |                        .   .\n        //         /                           .   .\n        //      |α                                   .   .\n        //       /                                         .   .\n        //      ° center\n        var r1 = this.radius_;\n        var r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n        if (r1 < r2) {\n            var tmp = r1;\n            r1 = r2;\n            r2 = tmp;\n        }\n        var points = this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n        var alpha = (2 * Math.PI) / points;\n        var a = r2 * Math.sin(alpha);\n        var b = Math.sqrt(r2 * r2 - a * a);\n        var d = r1 - b;\n        var e = Math.sqrt(a * a + d * d);\n        var miterRatio = e / a;\n        if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n            return miterRatio * strokeWidth;\n        }\n        // Calculate the distnce from center to the stroke corner where\n        // it was cut short because of the miter limit.\n        //              l\n        //        ----+---- <= distance from center to here is maxr\n        //       /####|k ##\\\n        //      /#####^#####\\\n        //     /#### /+\\# s #\\\n        //    /### h/+++\\# t #\\\n        //   /### t/+++++\\# r #\\\n        //  /### a/+++++++\\# o #\\\n        // /### p/++ fill +\\# k #\\\n        ///#### /+++++^+++++\\# e #\\\n        //#####/+++++/+\\+++++\\#####\\\n        var k = strokeWidth / 2 / miterRatio;\n        var l = (strokeWidth / 2) * (d / e);\n        var maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n        var bevelAdd = maxr - r1;\n        if (this.radius2_ === undefined || lineJoin === 'bevel') {\n            return bevelAdd * 2;\n        }\n        // If outer miter is over the miter limit the inner miter may reach through the\n        // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n        var aa = r1 * Math.sin(alpha);\n        var bb = Math.sqrt(r1 * r1 - aa * aa);\n        var dd = r2 - bb;\n        var ee = Math.sqrt(aa * aa + dd * dd);\n        var innerMiterRatio = ee / aa;\n        if (innerMiterRatio <= miterLimit) {\n            var innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n            return 2 * Math.max(bevelAdd, innerLength);\n        }\n        return bevelAdd * 2;\n    };\n    /**\n     * @return {RenderOptions}  The render options\n     * @protected\n     */\n    RegularShape.prototype.createRenderOptions = function () {\n        var lineJoin = defaultLineJoin;\n        var miterLimit = 0;\n        var lineDash = null;\n        var lineDashOffset = 0;\n        var strokeStyle;\n        var strokeWidth = 0;\n        if (this.stroke_) {\n            strokeStyle = this.stroke_.getColor();\n            if (strokeStyle === null) {\n                strokeStyle = defaultStrokeStyle;\n            }\n            strokeStyle = asColorLike(strokeStyle);\n            strokeWidth = this.stroke_.getWidth();\n            if (strokeWidth === undefined) {\n                strokeWidth = defaultLineWidth;\n            }\n            lineDash = this.stroke_.getLineDash();\n            lineDashOffset = this.stroke_.getLineDashOffset();\n            lineJoin = this.stroke_.getLineJoin();\n            if (lineJoin === undefined) {\n                lineJoin = defaultLineJoin;\n            }\n            miterLimit = this.stroke_.getMiterLimit();\n            if (miterLimit === undefined) {\n                miterLimit = defaultMiterLimit;\n            }\n        }\n        var add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n        var maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n        var size = Math.ceil(2 * maxRadius + add);\n        return {\n            strokeStyle: strokeStyle,\n            strokeWidth: strokeWidth,\n            size: size,\n            lineDash: lineDash,\n            lineDashOffset: lineDashOffset,\n            lineJoin: lineJoin,\n            miterLimit: miterLimit,\n        };\n    };\n    /**\n     * @protected\n     */\n    RegularShape.prototype.render = function () {\n        this.renderOptions_ = this.createRenderOptions();\n        var size = this.renderOptions_.size;\n        var displacement = this.getDisplacement();\n        this.canvas_ = {};\n        this.anchor_ = [size / 2 - displacement[0], size / 2 + displacement[1]];\n        this.size_ = [size, size];\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The rendering context.\n     * @param {number} pixelRatio The pixel ratio.\n     */\n    RegularShape.prototype.draw_ = function (renderOptions, context, pixelRatio) {\n        context.scale(pixelRatio, pixelRatio);\n        // set origin to canvas center\n        context.translate(renderOptions.size / 2, renderOptions.size / 2);\n        this.createPath_(context);\n        if (this.fill_) {\n            var color = this.fill_.getColor();\n            if (color === null) {\n                color = defaultFillStyle;\n            }\n            context.fillStyle = asColorLike(color);\n            context.fill();\n        }\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (context.setLineDash && renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.lineJoin = renderOptions.lineJoin;\n            context.miterLimit = renderOptions.miterLimit;\n            context.stroke();\n        }\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     */\n    RegularShape.prototype.createHitDetectionCanvas_ = function (renderOptions) {\n        if (this.fill_) {\n            var color = this.fill_.getColor();\n            // determine if fill is transparent (or pattern or gradient)\n            var opacity = 0;\n            if (typeof color === 'string') {\n                color = asArray(color);\n            }\n            if (color === null) {\n                opacity = 1;\n            }\n            else if (Array.isArray(color)) {\n                opacity = color.length === 4 ? color[3] : 1;\n            }\n            if (opacity === 0) {\n                // if a transparent fill style is set, create an extra hit-detection image\n                // with a default fill style\n                var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n                this.hitDetectionCanvas_ = context.canvas;\n                this.drawHitDetectionCanvas_(renderOptions, context);\n            }\n        }\n        if (!this.hitDetectionCanvas_) {\n            this.hitDetectionCanvas_ = this.getImage(1);\n        }\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context The context to draw in.\n     */\n    RegularShape.prototype.createPath_ = function (context) {\n        var points = this.points_;\n        var radius = this.radius_;\n        if (points === Infinity) {\n            context.arc(0, 0, radius, 0, 2 * Math.PI);\n        }\n        else {\n            var radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n            if (this.radius2_ !== undefined) {\n                points *= 2;\n            }\n            var startAngle = this.angle_ - Math.PI / 2;\n            var step = (2 * Math.PI) / points;\n            for (var i = 0; i < points; i++) {\n                var angle0 = startAngle + i * step;\n                var radiusC = i % 2 === 0 ? radius : radius2;\n                context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n            }\n            context.closePath();\n        }\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The context.\n     */\n    RegularShape.prototype.drawHitDetectionCanvas_ = function (renderOptions, context) {\n        // set origin to canvas center\n        context.translate(renderOptions.size / 2, renderOptions.size / 2);\n        this.createPath_(context);\n        context.fillStyle = defaultFillStyle;\n        context.fill();\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.lineJoin = renderOptions.lineJoin;\n            context.miterLimit = renderOptions.miterLimit;\n            context.stroke();\n        }\n    };\n    return RegularShape;\n}(ImageStyle));\nexport default RegularShape;\n//# sourceMappingURL=RegularShape.js.map","/**\n * @module ol/style/Circle\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport RegularShape from './RegularShape.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n */\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nvar CircleStyle = /** @class */ (function (_super) {\n    __extends(CircleStyle, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function CircleStyle(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            points: Infinity,\n            fill: options.fill,\n            radius: options.radius,\n            stroke: options.stroke,\n            scale: options.scale !== undefined ? options.scale : 1,\n            rotation: options.rotation !== undefined ? options.rotation : 0,\n            rotateWithView: options.rotateWithView !== undefined ? options.rotateWithView : false,\n            displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n        }) || this;\n        return _this;\n    }\n    /**\n     * Clones the style.\n     * @return {CircleStyle} The cloned style.\n     * @api\n     */\n    CircleStyle.prototype.clone = function () {\n        var scale = this.getScale();\n        var style = new CircleStyle({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            radius: this.getRadius(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            displacement: this.getDisplacement().slice(),\n        });\n        style.setOpacity(this.getOpacity());\n        return style;\n    };\n    /**\n     * Set the circle radius.\n     *\n     * @param {number} radius Circle radius.\n     * @api\n     */\n    CircleStyle.prototype.setRadius = function (radius) {\n        this.radius_ = radius;\n        this.render();\n    };\n    return CircleStyle;\n}(RegularShape));\nexport default CircleStyle;\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/style/Style\n */\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Stroke from './Stroke.js';\nimport { assert } from '../asserts.js';\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n *\n * @api\n */\nvar Style = /** @class */ (function () {\n    /**\n     * @param {Options} [opt_options] Style options.\n     */\n    function Style(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n         */\n        this.geometry_ = null;\n        /**\n         * @private\n         * @type {!GeometryFunction}\n         */\n        this.geometryFunction_ = defaultGeometryFunction;\n        if (options.geometry !== undefined) {\n            this.setGeometry(options.geometry);\n        }\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n         * @private\n         * @type {import(\"./Image.js\").default}\n         */\n        this.image_ = options.image !== undefined ? options.image : null;\n        /**\n         * @private\n         * @type {RenderFunction|null}\n         */\n        this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n        /**\n         * @private\n         * @type {RenderFunction|null}\n         */\n        this.hitDetectionRenderer_ =\n            options.hitDetectionRenderer !== undefined\n                ? options.hitDetectionRenderer\n                : null;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {import(\"./Text.js\").default}\n         */\n        this.text_ = options.text !== undefined ? options.text : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zIndex_ = options.zIndex;\n    }\n    /**\n     * Clones the style.\n     * @return {Style} The cloned style.\n     * @api\n     */\n    Style.prototype.clone = function () {\n        var geometry = this.getGeometry();\n        if (geometry && typeof geometry === 'object') {\n            geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n        }\n        return new Style({\n            geometry: geometry,\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            image: this.getImage() ? this.getImage().clone() : undefined,\n            renderer: this.getRenderer(),\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            text: this.getText() ? this.getText().clone() : undefined,\n            zIndex: this.getZIndex(),\n        });\n    };\n    /**\n     * Get the custom renderer function that was configured with\n     * {@link #setRenderer} or the `renderer` constructor option.\n     * @return {RenderFunction|null} Custom renderer function.\n     * @api\n     */\n    Style.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n     * and `image` options of the style will be ignored.\n     * @param {RenderFunction|null} renderer Custom renderer function.\n     * @api\n     */\n    Style.prototype.setRenderer = function (renderer) {\n        this.renderer_ = renderer;\n    };\n    /**\n     * Sets a custom renderer function for this style used\n     * in hit detection.\n     * @param {RenderFunction|null} renderer Custom renderer function.\n     * @api\n     */\n    Style.prototype.setHitDetectionRenderer = function (renderer) {\n        this.hitDetectionRenderer_ = renderer;\n    };\n    /**\n     * Get the custom renderer function that was configured with\n     * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n     * @return {RenderFunction|null} Custom renderer function.\n     * @api\n     */\n    Style.prototype.getHitDetectionRenderer = function () {\n        return this.hitDetectionRenderer_;\n    };\n    /**\n     * Get the geometry to be rendered.\n     * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     * Feature property or geometry or function that returns the geometry that will\n     * be rendered with this style.\n     * @api\n     */\n    Style.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    /**\n     * Get the function used to generate a geometry for rendering.\n     * @return {!GeometryFunction} Function that is called with a feature\n     * and returns the geometry to render instead of the feature's geometry.\n     * @api\n     */\n    Style.prototype.getGeometryFunction = function () {\n        return this.geometryFunction_;\n    };\n    /**\n     * Get the fill style.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Style.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Set the fill style.\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Style.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n    };\n    /**\n     * Get the image style.\n     * @return {import(\"./Image.js\").default} Image style.\n     * @api\n     */\n    Style.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Set the image style.\n     * @param {import(\"./Image.js\").default} image Image style.\n     * @api\n     */\n    Style.prototype.setImage = function (image) {\n        this.image_ = image;\n    };\n    /**\n     * Get the stroke style.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Style.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Set the stroke style.\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Style.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n    };\n    /**\n     * Get the text style.\n     * @return {import(\"./Text.js\").default} Text style.\n     * @api\n     */\n    Style.prototype.getText = function () {\n        return this.text_;\n    };\n    /**\n     * Set the text style.\n     * @param {import(\"./Text.js\").default} text Text style.\n     * @api\n     */\n    Style.prototype.setText = function (text) {\n        this.text_ = text;\n    };\n    /**\n     * Get the z-index for the style.\n     * @return {number|undefined} ZIndex.\n     * @api\n     */\n    Style.prototype.getZIndex = function () {\n        return this.zIndex_;\n    };\n    /**\n     * Set a geometry that is rendered instead of the feature's geometry.\n     *\n     * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n     *     Feature property or geometry or function returning a geometry to render\n     *     for this style.\n     * @api\n     */\n    Style.prototype.setGeometry = function (geometry) {\n        if (typeof geometry === 'function') {\n            this.geometryFunction_ = geometry;\n        }\n        else if (typeof geometry === 'string') {\n            this.geometryFunction_ = function (feature) {\n                return /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(geometry));\n            };\n        }\n        else if (!geometry) {\n            this.geometryFunction_ = defaultGeometryFunction;\n        }\n        else if (geometry !== undefined) {\n            this.geometryFunction_ = function () {\n                return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n            };\n        }\n        this.geometry_ = geometry;\n    };\n    /**\n     * Set the z-index.\n     *\n     * @param {number|undefined} zIndex ZIndex.\n     * @api\n     */\n    Style.prototype.setZIndex = function (zIndex) {\n        this.zIndex_ = zIndex;\n    };\n    return Style;\n}());\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n    var styleFunction;\n    if (typeof obj === 'function') {\n        styleFunction = obj;\n    }\n    else {\n        /**\n         * @type {Array<Style>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof ( /** @type {?} */(obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n            var style = /** @type {Style} */ (obj);\n            styles_1 = [style];\n        }\n        styleFunction = function () {\n            return styles_1;\n        };\n    }\n    return styleFunction;\n}\n/**\n * @type {Array<Style>}\n */\nvar defaultStyles = null;\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n    // We don't use an immediately-invoked function\n    // and a closure so we don't get an error at script evaluation time in\n    // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n    // canvas.getContext('2d') at construction time, which will cause an.error\n    // in such browsers.)\n    if (!defaultStyles) {\n        var fill = new Fill({\n            color: 'rgba(255,255,255,0.4)',\n        });\n        var stroke = new Stroke({\n            color: '#3399CC',\n            width: 1.25,\n        });\n        defaultStyles = [\n            new Style({\n                image: new CircleStyle({\n                    fill: fill,\n                    stroke: stroke,\n                    radius: 5,\n                }),\n                fill: fill,\n                stroke: stroke,\n            }),\n        ];\n    }\n    return defaultStyles;\n}\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n    /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n    var styles = {};\n    var white = [255, 255, 255, 1];\n    var blue = [0, 153, 255, 1];\n    var width = 3;\n    styles[GeometryType.POLYGON] = [\n        new Style({\n            fill: new Fill({\n                color: [255, 255, 255, 0.5],\n            }),\n        }),\n    ];\n    styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n    styles[GeometryType.LINE_STRING] = [\n        new Style({\n            stroke: new Stroke({\n                color: white,\n                width: width + 2,\n            }),\n        }),\n        new Style({\n            stroke: new Stroke({\n                color: blue,\n                width: width,\n            }),\n        }),\n    ];\n    styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n    styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING]);\n    styles[GeometryType.POINT] = [\n        new Style({\n            image: new CircleStyle({\n                radius: width * 2,\n                fill: new Fill({\n                    color: blue,\n                }),\n                stroke: new Stroke({\n                    color: white,\n                    width: width / 2,\n                }),\n            }),\n            zIndex: Infinity,\n        }),\n    ];\n    styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n    styles[GeometryType.GEOMETRY_COLLECTION] = styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n    return styles;\n}\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n    return feature.getGeometry();\n}\nexport default Style;\n//# sourceMappingURL=Style.js.map","/**\n * @module ol/style/TextPlacement\n */\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n    POINT: 'point',\n    LINE: 'line',\n};\n//# sourceMappingURL=TextPlacement.js.map","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\nimport { toSize } from '../size.js';\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nvar DEFAULT_FILL_COLOR = '#333';\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nvar Text = /** @class */ (function () {\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function Text(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.font_ = options.font;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size|undefined}\n         */\n        this.scale_ = options.scale;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.text_ = options.text;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.textAlign_ = options.textAlign;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.textBaseline_ = options.textBaseline;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.fill_ =\n            options.fill !== undefined\n                ? options.fill\n                : new Fill({ color: DEFAULT_FILL_COLOR });\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxAngle_ =\n            options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n        /**\n         * @private\n         * @type {import(\"./TextPlacement.js\").default|string}\n         */\n        this.placement_ =\n            options.placement !== undefined ? options.placement : TextPlacement.POINT;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.overflow_ = !!options.overflow;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.backgroundFill_ = options.backgroundFill\n            ? options.backgroundFill\n            : null;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.backgroundStroke_ = options.backgroundStroke\n            ? options.backgroundStroke\n            : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.padding_ = options.padding === undefined ? null : options.padding;\n    }\n    /**\n     * Clones the style.\n     * @return {Text} The cloned style.\n     * @api\n     */\n    Text.prototype.clone = function () {\n        var scale = this.getScale();\n        return new Text({\n            font: this.getFont(),\n            placement: this.getPlacement(),\n            maxAngle: this.getMaxAngle(),\n            overflow: this.getOverflow(),\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            text: this.getText(),\n            textAlign: this.getTextAlign(),\n            textBaseline: this.getTextBaseline(),\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            offsetX: this.getOffsetX(),\n            offsetY: this.getOffsetY(),\n            backgroundFill: this.getBackgroundFill()\n                ? this.getBackgroundFill().clone()\n                : undefined,\n            backgroundStroke: this.getBackgroundStroke()\n                ? this.getBackgroundStroke().clone()\n                : undefined,\n            padding: this.getPadding(),\n        });\n    };\n    /**\n     * Get the `overflow` configuration.\n     * @return {boolean} Let text overflow the length of the path they follow.\n     * @api\n     */\n    Text.prototype.getOverflow = function () {\n        return this.overflow_;\n    };\n    /**\n     * Get the font name.\n     * @return {string|undefined} Font.\n     * @api\n     */\n    Text.prototype.getFont = function () {\n        return this.font_;\n    };\n    /**\n     * Get the maximum angle between adjacent characters.\n     * @return {number} Angle in radians.\n     * @api\n     */\n    Text.prototype.getMaxAngle = function () {\n        return this.maxAngle_;\n    };\n    /**\n     * Get the label placement.\n     * @return {import(\"./TextPlacement.js\").default|string} Text placement.\n     * @api\n     */\n    Text.prototype.getPlacement = function () {\n        return this.placement_;\n    };\n    /**\n     * Get the x-offset for the text.\n     * @return {number} Horizontal text offset.\n     * @api\n     */\n    Text.prototype.getOffsetX = function () {\n        return this.offsetX_;\n    };\n    /**\n     * Get the y-offset for the text.\n     * @return {number} Vertical text offset.\n     * @api\n     */\n    Text.prototype.getOffsetY = function () {\n        return this.offsetY_;\n    };\n    /**\n     * Get the fill style for the text.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Text.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Determine whether the text rotates with the map.\n     * @return {boolean|undefined} Rotate with map.\n     * @api\n     */\n    Text.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the text rotation.\n     * @return {number|undefined} Rotation.\n     * @api\n     */\n    Text.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the text scale.\n     * @return {number|import(\"../size.js\").Size|undefined} Scale.\n     * @api\n     */\n    Text.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the symbolizer scale array.\n     * @return {import(\"../size.js\").Size} Scale array.\n     */\n    Text.prototype.getScaleArray = function () {\n        return this.scaleArray_;\n    };\n    /**\n     * Get the stroke style for the text.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Text.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Get the text to be rendered.\n     * @return {string|undefined} Text.\n     * @api\n     */\n    Text.prototype.getText = function () {\n        return this.text_;\n    };\n    /**\n     * Get the text alignment.\n     * @return {string|undefined} Text align.\n     * @api\n     */\n    Text.prototype.getTextAlign = function () {\n        return this.textAlign_;\n    };\n    /**\n     * Get the text baseline.\n     * @return {string|undefined} Text baseline.\n     * @api\n     */\n    Text.prototype.getTextBaseline = function () {\n        return this.textBaseline_;\n    };\n    /**\n     * Get the background fill style for the text.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Text.prototype.getBackgroundFill = function () {\n        return this.backgroundFill_;\n    };\n    /**\n     * Get the background stroke style for the text.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Text.prototype.getBackgroundStroke = function () {\n        return this.backgroundStroke_;\n    };\n    /**\n     * Get the padding for the text.\n     * @return {Array<number>} Padding.\n     * @api\n     */\n    Text.prototype.getPadding = function () {\n        return this.padding_;\n    };\n    /**\n     * Set the `overflow` property.\n     *\n     * @param {boolean} overflow Let text overflow the path that it follows.\n     * @api\n     */\n    Text.prototype.setOverflow = function (overflow) {\n        this.overflow_ = overflow;\n    };\n    /**\n     * Set the font.\n     *\n     * @param {string|undefined} font Font.\n     * @api\n     */\n    Text.prototype.setFont = function (font) {\n        this.font_ = font;\n    };\n    /**\n     * Set the maximum angle between adjacent characters.\n     *\n     * @param {number} maxAngle Angle in radians.\n     * @api\n     */\n    Text.prototype.setMaxAngle = function (maxAngle) {\n        this.maxAngle_ = maxAngle;\n    };\n    /**\n     * Set the x offset.\n     *\n     * @param {number} offsetX Horizontal text offset.\n     * @api\n     */\n    Text.prototype.setOffsetX = function (offsetX) {\n        this.offsetX_ = offsetX;\n    };\n    /**\n     * Set the y offset.\n     *\n     * @param {number} offsetY Vertical text offset.\n     * @api\n     */\n    Text.prototype.setOffsetY = function (offsetY) {\n        this.offsetY_ = offsetY;\n    };\n    /**\n     * Set the text placement.\n     *\n     * @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n     * @api\n     */\n    Text.prototype.setPlacement = function (placement) {\n        this.placement_ = placement;\n    };\n    /**\n     * Set whether to rotate the text with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    Text.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the fill.\n     *\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Text.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number|undefined} rotation Rotation.\n     * @api\n     */\n    Text.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n     * @api\n     */\n    Text.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n        this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n    };\n    /**\n     * Set the stroke.\n     *\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Text.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n    };\n    /**\n     * Set the text.\n     *\n     * @param {string|undefined} text Text.\n     * @api\n     */\n    Text.prototype.setText = function (text) {\n        this.text_ = text;\n    };\n    /**\n     * Set the text alignment.\n     *\n     * @param {string|undefined} textAlign Text align.\n     * @api\n     */\n    Text.prototype.setTextAlign = function (textAlign) {\n        this.textAlign_ = textAlign;\n    };\n    /**\n     * Set the text baseline.\n     *\n     * @param {string|undefined} textBaseline Text baseline.\n     * @api\n     */\n    Text.prototype.setTextBaseline = function (textBaseline) {\n        this.textBaseline_ = textBaseline;\n    };\n    /**\n     * Set the background fill.\n     *\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Text.prototype.setBackgroundFill = function (fill) {\n        this.backgroundFill_ = fill;\n    };\n    /**\n     * Set the background stroke.\n     *\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Text.prototype.setBackgroundStroke = function (stroke) {\n        this.backgroundStroke_ = stroke;\n    };\n    /**\n     * Set the padding (`[top, right, bottom, left]`).\n     *\n     * @param {!Array<number>} padding Padding.\n     * @api\n     */\n    Text.prototype.setPadding = function (padding) {\n        this.padding_ = padding;\n    };\n    return Text;\n}());\nexport default Text;\n//# sourceMappingURL=Text.js.map","/**\n * @module ol/format/Feature\n */\nimport Units from '../proj/Units.js';\nimport { abstract } from '../util.js';\nimport { assign } from '../obj.js';\nimport { equivalent as equivalentProjection, get as getProjection, transformExtent, } from '../proj.js';\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nvar FeatureFormat = /** @class */ (function () {\n    function FeatureFormat() {\n        /**\n         * @protected\n         * @type {import(\"../proj/Projection.js\").default|undefined}\n         */\n        this.dataProjection = undefined;\n        /**\n         * @protected\n         * @type {import(\"../proj/Projection.js\").default|undefined}\n         */\n        this.defaultFeatureProjection = undefined;\n        /**\n         * A list media types supported by the format in descending order of preference.\n         * @type {Array<string>}\n         */\n        this.supportedMediaTypes = null;\n    }\n    /**\n     * Adds the data projection to the read options.\n     * @param {Document|Element|Object|string} source Source.\n     * @param {ReadOptions} [opt_options] Options.\n     * @return {ReadOptions|undefined} Options.\n     * @protected\n     */\n    FeatureFormat.prototype.getReadOptions = function (source, opt_options) {\n        var options;\n        if (opt_options) {\n            var dataProjection = opt_options.dataProjection\n                ? getProjection(opt_options.dataProjection)\n                : this.readProjection(source);\n            if (opt_options.extent &&\n                dataProjection &&\n                dataProjection.getUnits() === Units.TILE_PIXELS) {\n                dataProjection = getProjection(dataProjection);\n                dataProjection.setWorldExtent(opt_options.extent);\n            }\n            options = {\n                dataProjection: dataProjection,\n                featureProjection: opt_options.featureProjection,\n            };\n        }\n        return this.adaptOptions(options);\n    };\n    /**\n     * Sets the `dataProjection` on the options, if no `dataProjection`\n     * is set.\n     * @param {WriteOptions|ReadOptions|undefined} options\n     *     Options.\n     * @protected\n     * @return {WriteOptions|ReadOptions|undefined}\n     *     Updated options.\n     */\n    FeatureFormat.prototype.adaptOptions = function (options) {\n        return assign({\n            dataProjection: this.dataProjection,\n            featureProjection: this.defaultFeatureProjection,\n        }, options);\n    };\n    /**\n     * @abstract\n     * @return {import(\"./FormatType.js\").default} Format.\n     */\n    FeatureFormat.prototype.getType = function () {\n        return abstract();\n    };\n    /**\n     * Read a single feature from a source.\n     *\n     * @abstract\n     * @param {Document|Element|Object|string} source Source.\n     * @param {ReadOptions} [opt_options] Read options.\n     * @return {import(\"../Feature.js\").FeatureLike} Feature.\n     */\n    FeatureFormat.prototype.readFeature = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read all features from a source.\n     *\n     * @abstract\n     * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n     * @param {ReadOptions} [opt_options] Read options.\n     * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n     */\n    FeatureFormat.prototype.readFeatures = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read a single geometry from a source.\n     *\n     * @abstract\n     * @param {Document|Element|Object|string} source Source.\n     * @param {ReadOptions} [opt_options] Read options.\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    FeatureFormat.prototype.readGeometry = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the projection from a source.\n     *\n     * @abstract\n     * @param {Document|Element|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n     */\n    FeatureFormat.prototype.readProjection = function (source) {\n        return abstract();\n    };\n    /**\n     * Encode a feature in this format.\n     *\n     * @abstract\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {WriteOptions} [opt_options] Write options.\n     * @return {string|ArrayBuffer} Result.\n     */\n    FeatureFormat.prototype.writeFeature = function (feature, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode an array of features in this format.\n     *\n     * @abstract\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {WriteOptions} [opt_options] Write options.\n     * @return {string|ArrayBuffer} Result.\n     */\n    FeatureFormat.prototype.writeFeatures = function (features, opt_options) {\n        return abstract();\n    };\n    /**\n     * Write a single geometry in this format.\n     *\n     * @abstract\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {WriteOptions} [opt_options] Write options.\n     * @return {string|ArrayBuffer} Result.\n     */\n    FeatureFormat.prototype.writeGeometry = function (geometry, opt_options) {\n        return abstract();\n    };\n    return FeatureFormat;\n}());\nexport default FeatureFormat;\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [opt_options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\n    var featureProjection = opt_options\n        ? getProjection(opt_options.featureProjection)\n        : null;\n    var dataProjection = opt_options\n        ? getProjection(opt_options.dataProjection)\n        : null;\n    var transformed;\n    if (featureProjection &&\n        dataProjection &&\n        !equivalentProjection(featureProjection, dataProjection)) {\n        transformed = (write ? geometry.clone() : geometry).transform(write ? featureProjection : dataProjection, write ? dataProjection : featureProjection);\n    }\n    else {\n        transformed = geometry;\n    }\n    if (write &&\n        opt_options &&\n        /** @type {WriteOptions} */ (opt_options).decimals !== undefined) {\n        var power_1 = Math.pow(10, \n        /** @type {WriteOptions} */ (opt_options).decimals);\n        // if decimals option on write, round each coordinate appropriately\n        /**\n         * @param {Array<number>} coordinates Coordinates.\n         * @return {Array<number>} Transformed coordinates.\n         */\n        var transform = function (coordinates) {\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n                coordinates[i] = Math.round(coordinates[i] * power_1) / power_1;\n            }\n            return coordinates;\n        };\n        if (transformed === geometry) {\n            transformed = geometry.clone();\n        }\n        transformed.applyTransform(transform);\n    }\n    return transformed;\n}\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [opt_options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, opt_options) {\n    var featureProjection = opt_options\n        ? getProjection(opt_options.featureProjection)\n        : null;\n    var dataProjection = opt_options\n        ? getProjection(opt_options.dataProjection)\n        : null;\n    if (featureProjection &&\n        dataProjection &&\n        !equivalentProjection(featureProjection, dataProjection)) {\n        return transformExtent(extent, dataProjection, featureProjection);\n    }\n    else {\n        return extent;\n    }\n}\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/format/FormatType\n */\n/**\n * @enum {string}\n */\nexport default {\n    ARRAY_BUFFER: 'arraybuffer',\n    JSON: 'json',\n    TEXT: 'text',\n    XML: 'xml',\n};\n//# sourceMappingURL=FormatType.js.map","/**\n * @module ol/xml\n */\nimport { extend } from './array.js';\n/**\n * When using {@link module:ol/xml.makeChildAppender} or\n * {@link module:ol/xml.makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Node} node Node.\n */\n/**\n * @typedef {function(Element, Array<*>): void} Parser\n */\n/**\n * @typedef {function(Element, *, Array<*>): void} Serializer\n */\n/**\n * @type {string}\n */\nexport var XML_SCHEMA_INSTANCE_URI = 'http://www.w3.org/2001/XMLSchema-instance';\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Element} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n    return getDocument().createElementNS(namespaceURI, qualifiedName);\n}\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n    return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n    if (node.nodeType == Node.CDATA_SECTION_NODE ||\n        node.nodeType == Node.TEXT_NODE) {\n        if (normalizeWhitespace) {\n            accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n        }\n        else {\n            accumulator.push(node.nodeValue);\n        }\n    }\n    else {\n        var n = void 0;\n        for (n = node.firstChild; n; n = n.nextSibling) {\n            getAllTextContent_(n, normalizeWhitespace, accumulator);\n        }\n    }\n    return accumulator;\n}\n/**\n * @param {Object} object Object.\n * @return {boolean} Is a document.\n */\nexport function isDocument(object) {\n    return 'documentElement' in object;\n}\n/**\n * @param {Element} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n    return node.getAttributeNS(namespaceURI, name) || '';\n}\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n    return new DOMParser().parseFromString(xml, 'application/xml');\n}\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, opt_this) {\n    return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            var array = /** @type {Array<*>} */ (objectStack[objectStack.length - 1]);\n            extend(array, value);\n        }\n    });\n}\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, opt_this) {\n    return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            var array = /** @type {Array<*>} */ (objectStack[objectStack.length - 1]);\n            array.push(value);\n        }\n    });\n}\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, opt_this) {\n    return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            objectStack[objectStack.length - 1] = value;\n        }\n    });\n}\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [opt_property] Property.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, opt_property, opt_this) {\n    return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            var object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n            var property = opt_property !== undefined ? opt_property : node.localName;\n            var array = void 0;\n            if (property in object) {\n                array = object[property];\n            }\n            else {\n                array = [];\n                object[property] = array;\n            }\n            array.push(value);\n        }\n    });\n}\n/**\n * Make an object property setter function.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [opt_property] Property.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, opt_property, opt_this) {\n    return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            var object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n            var property = opt_property !== undefined ? opt_property : node.localName;\n            object[property] = value;\n        }\n    });\n}\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [opt_this] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, opt_this) {\n    return function (node, value, objectStack) {\n        nodeWriter.call(opt_this !== undefined ? opt_this : this, node, value, objectStack);\n        var parent = /** @type {NodeStackItem} */ (objectStack[objectStack.length - 1]);\n        var parentNode = parent.node;\n        parentNode.appendChild(node);\n    };\n}\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml.serialize}. This can be used by the parent writer to have the\n * 'nodeWriter' called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Element, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [opt_this] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, opt_this) {\n    var serializersNS, nodeFactory;\n    return function (node, value, objectStack) {\n        if (serializersNS === undefined) {\n            serializersNS = {};\n            var serializers = {};\n            serializers[node.localName] = nodeWriter;\n            serializersNS[node.namespaceURI] = serializers;\n            nodeFactory = makeSimpleNodeFactory(node.localName);\n        }\n        serialize(serializersNS, nodeFactory, value, objectStack);\n    };\n}\n/**\n * Create a node factory which can use the `opt_keys` passed to\n * {@link module:ol/xml.serialize} or {@link module:ol/xml.pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string} [opt_nodeName] Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string} [opt_namespaceURI] Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(opt_nodeName, opt_namespaceURI) {\n    var fixedNodeName = opt_nodeName;\n    return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string} [opt_nodeName] Node name.\n     * @return {Node} Node.\n     */\n    function (value, objectStack, opt_nodeName) {\n        var context = /** @type {NodeStackItem} */ (objectStack[objectStack.length - 1]);\n        var node = context.node;\n        var nodeName = fixedNodeName;\n        if (nodeName === undefined) {\n            nodeName = opt_nodeName;\n        }\n        var namespaceURI = opt_namespaceURI !== undefined ? opt_namespaceURI : node.namespaceURI;\n        return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    });\n}\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport var OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n/**\n * Create an array of `values` to be used with {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `opt_key` argument.\n * @param {Object<string, *>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<*>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n */\nexport function makeSequence(object, orderedKeys) {\n    var length = orderedKeys.length;\n    var sequence = new Array(length);\n    for (var i = 0; i < length; ++i) {\n        sequence[i] = object[orderedKeys[i]];\n    }\n    return sequence;\n}\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>} [opt_structureNS] Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, opt_structureNS) {\n    /**\n     * @type {Object<string, T>}\n     */\n    var structureNS = opt_structureNS !== undefined ? opt_structureNS : {};\n    var i, ii;\n    for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n        structureNS[namespaceURIs[i]] = structure;\n    }\n    return structureNS;\n}\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [opt_this] The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, opt_this) {\n    var n;\n    for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n        var parsers = parsersNS[n.namespaceURI];\n        if (parsers !== undefined) {\n            var parser = parsers[n.localName];\n            if (parser !== undefined) {\n                parser.call(opt_this, n, objectStack);\n            }\n        }\n    }\n}\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [opt_this] The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(object, parsersNS, node, objectStack, opt_this) {\n    objectStack.push(object);\n    parseNode(parsersNS, node, objectStack, opt_this);\n    return /** @type {T} */ (objectStack.pop());\n}\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [opt_keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T} [opt_this] The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n    var length = (opt_keys !== undefined ? opt_keys : values).length;\n    var value, node;\n    for (var i = 0; i < length; ++i) {\n        value = values[i];\n        if (value !== undefined) {\n            node = nodeFactory.call(opt_this !== undefined ? opt_this : this, value, objectStack, opt_keys !== undefined ? opt_keys[i] : undefined);\n            if (node !== undefined) {\n                serializersNS[node.namespaceURI][node.localName].call(opt_this, node, value, objectStack);\n            }\n        }\n    }\n}\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [opt_keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T} [opt_this] The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(object, serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n    objectStack.push(object);\n    serialize(serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this);\n    return /** @type {O|undefined} */ (objectStack.pop());\n}\nvar xmlSerializer_ = undefined;\n/**\n * Register a XMLSerializer. Can be used  to inject a XMLSerializer\n * where there is no globally available implementation.\n *\n * @param {XMLSerializer} xmlSerializer A XMLSerializer.\n * @api\n */\nexport function registerXMLSerializer(xmlSerializer) {\n    xmlSerializer_ = xmlSerializer;\n}\n/**\n * @return {XMLSerializer} The XMLSerializer.\n */\nexport function getXMLSerializer() {\n    if (xmlSerializer_ === undefined && typeof XMLSerializer !== 'undefined') {\n        xmlSerializer_ = new XMLSerializer();\n    }\n    return xmlSerializer_;\n}\nvar document_ = undefined;\n/**\n * Register a Document to use when creating nodes for XML serializations. Can be used\n * to inject a Document where there is no globally available implementation.\n *\n * @param {Document} document A Document.\n * @api\n */\nexport function registerDocument(document) {\n    document_ = document;\n}\n/**\n * Get a document that should be used when creating nodes for XML serializations.\n * @return {Document} The document.\n */\nexport function getDocument() {\n    if (document_ === undefined && typeof document !== 'undefined') {\n        document_ = document.implementation.createDocument('', '', null);\n    }\n    return document_;\n}\n//# sourceMappingURL=xml.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/XMLFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport { abstract } from '../util.js';\nimport { extend } from '../array.js';\nimport { getXMLSerializer, isDocument, parse } from '../xml.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @abstract\n */\nvar XMLFeature = /** @class */ (function (_super) {\n    __extends(XMLFeature, _super);\n    function XMLFeature() {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {XMLSerializer}\n         * @private\n         */\n        _this.xmlSerializer_ = getXMLSerializer();\n        return _this;\n    }\n    /**\n     * @return {import(\"./FormatType.js\").default} Format.\n     */\n    XMLFeature.prototype.getType = function () {\n        return FormatType.XML;\n    };\n    /**\n     * Read a single feature.\n     *\n     * @param {Document|Element|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     * @api\n     */\n    XMLFeature.prototype.readFeature = function (source, opt_options) {\n        if (!source) {\n            return null;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readFeatureFromDocument(doc, opt_options);\n        }\n        else if (isDocument(source)) {\n            return this.readFeatureFromDocument(\n            /** @type {Document} */ (source), opt_options);\n        }\n        else {\n            return this.readFeatureFromNode(\n            /** @type {Element} */ (source), opt_options);\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    XMLFeature.prototype.readFeatureFromDocument = function (doc, opt_options) {\n        var features = this.readFeaturesFromDocument(doc, opt_options);\n        if (features.length > 0) {\n            return features[0];\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    XMLFeature.prototype.readFeatureFromNode = function (node, opt_options) {\n        return null; // not implemented\n    };\n    /**\n     * Read all features from a feature collection.\n     *\n     * @param {Document|Element|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    XMLFeature.prototype.readFeatures = function (source, opt_options) {\n        if (!source) {\n            return [];\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readFeaturesFromDocument(doc, opt_options);\n        }\n        else if (isDocument(source)) {\n            return this.readFeaturesFromDocument(\n            /** @type {Document} */ (source), opt_options);\n        }\n        else {\n            return this.readFeaturesFromNode(\n            /** @type {Element} */ (source), opt_options);\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n     * @protected\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    XMLFeature.prototype.readFeaturesFromDocument = function (doc, opt_options) {\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        var features = [];\n        for (var n = doc.firstChild; n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                extend(features, this.readFeaturesFromNode(/** @type {Element} */ (n), opt_options));\n            }\n        }\n        return features;\n    };\n    /**\n     * @abstract\n     * @param {Element} node Node.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n     * @protected\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    XMLFeature.prototype.readFeaturesFromNode = function (node, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read a single geometry from a source.\n     *\n     * @param {Document|Element|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    XMLFeature.prototype.readGeometry = function (source, opt_options) {\n        if (!source) {\n            return null;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readGeometryFromDocument(doc, opt_options);\n        }\n        else if (isDocument(source)) {\n            return this.readGeometryFromDocument(\n            /** @type {Document} */ (source), opt_options);\n        }\n        else {\n            return this.readGeometryFromNode(\n            /** @type {Element} */ (source), opt_options);\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n     * @protected\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    XMLFeature.prototype.readGeometryFromDocument = function (doc, opt_options) {\n        return null; // not implemented\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n     * @protected\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    XMLFeature.prototype.readGeometryFromNode = function (node, opt_options) {\n        return null; // not implemented\n    };\n    /**\n     * Read the projection from the source.\n     *\n     * @param {Document|Element|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    XMLFeature.prototype.readProjection = function (source) {\n        if (!source) {\n            return null;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readProjectionFromDocument(doc);\n        }\n        else if (isDocument(source)) {\n            return this.readProjectionFromDocument(/** @type {Document} */ (source));\n        }\n        else {\n            return this.readProjectionFromNode(/** @type {Element} */ (source));\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @protected\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    XMLFeature.prototype.readProjectionFromDocument = function (doc) {\n        return this.dataProjection;\n    };\n    /**\n     * @param {Element} node Node.\n     * @protected\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    XMLFeature.prototype.readProjectionFromNode = function (node) {\n        return this.dataProjection;\n    };\n    /**\n     * Encode a feature as string.\n     *\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n     * @return {string} Encoded feature.\n     */\n    XMLFeature.prototype.writeFeature = function (feature, opt_options) {\n        var node = this.writeFeatureNode(feature, opt_options);\n        return this.xmlSerializer_.serializeToString(node);\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Options.\n     * @protected\n     * @return {Node} Node.\n     */\n    XMLFeature.prototype.writeFeatureNode = function (feature, opt_options) {\n        return null; // not implemented\n    };\n    /**\n     * Encode an array of features as string.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n     * @return {string} Result.\n     * @api\n     */\n    XMLFeature.prototype.writeFeatures = function (features, opt_options) {\n        var node = this.writeFeaturesNode(features, opt_options);\n        return this.xmlSerializer_.serializeToString(node);\n    };\n    /**\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Options.\n     * @return {Node} Node.\n     */\n    XMLFeature.prototype.writeFeaturesNode = function (features, opt_options) {\n        return null; // not implemented\n    };\n    /**\n     * Encode a geometry as string.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n     * @return {string} Encoded geometry.\n     */\n    XMLFeature.prototype.writeGeometry = function (geometry, opt_options) {\n        var node = this.writeGeometryNode(geometry, opt_options);\n        return this.xmlSerializer_.serializeToString(node);\n    };\n    /**\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Options.\n     * @return {Node} Node.\n     */\n    XMLFeature.prototype.writeGeometryNode = function (geometry, opt_options) {\n        return null; // not implemented\n    };\n    return XMLFeature;\n}(FeatureFormat));\nexport default XMLFeature;\n//# sourceMappingURL=XMLFeature.js.map","/**\n * @module ol/format/xsd\n */\nimport { getAllTextContent, getDocument } from '../xml.js';\nimport { padNumber } from '../string.js';\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n    var s = getAllTextContent(node, false);\n    return readBooleanString(s);\n}\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n    var m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n    if (m) {\n        return m[1] !== undefined || false;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n    var s = getAllTextContent(node, false);\n    var dateTime = Date.parse(s);\n    return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n    var s = getAllTextContent(node, false);\n    return readDecimalString(s);\n}\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n    // FIXME check spec\n    var m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n    if (m) {\n        return parseFloat(m[1]);\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readPositiveInteger(node) {\n    var s = getAllTextContent(node, false);\n    return readNonNegativeIntegerString(s);\n}\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n    var m = /^\\s*(\\d+)\\s*$/.exec(string);\n    if (m) {\n        return parseInt(m[1], 10);\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n    return getAllTextContent(node, false).trim();\n}\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n    writeStringTextNode(node, bool ? '1' : '0');\n}\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n    node.appendChild(getDocument().createCDATASection(string));\n}\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n    var date = new Date(dateTime * 1000);\n    var string = date.getUTCFullYear() +\n        '-' +\n        padNumber(date.getUTCMonth() + 1, 2) +\n        '-' +\n        padNumber(date.getUTCDate(), 2) +\n        'T' +\n        padNumber(date.getUTCHours(), 2) +\n        ':' +\n        padNumber(date.getUTCMinutes(), 2) +\n        ':' +\n        padNumber(date.getUTCSeconds(), 2) +\n        'Z';\n    node.appendChild(getDocument().createTextNode(string));\n}\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n    var string = decimal.toPrecision();\n    node.appendChild(getDocument().createTextNode(string));\n}\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n    var string = nonNegativeInteger.toString();\n    node.appendChild(getDocument().createTextNode(string));\n}\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n    node.appendChild(getDocument().createTextNode(string));\n}\n//# sourceMappingURL=xsd.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/KML\n */\nimport Feature from '../Feature.js';\nimport Fill from '../style/Fill.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Icon from '../style/Icon.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport XMLFeature from './XMLFeature.js';\nimport { OBJECT_PROPERTY_NODE_FACTORY, XML_SCHEMA_INSTANCE_URI, createElementNS, getAllTextContent, isDocument, makeArrayExtender, makeArrayPusher, makeChildAppender, makeObjectPropertySetter, makeReplacer, makeSequence, makeSimpleNodeFactory, makeStructureNS, parse, parseNode, pushParseAndPop, pushSerializeAndPop, } from '../xml.js';\nimport { asArray } from '../color.js';\nimport { assert } from '../asserts.js';\nimport { extend, includes } from '../array.js';\nimport { get as getProjection } from '../proj.js';\nimport { readBoolean, readDecimal, readString, writeBooleanTextNode, writeCDATASection, writeDecimalTextNode, writeStringTextNode, } from './xsd.js';\nimport { toRadians } from '../math.js';\nimport { transformGeometryWithOptions } from './Feature.js';\n/**\n * @typedef {Object} Vec2\n * @property {number} x X coordinate.\n * @property {import(\"../style/IconAnchorUnits\").default} xunits Units of x.\n * @property {number} y Y coordinate.\n * @property {import(\"../style/IconAnchorUnits\").default} yunits Units of Y.\n * @property {import(\"../style/IconOrigin.js\").default} [origin] Origin.\n */\n/**\n * @typedef {Object} GxTrackObject\n * @property {Array<Array<number>>} coordinates Coordinates.\n * @property {Array<number>} whens Whens.\n */\n/**\n * @const\n * @type {Array<string>}\n */\nvar GX_NAMESPACE_URIS = ['http://www.google.com/kml/ext/2.2'];\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [\n    null,\n    'http://earth.google.com/kml/2.0',\n    'http://earth.google.com/kml/2.1',\n    'http://earth.google.com/kml/2.2',\n    'http://www.opengis.net/kml/2.2',\n];\n/**\n * @const\n * @type {string}\n */\nvar SCHEMA_LOCATION = 'http://www.opengis.net/kml/2.2 ' +\n    'https://developers.google.com/kml/schema/kml22gx.xsd';\n/**\n * @type {Object<string, import(\"../style/IconAnchorUnits\").default>}\n */\nvar ICON_ANCHOR_UNITS_MAP = {\n    'fraction': IconAnchorUnits.FRACTION,\n    'pixels': IconAnchorUnits.PIXELS,\n    'insetPixels': IconAnchorUnits.PIXELS,\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar PLACEMARK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'MultiGeometry': makeObjectPropertySetter(readMultiGeometry, 'geometry'),\n    'LineString': makeObjectPropertySetter(readLineString, 'geometry'),\n    'LinearRing': makeObjectPropertySetter(readLinearRing, 'geometry'),\n    'Point': makeObjectPropertySetter(readPoint, 'geometry'),\n    'Polygon': makeObjectPropertySetter(readPolygon, 'geometry'),\n    'Style': makeObjectPropertySetter(readStyle),\n    'StyleMap': placemarkStyleMapParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readStyleURL),\n    'visibility': makeObjectPropertySetter(readBoolean),\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n    'MultiTrack': makeObjectPropertySetter(readGxMultiTrack, 'geometry'),\n    'Track': makeObjectPropertySetter(readGxTrack, 'geometry'),\n}));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar NETWORK_LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'Link': linkParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'visibility': makeObjectPropertySetter(readBoolean),\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'href': makeObjectPropertySetter(readURI),\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar REGION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'LatLonAltBox': latLonAltBoxParser,\n    'Lod': lodParser,\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar KML_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['Document', 'Placemark']);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar KML_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'Document': makeChildAppender(writeDocument),\n    'Placemark': makeChildAppender(writePlacemark),\n});\n/**\n * @type {import(\"../color.js\").Color}\n */\nvar DEFAULT_COLOR;\n/**\n * @type {Fill}\n */\nvar DEFAULT_FILL_STYLE = null;\n/**\n * Get the default fill style (or null if not yet set).\n * @return {Fill} The default fill style.\n */\nexport function getDefaultFillStyle() {\n    return DEFAULT_FILL_STYLE;\n}\n/**\n * @type {import(\"../size.js\").Size}\n */\nvar DEFAULT_IMAGE_STYLE_ANCHOR;\n/**\n * @type {import(\"../style/IconAnchorUnits\").default}\n */\nvar DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n/**\n * @type {import(\"../style/IconAnchorUnits\").default}\n */\nvar DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n/**\n * @type {import(\"../size.js\").Size}\n */\nvar DEFAULT_IMAGE_STYLE_SIZE;\n/**\n * @type {string}\n */\nvar DEFAULT_IMAGE_STYLE_SRC;\n/**\n * @type {import(\"../style/Image.js\").default}\n */\nvar DEFAULT_IMAGE_STYLE = null;\n/**\n * Get the default image style (or null if not yet set).\n * @return {import(\"../style/Image.js\").default} The default image style.\n */\nexport function getDefaultImageStyle() {\n    return DEFAULT_IMAGE_STYLE;\n}\n/**\n * @type {string}\n */\nvar DEFAULT_NO_IMAGE_STYLE;\n/**\n * @type {Stroke}\n */\nvar DEFAULT_STROKE_STYLE = null;\n/**\n * Get the default stroke style (or null if not yet set).\n * @return {Stroke} The default stroke style.\n */\nexport function getDefaultStrokeStyle() {\n    return DEFAULT_STROKE_STYLE;\n}\n/**\n * @type {Stroke}\n */\nvar DEFAULT_TEXT_STROKE_STYLE;\n/**\n * @type {Text}\n */\nvar DEFAULT_TEXT_STYLE = null;\n/**\n * Get the default text style (or null if not yet set).\n * @return {Text} The default text style.\n */\nexport function getDefaultTextStyle() {\n    return DEFAULT_TEXT_STYLE;\n}\n/**\n * @type {Style}\n */\nvar DEFAULT_STYLE = null;\n/**\n * Get the default style (or null if not yet set).\n * @return {Style} The default style.\n */\nexport function getDefaultStyle() {\n    return DEFAULT_STYLE;\n}\n/**\n * @type {Array<Style>}\n */\nvar DEFAULT_STYLE_ARRAY = null;\n/**\n * Get the default style array (or null if not yet set).\n * @return {Array<Style>} The default style.\n */\nexport function getDefaultStyleArray() {\n    return DEFAULT_STYLE_ARRAY;\n}\n/**\n * Function that returns the scale needed to normalize an icon image to 32 pixels.\n * @param {import(\"../size.js\").Size} size Image size.\n * @return {number} Scale.\n */\nfunction scaleForSize(size) {\n    return 32 / Math.min(size[0], size[1]);\n}\nfunction createStyleDefaults() {\n    DEFAULT_COLOR = [255, 255, 255, 1];\n    DEFAULT_FILL_STYLE = new Fill({\n        color: DEFAULT_COLOR,\n    });\n    DEFAULT_IMAGE_STYLE_ANCHOR = [20, 2];\n    DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS = IconAnchorUnits.PIXELS;\n    DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS = IconAnchorUnits.PIXELS;\n    DEFAULT_IMAGE_STYLE_SIZE = [64, 64];\n    DEFAULT_IMAGE_STYLE_SRC =\n        'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n    DEFAULT_IMAGE_STYLE = new Icon({\n        anchor: DEFAULT_IMAGE_STYLE_ANCHOR,\n        anchorOrigin: IconOrigin.BOTTOM_LEFT,\n        anchorXUnits: DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,\n        anchorYUnits: DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,\n        crossOrigin: 'anonymous',\n        rotation: 0,\n        scale: scaleForSize(DEFAULT_IMAGE_STYLE_SIZE),\n        size: DEFAULT_IMAGE_STYLE_SIZE,\n        src: DEFAULT_IMAGE_STYLE_SRC,\n    });\n    DEFAULT_NO_IMAGE_STYLE = 'NO_IMAGE';\n    DEFAULT_STROKE_STYLE = new Stroke({\n        color: DEFAULT_COLOR,\n        width: 1,\n    });\n    DEFAULT_TEXT_STROKE_STYLE = new Stroke({\n        color: [51, 51, 51, 1],\n        width: 2,\n    });\n    DEFAULT_TEXT_STYLE = new Text({\n        font: 'bold 16px Helvetica',\n        fill: DEFAULT_FILL_STYLE,\n        stroke: DEFAULT_TEXT_STROKE_STYLE,\n        scale: 0.8,\n    });\n    DEFAULT_STYLE = new Style({\n        fill: DEFAULT_FILL_STYLE,\n        image: DEFAULT_IMAGE_STYLE,\n        text: DEFAULT_TEXT_STYLE,\n        stroke: DEFAULT_STROKE_STYLE,\n        zIndex: 0,\n    });\n    DEFAULT_STYLE_ARRAY = [DEFAULT_STYLE];\n}\n/**\n * @type {HTMLTextAreaElement}\n */\nvar TEXTAREA;\n/**\n * A function that takes a url `{string}` and returns a url `{string}`.\n * Might be used to change an icon path or to substitute a\n * data url obtained from a KMZ array buffer.\n *\n * @typedef {function(string):string} IconUrlFunction\n * @api\n */\n/**\n * Function that returns a url unchanged.\n * @param {string} href Input url.\n * @return {string} Output url.\n */\nfunction defaultIconUrlFunction(href) {\n    return href;\n}\n/**\n * @typedef {Object} Options\n * @property {boolean} [extractStyles=true] Extract styles from the KML.\n * @property {boolean} [showPointNames=true] Show names as labels for placemarks which contain points.\n * @property {Array<Style>} [defaultStyle] Default style. The\n * default default style is the same as Google Earth.\n * @property {boolean} [writeStyles=true] Write styles into KML.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * @property {IconUrlFunction} [iconUrlFunction] Function that takes a url string and returns a url string.\n * Might be used to change an icon path or to substitute a data url obtained from a KMZ array buffer.\n */\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * {@link module:ol/format/KML~KML#readFeature} will read the first feature from\n * a KML source.\n *\n * MultiGeometries are converted into GeometryCollections if they are a mix of\n * geometry types, and into MultiPoint/MultiLineString/MultiPolygon if they are\n * all of the same type.\n *\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\n * which do not support this will need a URL polyfill to be loaded before use.\n *\n * @api\n */\nvar KML = /** @class */ (function (_super) {\n    __extends(KML, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function KML(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        if (!DEFAULT_STYLE_ARRAY) {\n            createStyleDefaults();\n        }\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.dataProjection = getProjection('EPSG:4326');\n        /**\n         * @private\n         * @type {Array<Style>}\n         */\n        _this.defaultStyle_ = options.defaultStyle\n            ? options.defaultStyle\n            : DEFAULT_STYLE_ARRAY;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.extractStyles_ =\n            options.extractStyles !== undefined ? options.extractStyles : true;\n        /**\n         * @type {boolean}\n         */\n        _this.writeStyles_ =\n            options.writeStyles !== undefined ? options.writeStyles : true;\n        /**\n         * @private\n         * @type {!Object<string, (Array<Style>|string)>}\n         */\n        _this.sharedStyles_ = {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.showPointNames_ =\n            options.showPointNames !== undefined ? options.showPointNames : true;\n        /**\n         * @type {null|string}\n         */\n        _this.crossOrigin_ =\n            options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n        /**\n         * @type {IconUrlFunction}\n         */\n        _this.iconUrlFunction_ = options.iconUrlFunction\n            ? options.iconUrlFunction\n            : defaultIconUrlFunction;\n        _this.supportedMediaTypes = ['application/vnd.google-earth.kml+xml'];\n        return _this;\n    }\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Array<Feature>|undefined} Features.\n     */\n    KML.prototype.readDocumentOrFolder_ = function (node, objectStack) {\n        // FIXME use scope somehow\n        var parsersNS = makeStructureNS(NAMESPACE_URIS, {\n            'Document': makeArrayExtender(this.readDocumentOrFolder_, this),\n            'Folder': makeArrayExtender(this.readDocumentOrFolder_, this),\n            'Placemark': makeArrayPusher(this.readPlacemark_, this),\n            'Style': this.readSharedStyle_.bind(this),\n            'StyleMap': this.readSharedStyleMap_.bind(this),\n        });\n        /** @type {Array<Feature>} */\n        // @ts-ignore\n        var features = pushParseAndPop([], parsersNS, node, objectStack, this);\n        if (features) {\n            return features;\n        }\n        else {\n            return undefined;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Feature|undefined} Feature.\n     */\n    KML.prototype.readPlacemark_ = function (node, objectStack) {\n        var object = pushParseAndPop({ 'geometry': null }, PLACEMARK_PARSERS, node, objectStack, this);\n        if (!object) {\n            return undefined;\n        }\n        var feature = new Feature();\n        var id = node.getAttribute('id');\n        if (id !== null) {\n            feature.setId(id);\n        }\n        var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n        var geometry = object['geometry'];\n        if (geometry) {\n            transformGeometryWithOptions(geometry, false, options);\n        }\n        feature.setGeometry(geometry);\n        delete object['geometry'];\n        if (this.extractStyles_) {\n            var style = object['Style'];\n            var styleUrl = object['styleUrl'];\n            var styleFunction = createFeatureStyleFunction(style, styleUrl, this.defaultStyle_, this.sharedStyles_, this.showPointNames_);\n            feature.setStyle(styleFunction);\n        }\n        delete object['Style'];\n        // we do not remove the styleUrl property from the object, so it\n        // gets stored on feature when setProperties is called\n        feature.setProperties(object, true);\n        return feature;\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    KML.prototype.readSharedStyle_ = function (node, objectStack) {\n        var id = node.getAttribute('id');\n        if (id !== null) {\n            var style = readStyle.call(this, node, objectStack);\n            if (style) {\n                var styleUri = void 0;\n                var baseURI = node.baseURI;\n                if (!baseURI || baseURI == 'about:blank') {\n                    baseURI = window.location.href;\n                }\n                if (baseURI) {\n                    var url = new URL('#' + id, baseURI);\n                    styleUri = url.href;\n                }\n                else {\n                    styleUri = '#' + id;\n                }\n                this.sharedStyles_[styleUri] = style;\n            }\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    KML.prototype.readSharedStyleMap_ = function (node, objectStack) {\n        var id = node.getAttribute('id');\n        if (id === null) {\n            return;\n        }\n        var styleMapValue = readStyleMapValue.call(this, node, objectStack);\n        if (!styleMapValue) {\n            return;\n        }\n        var styleUri;\n        var baseURI = node.baseURI;\n        if (!baseURI || baseURI == 'about:blank') {\n            baseURI = window.location.href;\n        }\n        if (baseURI) {\n            var url = new URL('#' + id, baseURI);\n            styleUri = url.href;\n        }\n        else {\n            styleUri = '#' + id;\n        }\n        this.sharedStyles_[styleUri] = styleMapValue;\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    KML.prototype.readFeatureFromNode = function (node, opt_options) {\n        if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n            return null;\n        }\n        var feature = this.readPlacemark_(node, [\n            this.getReadOptions(node, opt_options),\n        ]);\n        if (feature) {\n            return feature;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * @protected\n     * @param {Element} node Node.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    KML.prototype.readFeaturesFromNode = function (node, opt_options) {\n        if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n            return [];\n        }\n        var features;\n        var localName = node.localName;\n        if (localName == 'Document' || localName == 'Folder') {\n            features = this.readDocumentOrFolder_(node, [\n                this.getReadOptions(node, opt_options),\n            ]);\n            if (features) {\n                return features;\n            }\n            else {\n                return [];\n            }\n        }\n        else if (localName == 'Placemark') {\n            var feature = this.readPlacemark_(node, [\n                this.getReadOptions(node, opt_options),\n            ]);\n            if (feature) {\n                return [feature];\n            }\n            else {\n                return [];\n            }\n        }\n        else if (localName == 'kml') {\n            features = [];\n            for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n                var fs = this.readFeaturesFromNode(n, opt_options);\n                if (fs) {\n                    extend(features, fs);\n                }\n            }\n            return features;\n        }\n        else {\n            return [];\n        }\n    };\n    /**\n     * Read the name of the KML.\n     *\n     * @param {Document|Element|string} source Source.\n     * @return {string|undefined} Name.\n     * @api\n     */\n    KML.prototype.readName = function (source) {\n        if (!source) {\n            return undefined;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readNameFromDocument(doc);\n        }\n        else if (isDocument(source)) {\n            return this.readNameFromDocument(/** @type {Document} */ (source));\n        }\n        else {\n            return this.readNameFromNode(/** @type {Element} */ (source));\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @return {string|undefined} Name.\n     */\n    KML.prototype.readNameFromDocument = function (doc) {\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                var name_1 = this.readNameFromNode(/** @type {Element} */ (n));\n                if (name_1) {\n                    return name_1;\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @param {Element} node Node.\n     * @return {string|undefined} Name.\n     */\n    KML.prototype.readNameFromNode = function (node) {\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            if (includes(NAMESPACE_URIS, n.namespaceURI) && n.localName == 'name') {\n                return readString(n);\n            }\n        }\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            var localName = n.localName;\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n                (localName == 'Document' ||\n                    localName == 'Folder' ||\n                    localName == 'Placemark' ||\n                    localName == 'kml')) {\n                var name_2 = this.readNameFromNode(n);\n                if (name_2) {\n                    return name_2;\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Read the network links of the KML.\n     *\n     * @param {Document|Element|string} source Source.\n     * @return {Array<Object>} Network links.\n     * @api\n     */\n    KML.prototype.readNetworkLinks = function (source) {\n        var networkLinks = [];\n        if (typeof source === 'string') {\n            var doc = parse(source);\n            extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n        }\n        else if (isDocument(source)) {\n            extend(networkLinks, this.readNetworkLinksFromDocument(/** @type {Document} */ (source)));\n        }\n        else {\n            extend(networkLinks, this.readNetworkLinksFromNode(/** @type {Element} */ (source)));\n        }\n        return networkLinks;\n    };\n    /**\n     * @param {Document} doc Document.\n     * @return {Array<Object>} Network links.\n     */\n    KML.prototype.readNetworkLinksFromDocument = function (doc) {\n        var networkLinks = [];\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                extend(networkLinks, this.readNetworkLinksFromNode(/** @type {Element} */ (n)));\n            }\n        }\n        return networkLinks;\n    };\n    /**\n     * @param {Element} node Node.\n     * @return {Array<Object>} Network links.\n     */\n    KML.prototype.readNetworkLinksFromNode = function (node) {\n        var networkLinks = [];\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n                n.localName == 'NetworkLink') {\n                var obj = pushParseAndPop({}, NETWORK_LINK_PARSERS, n, []);\n                networkLinks.push(obj);\n            }\n        }\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            var localName = n.localName;\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n                (localName == 'Document' || localName == 'Folder' || localName == 'kml')) {\n                extend(networkLinks, this.readNetworkLinksFromNode(n));\n            }\n        }\n        return networkLinks;\n    };\n    /**\n     * Read the regions of the KML.\n     *\n     * @param {Document|Element|string} source Source.\n     * @return {Array<Object>} Regions.\n     * @api\n     */\n    KML.prototype.readRegion = function (source) {\n        var regions = [];\n        if (typeof source === 'string') {\n            var doc = parse(source);\n            extend(regions, this.readRegionFromDocument(doc));\n        }\n        else if (isDocument(source)) {\n            extend(regions, this.readRegionFromDocument(/** @type {Document} */ (source)));\n        }\n        else {\n            extend(regions, this.readRegionFromNode(/** @type {Element} */ (source)));\n        }\n        return regions;\n    };\n    /**\n     * @param {Document} doc Document.\n     * @return {Array<Object>} Region.\n     */\n    KML.prototype.readRegionFromDocument = function (doc) {\n        var regions = [];\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                extend(regions, this.readRegionFromNode(/** @type {Element} */ (n)));\n            }\n        }\n        return regions;\n    };\n    /**\n     * @param {Element} node Node.\n     * @return {Array<Object>} Region.\n     * @api\n     */\n    KML.prototype.readRegionFromNode = function (node) {\n        var regions = [];\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            if (includes(NAMESPACE_URIS, n.namespaceURI) && n.localName == 'Region') {\n                var obj = pushParseAndPop({}, REGION_PARSERS, n, []);\n                regions.push(obj);\n            }\n        }\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            var localName = n.localName;\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n                (localName == 'Document' || localName == 'Folder' || localName == 'kml')) {\n                extend(regions, this.readRegionFromNode(n));\n            }\n        }\n        return regions;\n    };\n    /**\n     * Encode an array of features in the KML format as an XML node. GeometryCollections,\n     * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n     *\n     * @param {Array<Feature>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Options.\n     * @return {Node} Node.\n     * @api\n     */\n    KML.prototype.writeFeaturesNode = function (features, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        var kml = createElementNS(NAMESPACE_URIS[4], 'kml');\n        var xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n        kml.setAttributeNS(xmlnsUri, 'xmlns:gx', GX_NAMESPACE_URIS[0]);\n        kml.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n        kml.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', SCHEMA_LOCATION);\n        var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {\n            node: kml,\n        };\n        /** @type {!Object<string, (Array<Feature>|Feature|undefined)>} */\n        var properties = {};\n        if (features.length > 1) {\n            properties['Document'] = features;\n        }\n        else if (features.length == 1) {\n            properties['Placemark'] = features[0];\n        }\n        var orderedKeys = KML_SEQUENCE[kml.namespaceURI];\n        var values = makeSequence(properties, orderedKeys);\n        pushSerializeAndPop(context, KML_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, [opt_options], orderedKeys, this);\n        return kml;\n    };\n    return KML;\n}(XMLFeature));\n/**\n * @param {Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {Style} style Style.\n */\nfunction createNameStyleFunction(foundStyle, name) {\n    var textOffset = [0, 0];\n    var textAlign = 'start';\n    var imageStyle = foundStyle.getImage();\n    if (imageStyle) {\n        var imageSize = imageStyle.getSize();\n        if (imageSize && imageSize.length == 2) {\n            var imageScale = imageStyle.getScaleArray();\n            var anchor = imageStyle.getAnchor();\n            // Offset the label to be centered to the right of the icon,\n            // if there is one.\n            textOffset[0] = imageScale[0] * (imageSize[0] - anchor[0]);\n            textOffset[1] = imageScale[1] * (imageSize[1] / 2 - anchor[1]);\n            textAlign = 'left';\n        }\n    }\n    var textStyle = foundStyle.getText();\n    if (textStyle) {\n        // clone the text style, customizing it with name, alignments and offset.\n        // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n        textStyle = textStyle.clone();\n        textStyle.setFont(textStyle.getFont() || DEFAULT_TEXT_STYLE.getFont());\n        textStyle.setScale(textStyle.getScale() || DEFAULT_TEXT_STYLE.getScale());\n        textStyle.setFill(textStyle.getFill() || DEFAULT_TEXT_STYLE.getFill());\n        textStyle.setStroke(textStyle.getStroke() || DEFAULT_TEXT_STROKE_STYLE);\n    }\n    else {\n        textStyle = DEFAULT_TEXT_STYLE.clone();\n    }\n    textStyle.setText(name);\n    textStyle.setOffsetX(textOffset[0]);\n    textStyle.setOffsetY(textOffset[1]);\n    textStyle.setTextAlign(textAlign);\n    var nameStyle = new Style({\n        image: imageStyle,\n        text: textStyle,\n    });\n    return nameStyle;\n}\n/**\n * @param {Array<Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles Shared styles.\n * @param {boolean|undefined} showPointNames true to show names for point placemarks.\n * @return {import(\"../style/Style.js\").StyleFunction} Feature style function.\n */\nfunction createFeatureStyleFunction(style, styleUrl, defaultStyle, sharedStyles, showPointNames) {\n    return (\n    /**\n     * @param {Feature} feature feature.\n     * @param {number} resolution Resolution.\n     * @return {Array<Style>|Style} Style.\n     */\n    function (feature, resolution) {\n        var drawName = showPointNames;\n        var name = '';\n        var multiGeometryPoints = [];\n        if (drawName) {\n            var geometry = feature.getGeometry();\n            if (geometry) {\n                var type = geometry.getType();\n                if (type === GeometryType.GEOMETRY_COLLECTION) {\n                    multiGeometryPoints = geometry\n                        .getGeometriesArrayRecursive()\n                        .filter(function (geometry) {\n                        var type = geometry.getType();\n                        return (type === GeometryType.POINT ||\n                            type === GeometryType.MULTI_POINT);\n                    });\n                    drawName = multiGeometryPoints.length > 0;\n                }\n                else {\n                    drawName =\n                        type === GeometryType.POINT || type === GeometryType.MULTI_POINT;\n                }\n            }\n        }\n        if (drawName) {\n            name = /** @type {string} */ (feature.get('name'));\n            drawName = drawName && !!name;\n            // convert any html character codes\n            if (drawName && name.search(/&[^&]+;/) > -1) {\n                if (!TEXTAREA) {\n                    TEXTAREA = document.createElement('textarea');\n                }\n                TEXTAREA.innerHTML = name;\n                name = TEXTAREA.value;\n            }\n        }\n        var featureStyle = defaultStyle;\n        if (style) {\n            featureStyle = style;\n        }\n        else if (styleUrl) {\n            featureStyle = findStyle(styleUrl, defaultStyle, sharedStyles);\n        }\n        if (drawName) {\n            var nameStyle = createNameStyleFunction(featureStyle[0], name);\n            if (multiGeometryPoints.length > 0) {\n                // in multigeometries restrict the name style to points and create a\n                // style without image or text for geometries requiring fill or stroke\n                // including any polygon specific style if there is one\n                nameStyle.setGeometry(new GeometryCollection(multiGeometryPoints));\n                var baseStyle = new Style({\n                    geometry: featureStyle[0].getGeometry(),\n                    image: null,\n                    fill: featureStyle[0].getFill(),\n                    stroke: featureStyle[0].getStroke(),\n                    text: null,\n                });\n                return [nameStyle, baseStyle].concat(featureStyle.slice(1));\n            }\n            return nameStyle;\n        }\n        return featureStyle;\n    });\n}\n/**\n * @param {Array<Style>|string|undefined} styleValue Style value.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array<Style>} Style.\n */\nfunction findStyle(styleValue, defaultStyle, sharedStyles) {\n    if (Array.isArray(styleValue)) {\n        return styleValue;\n    }\n    else if (typeof styleValue === 'string') {\n        return findStyle(sharedStyles[styleValue], defaultStyle, sharedStyles);\n    }\n    else {\n        return defaultStyle;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {import(\"../color.js\").Color|undefined} Color.\n */\nfunction readColor(node) {\n    var s = getAllTextContent(node, false);\n    // The KML specification states that colors should not include a leading `#`\n    // but we tolerate them.\n    var m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n    if (m) {\n        var hexColor = m[1];\n        return [\n            parseInt(hexColor.substr(6, 2), 16),\n            parseInt(hexColor.substr(4, 2), 16),\n            parseInt(hexColor.substr(2, 2), 16),\n            parseInt(hexColor.substr(0, 2), 16) / 255,\n        ];\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {Array<number>|undefined} Flat coordinates.\n */\nexport function readFlatCoordinates(node) {\n    var s = getAllTextContent(node, false);\n    var flatCoordinates = [];\n    // The KML specification states that coordinate tuples should not include\n    // spaces, but we tolerate them.\n    s = s.replace(/\\s*,\\s*/g, ',');\n    var re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?),([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|,|$)(?:([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|$))?\\s*/i;\n    var m;\n    while ((m = re.exec(s))) {\n        var x = parseFloat(m[1]);\n        var y = parseFloat(m[2]);\n        var z = m[3] ? parseFloat(m[3]) : 0;\n        flatCoordinates.push(x, y, z);\n        s = s.substr(m[0].length);\n    }\n    if (s !== '') {\n        return undefined;\n    }\n    return flatCoordinates;\n}\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readURI(node) {\n    var s = getAllTextContent(node, false).trim();\n    var baseURI = node.baseURI;\n    if (!baseURI || baseURI == 'about:blank') {\n        baseURI = window.location.href;\n    }\n    if (baseURI) {\n        var url = new URL(s, baseURI);\n        return url.href;\n    }\n    else {\n        return s;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readStyleURL(node) {\n    // KML files in the wild occasionally forget the leading\n    // `#` on styleUrlsdefined in the same document.\n    var s = getAllTextContent(node, false)\n        .trim()\n        .replace(/^(?!.*#)/, '#');\n    var baseURI = node.baseURI;\n    if (!baseURI || baseURI == 'about:blank') {\n        baseURI = window.location.href;\n    }\n    if (baseURI) {\n        var url = new URL(s, baseURI);\n        return url.href;\n    }\n    else {\n        return s;\n    }\n}\n/**\n * @param {Element} node Node.\n * @return {Vec2} Vec2.\n */\nfunction readVec2(node) {\n    var xunits = node.getAttribute('xunits');\n    var yunits = node.getAttribute('yunits');\n    var origin;\n    if (xunits !== 'insetPixels') {\n        if (yunits !== 'insetPixels') {\n            origin = IconOrigin.BOTTOM_LEFT;\n        }\n        else {\n            origin = IconOrigin.TOP_LEFT;\n        }\n    }\n    else {\n        if (yunits !== 'insetPixels') {\n            origin = IconOrigin.BOTTOM_RIGHT;\n        }\n        else {\n            origin = IconOrigin.TOP_RIGHT;\n        }\n    }\n    return {\n        x: parseFloat(node.getAttribute('x')),\n        xunits: ICON_ANCHOR_UNITS_MAP[xunits],\n        y: parseFloat(node.getAttribute('y')),\n        yunits: ICON_ANCHOR_UNITS_MAP[yunits],\n        origin: origin,\n    };\n}\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Scale.\n */\nfunction readScale(node) {\n    return readDecimal(node);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar STYLE_MAP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Pair': pairDataParser,\n});\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>|string|undefined} StyleMap.\n */\nfunction readStyleMapValue(node, objectStack) {\n    return pushParseAndPop(undefined, STYLE_MAP_PARSERS, node, objectStack, this);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar ICON_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Icon': makeObjectPropertySetter(readIcon),\n    'color': makeObjectPropertySetter(readColor),\n    'heading': makeObjectPropertySetter(readDecimal),\n    'hotSpot': makeObjectPropertySetter(readVec2),\n    'scale': makeObjectPropertySetter(readScale),\n});\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction iconStyleParser(node, objectStack) {\n    // FIXME refreshMode\n    // FIXME refreshInterval\n    // FIXME viewRefreshTime\n    // FIXME viewBoundScale\n    // FIXME viewFormat\n    // FIXME httpQuery\n    var object = pushParseAndPop({}, ICON_STYLE_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var styleObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var IconObject = 'Icon' in object ? object['Icon'] : {};\n    var drawIcon = !('Icon' in object) || Object.keys(IconObject).length > 0;\n    var src;\n    var href = /** @type {string|undefined} */ (IconObject['href']);\n    if (href) {\n        src = href;\n    }\n    else if (drawIcon) {\n        src = DEFAULT_IMAGE_STYLE_SRC;\n    }\n    var anchor, anchorXUnits, anchorYUnits;\n    var anchorOrigin = IconOrigin.BOTTOM_LEFT;\n    var hotSpot = /** @type {Vec2|undefined} */ (object['hotSpot']);\n    if (hotSpot) {\n        anchor = [hotSpot.x, hotSpot.y];\n        anchorXUnits = hotSpot.xunits;\n        anchorYUnits = hotSpot.yunits;\n        anchorOrigin = hotSpot.origin;\n    }\n    else if (/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n        // Google hotspots from https://kml4earth.appspot.com/icons.html#notes\n        if (/pushpin/.test(src)) {\n            anchor = DEFAULT_IMAGE_STYLE_ANCHOR;\n            anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n            anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n        }\n        else if (/arrow-reverse/.test(src)) {\n            anchor = [54, 42];\n            anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n            anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n        }\n        else if (/paddle/.test(src)) {\n            anchor = [32, 1];\n            anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n            anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n        }\n    }\n    var offset;\n    var x = /** @type {number|undefined} */ (IconObject['x']);\n    var y = /** @type {number|undefined} */ (IconObject['y']);\n    if (x !== undefined && y !== undefined) {\n        offset = [x, y];\n    }\n    var size;\n    var w = /** @type {number|undefined} */ (IconObject['w']);\n    var h = /** @type {number|undefined} */ (IconObject['h']);\n    if (w !== undefined && h !== undefined) {\n        size = [w, h];\n    }\n    var rotation;\n    var heading = /** @type {number} */ (object['heading']);\n    if (heading !== undefined) {\n        rotation = toRadians(heading);\n    }\n    var scale = /** @type {number|undefined} */ (object['scale']);\n    var color = /** @type {Array<number>|undefined} */ (object['color']);\n    if (drawIcon) {\n        if (src == DEFAULT_IMAGE_STYLE_SRC) {\n            size = DEFAULT_IMAGE_STYLE_SIZE;\n        }\n        var imageStyle_1 = new Icon({\n            anchor: anchor,\n            anchorOrigin: anchorOrigin,\n            anchorXUnits: anchorXUnits,\n            anchorYUnits: anchorYUnits,\n            crossOrigin: this.crossOrigin_,\n            offset: offset,\n            offsetOrigin: IconOrigin.BOTTOM_LEFT,\n            rotation: rotation,\n            scale: scale,\n            size: size,\n            src: this.iconUrlFunction_(src),\n            color: color,\n        });\n        var imageScale_1 = imageStyle_1.getScaleArray()[0];\n        var imageSize = imageStyle_1.getSize();\n        if (imageSize === null) {\n            var imageState = imageStyle_1.getImageState();\n            if (imageState === ImageState.IDLE || imageState === ImageState.LOADING) {\n                var listener_1 = function () {\n                    var imageState = imageStyle_1.getImageState();\n                    if (!(imageState === ImageState.IDLE ||\n                        imageState === ImageState.LOADING)) {\n                        var imageSize_1 = imageStyle_1.getSize();\n                        if (imageSize_1 && imageSize_1.length == 2) {\n                            var resizeScale = scaleForSize(imageSize_1);\n                            imageStyle_1.setScale(imageScale_1 * resizeScale);\n                        }\n                        imageStyle_1.unlistenImageChange(listener_1);\n                    }\n                };\n                imageStyle_1.listenImageChange(listener_1);\n                if (imageState === ImageState.IDLE) {\n                    imageStyle_1.load();\n                }\n            }\n        }\n        else if (imageSize.length == 2) {\n            var resizeScale = scaleForSize(imageSize);\n            imageStyle_1.setScale(imageScale_1 * resizeScale);\n        }\n        styleObject['imageStyle'] = imageStyle_1;\n    }\n    else {\n        // handle the case when we explicitly want to draw no icon.\n        styleObject['imageStyle'] = DEFAULT_NO_IMAGE_STYLE;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar LABEL_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'scale': makeObjectPropertySetter(readScale),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction labelStyleParser(node, objectStack) {\n    // FIXME colorMode\n    var object = pushParseAndPop({}, LABEL_STYLE_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var styleObject = objectStack[objectStack.length - 1];\n    var textStyle = new Text({\n        fill: new Fill({\n            color: \n            /** @type {import(\"../color.js\").Color} */\n            ('color' in object ? object['color'] : DEFAULT_COLOR),\n        }),\n        scale: /** @type {number|undefined} */ (object['scale']),\n    });\n    styleObject['textStyle'] = textStyle;\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar LINE_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'width': makeObjectPropertySetter(readDecimal),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lineStyleParser(node, objectStack) {\n    // FIXME colorMode\n    // FIXME gx:outerColor\n    // FIXME gx:outerWidth\n    // FIXME gx:physicalWidth\n    // FIXME gx:labelVisibility\n    var object = pushParseAndPop({}, LINE_STYLE_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var styleObject = objectStack[objectStack.length - 1];\n    var strokeStyle = new Stroke({\n        color: \n        /** @type {import(\"../color.js\").Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR),\n        width: /** @type {number} */ ('width' in object ? object['width'] : 1),\n    });\n    styleObject['strokeStyle'] = strokeStyle;\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar POLY_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'fill': makeObjectPropertySetter(readBoolean),\n    'outline': makeObjectPropertySetter(readBoolean),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction polyStyleParser(node, objectStack) {\n    // FIXME colorMode\n    var object = pushParseAndPop({}, POLY_STYLE_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var styleObject = objectStack[objectStack.length - 1];\n    var fillStyle = new Fill({\n        color: \n        /** @type {import(\"../color.js\").Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR),\n    });\n    styleObject['fillStyle'] = fillStyle;\n    var fill = /** @type {boolean|undefined} */ (object['fill']);\n    if (fill !== undefined) {\n        styleObject['fill'] = fill;\n    }\n    var outline = /** @type {boolean|undefined} */ (object['outline']);\n    if (outline !== undefined) {\n        styleObject['outline'] = outline;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar FLAT_LINEAR_RING_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'coordinates': makeReplacer(readFlatCoordinates),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} LinearRing flat coordinates.\n */\nfunction readFlatLinearRing(node, objectStack) {\n    return pushParseAndPop(null, FLAT_LINEAR_RING_PARSERS, node, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction gxCoordParser(node, objectStack) {\n    var gxTrackObject = \n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n    var coordinates = gxTrackObject.coordinates;\n    var s = getAllTextContent(node, false);\n    var re = /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n    var m = re.exec(s);\n    if (m) {\n        var x = parseFloat(m[1]);\n        var y = parseFloat(m[2]);\n        var z = parseFloat(m[3]);\n        coordinates.push([x, y, z]);\n    }\n    else {\n        coordinates.push([]);\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar GX_MULTITRACK_GEOMETRY_PARSERS = makeStructureNS(GX_NAMESPACE_URIS, {\n    'Track': makeArrayPusher(readGxTrack),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {MultiLineString|undefined} MultiLineString.\n */\nfunction readGxMultiTrack(node, objectStack) {\n    var lineStrings = pushParseAndPop([], GX_MULTITRACK_GEOMETRY_PARSERS, node, objectStack);\n    if (!lineStrings) {\n        return undefined;\n    }\n    return new MultiLineString(lineStrings);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar GX_TRACK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'when': whenParser,\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n    'coord': gxCoordParser,\n}));\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readGxTrack(node, objectStack) {\n    var gxTrackObject = pushParseAndPop(\n    /** @type {GxTrackObject} */ ({\n        coordinates: [],\n        whens: [],\n    }), GX_TRACK_PARSERS, node, objectStack);\n    if (!gxTrackObject) {\n        return undefined;\n    }\n    var flatCoordinates = [];\n    var coordinates = gxTrackObject.coordinates;\n    var whens = gxTrackObject.whens;\n    for (var i = 0, ii = Math.min(coordinates.length, whens.length); i < ii; ++i) {\n        if (coordinates[i].length == 3) {\n            flatCoordinates.push(coordinates[i][0], coordinates[i][1], coordinates[i][2], whens[i]);\n        }\n    }\n    return new LineString(flatCoordinates, GeometryLayout.XYZM);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar ICON_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'href': makeObjectPropertySetter(readURI),\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeObjectPropertySetter(readDecimal),\n    'y': makeObjectPropertySetter(readDecimal),\n    'w': makeObjectPropertySetter(readDecimal),\n    'h': makeObjectPropertySetter(readDecimal),\n}));\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Icon object.\n */\nfunction readIcon(node, objectStack) {\n    var iconObject = pushParseAndPop({}, ICON_PARSERS, node, objectStack);\n    if (iconObject) {\n        return iconObject;\n    }\n    else {\n        return null;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar GEOMETRY_FLAT_COORDINATES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'coordinates': makeReplacer(readFlatCoordinates),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} Flat coordinates.\n */\nfunction readFlatCoordinatesFromNode(node, objectStack) {\n    return pushParseAndPop(null, GEOMETRY_FLAT_COORDINATES_PARSERS, node, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar EXTRUDE_AND_ALTITUDE_MODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'extrude': makeObjectPropertySetter(readBoolean),\n    'tessellate': makeObjectPropertySetter(readBoolean),\n    'altitudeMode': makeObjectPropertySetter(readString),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readLineString(node, objectStack) {\n    var properties = pushParseAndPop({}, EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n    var flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n        var lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\n        lineString.setProperties(properties, true);\n        return lineString;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readLinearRing(node, objectStack) {\n    var properties = pushParseAndPop({}, EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n    var flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n        var polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, [\n            flatCoordinates.length,\n        ]);\n        polygon.setProperties(properties, true);\n        return polygon;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar MULTI_GEOMETRY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'LineString': makeArrayPusher(readLineString),\n    'LinearRing': makeArrayPusher(readLinearRing),\n    'MultiGeometry': makeArrayPusher(readMultiGeometry),\n    'Point': makeArrayPusher(readPoint),\n    'Polygon': makeArrayPusher(readPolygon),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readMultiGeometry(node, objectStack) {\n    var geometries = pushParseAndPop([], MULTI_GEOMETRY_PARSERS, node, objectStack);\n    if (!geometries) {\n        return null;\n    }\n    if (geometries.length === 0) {\n        return new GeometryCollection(geometries);\n    }\n    var multiGeometry;\n    var homogeneous = true;\n    var type = geometries[0].getType();\n    var geometry;\n    for (var i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        if (geometry.getType() != type) {\n            homogeneous = false;\n            break;\n        }\n    }\n    if (homogeneous) {\n        var layout = void 0;\n        var flatCoordinates = void 0;\n        if (type == GeometryType.POINT) {\n            var point = geometries[0];\n            layout = point.getLayout();\n            flatCoordinates = point.getFlatCoordinates();\n            for (var i = 1, ii = geometries.length; i < ii; ++i) {\n                geometry = geometries[i];\n                extend(flatCoordinates, geometry.getFlatCoordinates());\n            }\n            multiGeometry = new MultiPoint(flatCoordinates, layout);\n            setCommonGeometryProperties(multiGeometry, geometries);\n        }\n        else if (type == GeometryType.LINE_STRING) {\n            multiGeometry = new MultiLineString(geometries);\n            setCommonGeometryProperties(multiGeometry, geometries);\n        }\n        else if (type == GeometryType.POLYGON) {\n            multiGeometry = new MultiPolygon(geometries);\n            setCommonGeometryProperties(multiGeometry, geometries);\n        }\n        else if (type == GeometryType.GEOMETRY_COLLECTION) {\n            multiGeometry = new GeometryCollection(geometries);\n        }\n        else {\n            assert(false, 37); // Unknown geometry type found\n        }\n    }\n    else {\n        multiGeometry = new GeometryCollection(geometries);\n    }\n    return /** @type {import(\"../geom/Geometry.js\").default} */ (multiGeometry);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Point|undefined} Point.\n */\nfunction readPoint(node, objectStack) {\n    var properties = pushParseAndPop({}, EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n    var flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n        var point = new Point(flatCoordinates, GeometryLayout.XYZ);\n        point.setProperties(properties, true);\n        return point;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar FLAT_LINEAR_RINGS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'innerBoundaryIs': innerBoundaryIsParser,\n    'outerBoundaryIs': outerBoundaryIsParser,\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readPolygon(node, objectStack) {\n    var properties = pushParseAndPop(\n    /** @type {Object<string,*>} */ ({}), EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n    var flatLinearRings = pushParseAndPop([null], FLAT_LINEAR_RINGS_PARSERS, node, objectStack);\n    if (flatLinearRings && flatLinearRings[0]) {\n        var flatCoordinates = flatLinearRings[0];\n        var ends = [flatCoordinates.length];\n        for (var i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n            extend(flatCoordinates, flatLinearRings[i]);\n            ends.push(flatCoordinates.length);\n        }\n        var polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\n        polygon.setProperties(properties, true);\n        return polygon;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'IconStyle': iconStyleParser,\n    'LabelStyle': labelStyleParser,\n    'LineStyle': lineStyleParser,\n    'PolyStyle': polyStyleParser,\n});\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>} Style.\n */\nfunction readStyle(node, objectStack) {\n    var styleObject = pushParseAndPop({}, STYLE_PARSERS, node, objectStack, this);\n    if (!styleObject) {\n        return null;\n    }\n    var fillStyle = \n    /** @type {Fill} */\n    ('fillStyle' in styleObject ? styleObject['fillStyle'] : DEFAULT_FILL_STYLE);\n    var fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n    if (fill !== undefined && !fill) {\n        fillStyle = null;\n    }\n    var imageStyle;\n    if ('imageStyle' in styleObject) {\n        if (styleObject['imageStyle'] != DEFAULT_NO_IMAGE_STYLE) {\n            imageStyle = styleObject['imageStyle'];\n        }\n    }\n    else {\n        imageStyle = DEFAULT_IMAGE_STYLE;\n    }\n    var textStyle = \n    /** @type {Text} */\n    ('textStyle' in styleObject ? styleObject['textStyle'] : DEFAULT_TEXT_STYLE);\n    var strokeStyle = \n    /** @type {Stroke} */\n    ('strokeStyle' in styleObject\n        ? styleObject['strokeStyle']\n        : DEFAULT_STROKE_STYLE);\n    var outline = /** @type {boolean|undefined} */ (styleObject['outline']);\n    if (outline !== undefined && !outline) {\n        // if the polystyle specifies no outline two styles are needed,\n        // one for non-polygon geometries where linestrings require a stroke\n        // and one for polygons where there should be no stroke\n        return [\n            new Style({\n                geometry: function (feature) {\n                    var geometry = feature.getGeometry();\n                    var type = geometry.getType();\n                    if (type === GeometryType.GEOMETRY_COLLECTION) {\n                        var collection = \n                        /** @type {import(\"../geom/GeometryCollection\").default} */ (geometry);\n                        return new GeometryCollection(collection\n                            .getGeometriesArrayRecursive()\n                            .filter(function (geometry) {\n                            var type = geometry.getType();\n                            return (type !== GeometryType.POLYGON &&\n                                type !== GeometryType.MULTI_POLYGON);\n                        }));\n                    }\n                    else if (type !== GeometryType.POLYGON &&\n                        type !== GeometryType.MULTI_POLYGON) {\n                        return geometry;\n                    }\n                },\n                fill: fillStyle,\n                image: imageStyle,\n                stroke: strokeStyle,\n                text: textStyle,\n                zIndex: undefined, // FIXME\n            }),\n            new Style({\n                geometry: function (feature) {\n                    var geometry = feature.getGeometry();\n                    var type = geometry.getType();\n                    if (type === GeometryType.GEOMETRY_COLLECTION) {\n                        var collection = \n                        /** @type {import(\"../geom/GeometryCollection\").default} */ (geometry);\n                        return new GeometryCollection(collection\n                            .getGeometriesArrayRecursive()\n                            .filter(function (geometry) {\n                            var type = geometry.getType();\n                            return (type === GeometryType.POLYGON ||\n                                type === GeometryType.MULTI_POLYGON);\n                        }));\n                    }\n                    else if (type === GeometryType.POLYGON ||\n                        type === GeometryType.MULTI_POLYGON) {\n                        return geometry;\n                    }\n                },\n                fill: fillStyle,\n                stroke: null,\n                zIndex: undefined, // FIXME\n            }),\n        ];\n    }\n    return [\n        new Style({\n            fill: fillStyle,\n            image: imageStyle,\n            stroke: strokeStyle,\n            text: textStyle,\n            zIndex: undefined, // FIXME\n        }),\n    ];\n}\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {MultiPoint|MultiLineString|MultiPolygon} multiGeometry A multi-geometry.\n * @param {Array<import(\"../geom/Geometry.js\").default>} geometries List of geometries.\n */\nfunction setCommonGeometryProperties(multiGeometry, geometries) {\n    var ii = geometries.length;\n    var extrudes = new Array(geometries.length);\n    var tessellates = new Array(geometries.length);\n    var altitudeModes = new Array(geometries.length);\n    var hasExtrude, hasTessellate, hasAltitudeMode;\n    hasExtrude = false;\n    hasTessellate = false;\n    hasAltitudeMode = false;\n    for (var i = 0; i < ii; ++i) {\n        var geometry = geometries[i];\n        extrudes[i] = geometry.get('extrude');\n        tessellates[i] = geometry.get('tessellate');\n        altitudeModes[i] = geometry.get('altitudeMode');\n        hasExtrude = hasExtrude || extrudes[i] !== undefined;\n        hasTessellate = hasTessellate || tessellates[i] !== undefined;\n        hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n    }\n    if (hasExtrude) {\n        multiGeometry.set('extrude', extrudes);\n    }\n    if (hasTessellate) {\n        multiGeometry.set('tessellate', tessellates);\n    }\n    if (hasAltitudeMode) {\n        multiGeometry.set('altitudeMode', altitudeModes);\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'displayName': makeObjectPropertySetter(readString),\n    'value': makeObjectPropertySetter(readString),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction dataParser(node, objectStack) {\n    var name = node.getAttribute('name');\n    parseNode(DATA_PARSERS, node, objectStack);\n    var featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    if (name && featureObject.displayName) {\n        featureObject[name] = {\n            value: featureObject.value,\n            displayName: featureObject.displayName,\n            toString: function () {\n                return featureObject.value;\n            },\n        };\n    }\n    else if (name !== null) {\n        featureObject[name] = featureObject.value;\n    }\n    else if (featureObject.displayName !== null) {\n        featureObject[featureObject.displayName] = featureObject.value;\n    }\n    delete featureObject['value'];\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar EXTENDED_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Data': dataParser,\n    'SchemaData': schemaDataParser,\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction extendedDataParser(node, objectStack) {\n    parseNode(EXTENDED_DATA_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction regionParser(node, objectStack) {\n    parseNode(REGION_PARSERS, node, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar PAIR_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Style': makeObjectPropertySetter(readStyle),\n    'key': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readStyleURL),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction pairDataParser(node, objectStack) {\n    var pairObject = pushParseAndPop({}, PAIR_PARSERS, node, objectStack, this);\n    if (!pairObject) {\n        return;\n    }\n    var key = /** @type {string|undefined} */ (pairObject['key']);\n    if (key && key == 'normal') {\n        var styleUrl = /** @type {string|undefined} */ (pairObject['styleUrl']);\n        if (styleUrl) {\n            objectStack[objectStack.length - 1] = styleUrl;\n        }\n        var style = /** @type {Style} */ (pairObject['Style']);\n        if (style) {\n            objectStack[objectStack.length - 1] = style;\n        }\n    }\n}\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction placemarkStyleMapParser(node, objectStack) {\n    var styleMapValue = readStyleMapValue.call(this, node, objectStack);\n    if (!styleMapValue) {\n        return;\n    }\n    var placemarkObject = objectStack[objectStack.length - 1];\n    if (Array.isArray(styleMapValue)) {\n        placemarkObject['Style'] = styleMapValue;\n    }\n    else if (typeof styleMapValue === 'string') {\n        placemarkObject['styleUrl'] = styleMapValue;\n    }\n    else {\n        assert(false, 38); // `styleMapValue` has an unknown type\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar SCHEMA_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'SimpleData': simpleDataParser,\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction schemaDataParser(node, objectStack) {\n    parseNode(SCHEMA_DATA_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction simpleDataParser(node, objectStack) {\n    var name = node.getAttribute('name');\n    if (name !== null) {\n        var data = readString(node);\n        var featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n        featureObject[name] = data;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar LAT_LON_ALT_BOX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'altitudeMode': makeObjectPropertySetter(readString),\n    'minAltitude': makeObjectPropertySetter(readDecimal),\n    'maxAltitude': makeObjectPropertySetter(readDecimal),\n    'north': makeObjectPropertySetter(readDecimal),\n    'south': makeObjectPropertySetter(readDecimal),\n    'east': makeObjectPropertySetter(readDecimal),\n    'west': makeObjectPropertySetter(readDecimal),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction latLonAltBoxParser(node, objectStack) {\n    var object = pushParseAndPop({}, LAT_LON_ALT_BOX_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var regionObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var extent = [\n        parseFloat(object['west']),\n        parseFloat(object['south']),\n        parseFloat(object['east']),\n        parseFloat(object['north']),\n    ];\n    regionObject['extent'] = extent;\n    regionObject['altitudeMode'] = object['altitudeMode'];\n    regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n    regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar LOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'minLodPixels': makeObjectPropertySetter(readDecimal),\n    'maxLodPixels': makeObjectPropertySetter(readDecimal),\n    'minFadeExtent': makeObjectPropertySetter(readDecimal),\n    'maxFadeExtent': makeObjectPropertySetter(readDecimal),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lodParser(node, objectStack) {\n    var object = pushParseAndPop({}, LOD_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n    lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n    lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n    lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar INNER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    // KML spec only allows one LinearRing  per innerBoundaryIs, but Google Earth\n    // allows multiple, so we parse multiple here too.\n    'LinearRing': makeArrayPusher(readFlatLinearRing),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction innerBoundaryIsParser(node, objectStack) {\n    var innerBoundaryFlatLinearRings = pushParseAndPop(\n    /** @type {Array<Array<number>>} */ ([]), INNER_BOUNDARY_IS_PARSERS, node, objectStack);\n    if (innerBoundaryFlatLinearRings.length > 0) {\n        var flatLinearRings = \n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n        flatLinearRings.push.apply(flatLinearRings, innerBoundaryFlatLinearRings);\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar OUTER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'LinearRing': makeReplacer(readFlatLinearRing),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction outerBoundaryIsParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    var flatLinearRing = pushParseAndPop(undefined, OUTER_BOUNDARY_IS_PARSERS, node, objectStack);\n    if (flatLinearRing) {\n        var flatLinearRings = \n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n        flatLinearRings[0] = flatLinearRing;\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction linkParser(node, objectStack) {\n    parseNode(LINK_PARSERS, node, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction whenParser(node, objectStack) {\n    var gxTrackObject = \n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n    var whens = gxTrackObject.whens;\n    var s = getAllTextContent(node, false);\n    var when = Date.parse(s);\n    whens.push(isNaN(when) ? 0 : when);\n}\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {import(\"../color.js\").Color|string} color Color.\n */\nfunction writeColorTextNode(node, color) {\n    var rgba = asArray(color);\n    var opacity = rgba.length == 4 ? rgba[3] : 1;\n    /** @type {Array<string|number>} */\n    var abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n    for (var i = 0; i < 4; ++i) {\n        var hex = Math.floor(/** @type {number} */ (abgr[i])).toString(16);\n        abgr[i] = hex.length == 1 ? '0' + hex : hex;\n    }\n    writeStringTextNode(node, abgr.join(''));\n}\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array<number>} coordinates Coordinates.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeCoordinatesTextNode(node, coordinates, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var layout = context['layout'];\n    var stride = context['stride'];\n    var dimension;\n    if (layout == GeometryLayout.XY || layout == GeometryLayout.XYM) {\n        dimension = 2;\n    }\n    else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYZM) {\n        dimension = 3;\n    }\n    else {\n        assert(false, 34); // Invalid geometry layout\n    }\n    var ii = coordinates.length;\n    var text = '';\n    if (ii > 0) {\n        text += coordinates[0];\n        for (var d = 1; d < dimension; ++d) {\n            text += ',' + coordinates[d];\n        }\n        for (var i = stride; i < ii; i += stride) {\n            text += ' ' + coordinates[i];\n            for (var d = 1; d < dimension; ++d) {\n                text += ',' + coordinates[i + d];\n            }\n        }\n    }\n    writeStringTextNode(node, text);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar EXTENDEDDATA_NODE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'Data': makeChildAppender(writeDataNode),\n    'value': makeChildAppender(writeDataNodeValue),\n    'displayName': makeChildAppender(writeDataNodeName),\n});\n/**\n * @param {Element} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeDataNode(node, pair, objectStack) {\n    node.setAttribute('name', pair.name);\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var value = pair.value;\n    if (typeof value == 'object') {\n        if (value !== null && value.displayName) {\n            pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, [value.displayName], objectStack, ['displayName']);\n        }\n        if (value !== null && value.value) {\n            pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, [value.value], objectStack, ['value']);\n        }\n    }\n    else {\n        pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, [value], objectStack, ['value']);\n    }\n}\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n */\nfunction writeDataNodeName(node, name) {\n    writeCDATASection(node, name);\n}\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n */\nfunction writeDataNodeValue(node, value) {\n    writeStringTextNode(node, value);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar DOCUMENT_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'Placemark': makeChildAppender(writePlacemark),\n});\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [opt_nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nvar DOCUMENT_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n    var parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n/**\n * @param {Node} node Node.\n * @param {Array<Feature>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writeDocument(node, features, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    pushSerializeAndPop(context, DOCUMENT_SERIALIZERS, DOCUMENT_NODE_FACTORY, features, objectStack, undefined, this);\n}\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nvar DATA_NODE_FACTORY = makeSimpleNodeFactory('Data');\n/**\n * @param {Node} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeExtendedData(node, namesAndValues, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var names = namesAndValues.names;\n    var values = namesAndValues.values;\n    var length = names.length;\n    for (var i = 0; i < length; i++) {\n        pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, DATA_NODE_FACTORY, [{ name: names[i], value: values[i] }], objectStack);\n    }\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar ICON_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['href'], makeStructureNS(GX_NAMESPACE_URIS, ['x', 'y', 'w', 'h']));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar ICON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'href': makeChildAppender(writeStringTextNode),\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeChildAppender(writeDecimalTextNode),\n    'y': makeChildAppender(writeDecimalTextNode),\n    'w': makeChildAppender(writeDecimalTextNode),\n    'h': makeChildAppender(writeDecimalTextNode),\n}));\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [opt_nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nvar GX_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n    return createElementNS(GX_NAMESPACE_URIS[0], 'gx:' + opt_nodeName);\n};\n/**\n * @param {Node} node Node.\n * @param {Object} icon Icon object.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIcon(node, icon, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = ICON_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(icon, orderedKeys);\n    pushSerializeAndPop(context, ICON_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n    orderedKeys = ICON_SEQUENCE[GX_NAMESPACE_URIS[0]];\n    values = makeSequence(icon, orderedKeys);\n    pushSerializeAndPop(context, ICON_SERIALIZERS, GX_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar ICON_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'scale',\n    'heading',\n    'Icon',\n    'color',\n    'hotSpot',\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar ICON_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'Icon': makeChildAppender(writeIcon),\n    'color': makeChildAppender(writeColorTextNode),\n    'heading': makeChildAppender(writeDecimalTextNode),\n    'hotSpot': makeChildAppender(writeVec2),\n    'scale': makeChildAppender(writeScaleTextNode),\n});\n/**\n * @param {Node} node Node.\n * @param {import(\"../style/Icon.js\").default} style Icon style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIconStyle(node, style, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var /** @type {Object<string, any>} */ properties = {};\n    var src = style.getSrc();\n    var size = style.getSize();\n    var iconImageSize = style.getImageSize();\n    var iconProperties = {\n        'href': src,\n    };\n    if (size) {\n        iconProperties['w'] = size[0];\n        iconProperties['h'] = size[1];\n        var anchor = style.getAnchor(); // top-left\n        var origin_1 = style.getOrigin(); // top-left\n        if (origin_1 && iconImageSize && origin_1[0] !== 0 && origin_1[1] !== size[1]) {\n            iconProperties['x'] = origin_1[0];\n            iconProperties['y'] = iconImageSize[1] - (origin_1[1] + size[1]);\n        }\n        if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n            var /** @type {Vec2} */ hotSpot = {\n                x: anchor[0],\n                xunits: IconAnchorUnits.PIXELS,\n                y: size[1] - anchor[1],\n                yunits: IconAnchorUnits.PIXELS,\n            };\n            properties['hotSpot'] = hotSpot;\n        }\n    }\n    properties['Icon'] = iconProperties;\n    var scale = style.getScaleArray()[0];\n    var imageSize = size;\n    if (imageSize === null) {\n        imageSize = DEFAULT_IMAGE_STYLE_SIZE;\n    }\n    if (imageSize.length == 2) {\n        var resizeScale = scaleForSize(imageSize);\n        scale = scale / resizeScale;\n    }\n    if (scale !== 1) {\n        properties['scale'] = scale;\n    }\n    var rotation = style.getRotation();\n    if (rotation !== 0) {\n        properties['heading'] = rotation; // 0-360\n    }\n    var color = style.getColor();\n    if (color) {\n        properties['color'] = color;\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = ICON_STYLE_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, ICON_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar LABEL_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'color',\n    'scale',\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar LABEL_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode),\n    'scale': makeChildAppender(writeScaleTextNode),\n});\n/**\n * @param {Node} node Node.\n * @param {Text} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLabelStyle(node, style, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var properties = {};\n    var fill = style.getFill();\n    if (fill) {\n        properties['color'] = fill.getColor();\n    }\n    var scale = style.getScale();\n    if (scale && scale !== 1) {\n        properties['scale'] = scale;\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = LABEL_STYLE_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, LABEL_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar LINE_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['color', 'width']);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar LINE_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode),\n    'width': makeChildAppender(writeDecimalTextNode),\n});\n/**\n * @param {Node} node Node.\n * @param {Stroke} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLineStyle(node, style, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var properties = {\n        'color': style.getColor(),\n        'width': Number(style.getWidth()) || 1,\n    };\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = LINE_STYLE_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, LINE_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar GEOMETRY_TYPE_TO_NODENAME = {\n    'Point': 'Point',\n    'LineString': 'LineString',\n    'LinearRing': 'LinearRing',\n    'Polygon': 'Polygon',\n    'MultiPoint': 'MultiGeometry',\n    'MultiLineString': 'MultiGeometry',\n    'MultiPolygon': 'MultiGeometry',\n    'GeometryCollection': 'MultiGeometry',\n};\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [opt_nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nvar GEOMETRY_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n    if (value) {\n        var parentNode = objectStack[objectStack.length - 1].node;\n        return createElementNS(parentNode.namespaceURI, GEOMETRY_TYPE_TO_NODENAME[\n        /** @type {import(\"../geom/Geometry.js\").default} */ (value).getType()]);\n    }\n};\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar POINT_NODE_FACTORY = makeSimpleNodeFactory('Point');\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar LINE_STRING_NODE_FACTORY = makeSimpleNodeFactory('LineString');\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar LINEAR_RING_NODE_FACTORY = makeSimpleNodeFactory('LinearRing');\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar POLYGON_NODE_FACTORY = makeSimpleNodeFactory('Polygon');\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar MULTI_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'LineString': makeChildAppender(writePrimitiveGeometry),\n    'Point': makeChildAppender(writePrimitiveGeometry),\n    'Polygon': makeChildAppender(writePolygon),\n    'GeometryCollection': makeChildAppender(writeMultiGeometry),\n});\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeMultiGeometry(node, geometry, objectStack) {\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    var context = { node: node };\n    var type = geometry.getType();\n    /** @type {Array<import(\"../geom/Geometry.js\").default>} */\n    var geometries = [];\n    /** @type {function(*, Array<*>, string=): (Node|undefined)} */\n    var factory;\n    if (type === GeometryType.GEOMETRY_COLLECTION) {\n        /** @type {GeometryCollection} */ (geometry)\n            .getGeometriesArrayRecursive()\n            .forEach(function (geometry) {\n            var type = geometry.getType();\n            if (type === GeometryType.MULTI_POINT) {\n                geometries = geometries.concat(\n                /** @type {MultiPoint} */ (geometry).getPoints());\n            }\n            else if (type === GeometryType.MULTI_LINE_STRING) {\n                geometries = geometries.concat(\n                /** @type {MultiLineString} */ (geometry).getLineStrings());\n            }\n            else if (type === GeometryType.MULTI_POLYGON) {\n                geometries = geometries.concat(\n                /** @type {MultiPolygon} */ (geometry).getPolygons());\n            }\n            else if (type === GeometryType.POINT ||\n                type === GeometryType.LINE_STRING ||\n                type === GeometryType.POLYGON) {\n                geometries.push(geometry);\n            }\n            else {\n                assert(false, 39); // Unknown geometry type\n            }\n        });\n        factory = GEOMETRY_NODE_FACTORY;\n    }\n    else if (type === GeometryType.MULTI_POINT) {\n        geometries = /** @type {MultiPoint} */ (geometry).getPoints();\n        factory = POINT_NODE_FACTORY;\n    }\n    else if (type === GeometryType.MULTI_LINE_STRING) {\n        geometries = /** @type {MultiLineString} */ (geometry).getLineStrings();\n        factory = LINE_STRING_NODE_FACTORY;\n    }\n    else if (type === GeometryType.MULTI_POLYGON) {\n        geometries = /** @type {MultiPolygon} */ (geometry).getPolygons();\n        factory = POLYGON_NODE_FACTORY;\n    }\n    else {\n        assert(false, 39); // Unknown geometry type\n    }\n    pushSerializeAndPop(context, MULTI_GEOMETRY_SERIALIZERS, factory, geometries, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar BOUNDARY_IS_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'LinearRing': makeChildAppender(writePrimitiveGeometry),\n});\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/LinearRing.js\").default} linearRing Linear ring.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeBoundaryIs(node, linearRing, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    pushSerializeAndPop(context, BOUNDARY_IS_SERIALIZERS, LINEAR_RING_NODE_FACTORY, [linearRing], objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar PLACEMARK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'ExtendedData': makeChildAppender(writeExtendedData),\n    'MultiGeometry': makeChildAppender(writeMultiGeometry),\n    'LineString': makeChildAppender(writePrimitiveGeometry),\n    'LinearRing': makeChildAppender(writePrimitiveGeometry),\n    'Point': makeChildAppender(writePrimitiveGeometry),\n    'Polygon': makeChildAppender(writePolygon),\n    'Style': makeChildAppender(writeStyle),\n    'address': makeChildAppender(writeStringTextNode),\n    'description': makeChildAppender(writeStringTextNode),\n    'name': makeChildAppender(writeStringTextNode),\n    'open': makeChildAppender(writeBooleanTextNode),\n    'phoneNumber': makeChildAppender(writeStringTextNode),\n    'styleUrl': makeChildAppender(writeStringTextNode),\n    'visibility': makeChildAppender(writeBooleanTextNode),\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar PLACEMARK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'name',\n    'open',\n    'visibility',\n    'address',\n    'phoneNumber',\n    'description',\n    'styleUrl',\n    'Style',\n]);\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nvar EXTENDEDDATA_NODE_FACTORY = makeSimpleNodeFactory('ExtendedData');\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writePlacemark(node, feature, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    // set id\n    if (feature.getId()) {\n        node.setAttribute('id', /** @type {string} */ (feature.getId()));\n    }\n    // serialize properties (properties unknown to KML are not serialized)\n    var properties = feature.getProperties();\n    // don't export these to ExtendedData\n    var filter = {\n        'address': 1,\n        'description': 1,\n        'name': 1,\n        'open': 1,\n        'phoneNumber': 1,\n        'styleUrl': 1,\n        'visibility': 1,\n    };\n    filter[feature.getGeometryName()] = 1;\n    var keys = Object.keys(properties || {})\n        .sort()\n        .filter(function (v) {\n        return !filter[v];\n    });\n    var styleFunction = feature.getStyleFunction();\n    if (styleFunction) {\n        // FIXME the styles returned by the style function are supposed to be\n        // resolution-independent here\n        var styles = styleFunction(feature, 0);\n        if (styles) {\n            var styleArray = Array.isArray(styles) ? styles : [styles];\n            var pointStyles = styleArray;\n            if (feature.getGeometry()) {\n                pointStyles = styleArray.filter(function (style) {\n                    var geometry = style.getGeometryFunction()(feature);\n                    if (geometry) {\n                        var type = geometry.getType();\n                        if (type === GeometryType.GEOMETRY_COLLECTION) {\n                            return /** @type {GeometryCollection} */ (geometry)\n                                .getGeometriesArrayRecursive()\n                                .filter(function (geometry) {\n                                var type = geometry.getType();\n                                return (type === GeometryType.POINT ||\n                                    type === GeometryType.MULTI_POINT);\n                            }).length;\n                        }\n                        return (type === GeometryType.POINT || type === GeometryType.MULTI_POINT);\n                    }\n                });\n            }\n            if (this.writeStyles_) {\n                var lineStyles = styleArray;\n                var polyStyles = styleArray;\n                if (feature.getGeometry()) {\n                    lineStyles = styleArray.filter(function (style) {\n                        var geometry = style.getGeometryFunction()(feature);\n                        if (geometry) {\n                            var type = geometry.getType();\n                            if (type === GeometryType.GEOMETRY_COLLECTION) {\n                                return /** @type {GeometryCollection} */ (geometry)\n                                    .getGeometriesArrayRecursive()\n                                    .filter(function (geometry) {\n                                    var type = geometry.getType();\n                                    return (type === GeometryType.LINE_STRING ||\n                                        type === GeometryType.MULTI_LINE_STRING);\n                                }).length;\n                            }\n                            return (type === GeometryType.LINE_STRING ||\n                                type === GeometryType.MULTI_LINE_STRING);\n                        }\n                    });\n                    polyStyles = styleArray.filter(function (style) {\n                        var geometry = style.getGeometryFunction()(feature);\n                        if (geometry) {\n                            var type = geometry.getType();\n                            if (type === GeometryType.GEOMETRY_COLLECTION) {\n                                return /** @type {GeometryCollection} */ (geometry)\n                                    .getGeometriesArrayRecursive()\n                                    .filter(function (geometry) {\n                                    var type = geometry.getType();\n                                    return (type === GeometryType.POLYGON ||\n                                        type === GeometryType.MULTI_POLYGON);\n                                }).length;\n                            }\n                            return (type === GeometryType.POLYGON ||\n                                type === GeometryType.MULTI_POLYGON);\n                        }\n                    });\n                }\n                properties['Style'] = {\n                    pointStyles: pointStyles,\n                    lineStyles: lineStyles,\n                    polyStyles: polyStyles,\n                };\n            }\n            if (pointStyles.length && properties['name'] === undefined) {\n                var textStyle = pointStyles[0].getText();\n                if (textStyle) {\n                    properties['name'] = textStyle.getText();\n                }\n            }\n        }\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = PLACEMARK_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, PLACEMARK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n    if (keys.length > 0) {\n        var sequence = makeSequence(properties, keys);\n        var namesAndValues = { names: keys, values: sequence };\n        pushSerializeAndPop(context, PLACEMARK_SERIALIZERS, EXTENDEDDATA_NODE_FACTORY, [namesAndValues], objectStack);\n    }\n    // serialize geometry\n    var options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n    var geometry = feature.getGeometry();\n    if (geometry) {\n        geometry = transformGeometryWithOptions(geometry, true, options);\n    }\n    pushSerializeAndPop(context, PLACEMARK_SERIALIZERS, GEOMETRY_NODE_FACTORY, [geometry], objectStack);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar PRIMITIVE_GEOMETRY_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'extrude',\n    'tessellate',\n    'altitudeMode',\n    'coordinates',\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar PRIMITIVE_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'extrude': makeChildAppender(writeBooleanTextNode),\n    'tessellate': makeChildAppender(writeBooleanTextNode),\n    'altitudeMode': makeChildAppender(writeStringTextNode),\n    'coordinates': makeChildAppender(writeCoordinatesTextNode),\n});\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePrimitiveGeometry(node, geometry, objectStack) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    context['layout'] = geometry.getLayout();\n    context['stride'] = geometry.getStride();\n    // serialize properties (properties unknown to KML are not serialized)\n    var properties = geometry.getProperties();\n    properties.coordinates = flatCoordinates;\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = PRIMITIVE_GEOMETRY_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, PRIMITIVE_GEOMETRY_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar POLY_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'color',\n    'fill',\n    'outline',\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar POLYGON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'outerBoundaryIs': makeChildAppender(writeBoundaryIs),\n    'innerBoundaryIs': makeChildAppender(writeBoundaryIs),\n});\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar INNER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('innerBoundaryIs');\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar OUTER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('outerBoundaryIs');\n/**\n * @param {Node} node Node.\n * @param {Polygon} polygon Polygon.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolygon(node, polygon, objectStack) {\n    var linearRings = polygon.getLinearRings();\n    var outerRing = linearRings.shift();\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    // inner rings\n    pushSerializeAndPop(context, POLYGON_SERIALIZERS, INNER_BOUNDARY_NODE_FACTORY, linearRings, objectStack);\n    // outer ring\n    pushSerializeAndPop(context, POLYGON_SERIALIZERS, OUTER_BOUNDARY_NODE_FACTORY, [outerRing], objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar POLY_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode),\n    'fill': makeChildAppender(writeBooleanTextNode),\n    'outline': makeChildAppender(writeBooleanTextNode),\n});\n/**\n * @param {Node} node Node.\n * @param {Style} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolyStyle(node, style, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var fill = style.getFill();\n    var stroke = style.getStroke();\n    var properties = {\n        'color': fill ? fill.getColor() : undefined,\n        'fill': fill ? undefined : false,\n        'outline': stroke ? undefined : false,\n    };\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = POLY_STYLE_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, POLY_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n */\nfunction writeScaleTextNode(node, scale) {\n    // the Math is to remove any excess decimals created by float arithmetic\n    writeDecimalTextNode(node, Math.round(scale * 1e6) / 1e6);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'IconStyle',\n    'LabelStyle',\n    'LineStyle',\n    'PolyStyle',\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'IconStyle': makeChildAppender(writeIconStyle),\n    'LabelStyle': makeChildAppender(writeLabelStyle),\n    'LineStyle': makeChildAppender(writeLineStyle),\n    'PolyStyle': makeChildAppender(writePolyStyle),\n});\n/**\n * @param {Node} node Node.\n * @param {Object<string, Array<Style>>} styles Styles.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeStyle(node, styles, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var properties = {};\n    if (styles.pointStyles.length) {\n        var textStyle = styles.pointStyles[0].getText();\n        if (textStyle) {\n            properties['LabelStyle'] = textStyle;\n        }\n        var imageStyle = styles.pointStyles[0].getImage();\n        if (imageStyle &&\n            typeof ( /** @type {?} */(imageStyle).getSrc) === 'function') {\n            properties['IconStyle'] = imageStyle;\n        }\n    }\n    if (styles.lineStyles.length) {\n        var strokeStyle = styles.lineStyles[0].getStroke();\n        if (strokeStyle) {\n            properties['LineStyle'] = strokeStyle;\n        }\n    }\n    if (styles.polyStyles.length) {\n        var strokeStyle = styles.polyStyles[0].getStroke();\n        if (strokeStyle && !properties['LineStyle']) {\n            properties['LineStyle'] = strokeStyle;\n        }\n        properties['PolyStyle'] = styles.polyStyles[0];\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = STYLE_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @param {Element} node Node to append a TextNode with the Vec2 to.\n * @param {Vec2} vec2 Vec2.\n */\nfunction writeVec2(node, vec2) {\n    node.setAttribute('x', String(vec2.x));\n    node.setAttribute('y', String(vec2.y));\n    node.setAttribute('xunits', vec2.xunits);\n    node.setAttribute('yunits', vec2.yunits);\n}\nexport default KML;\n//# sourceMappingURL=KML.js.map","/**\n * @module ol/layer/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    OPACITY: 'opacity',\n    VISIBLE: 'visible',\n    EXTENT: 'extent',\n    Z_INDEX: 'zIndex',\n    MAX_RESOLUTION: 'maxResolution',\n    MIN_RESOLUTION: 'minResolution',\n    MAX_ZOOM: 'maxZoom',\n    MIN_ZOOM: 'minZoom',\n    SOURCE: 'source',\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport { abstract } from '../util.js';\nimport { assert } from '../asserts.js';\nimport { assign } from '../obj.js';\nimport { clamp } from '../math.js';\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = /** @class */ (function (_super) {\n    __extends(BaseLayer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function BaseLayer(options) {\n        var _this = _super.call(this) || this;\n        /***\n         * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {BaseLayerOnSignature<void>}\n         */\n        _this.un;\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = assign({}, options);\n        if (typeof options.properties === 'object') {\n            delete properties.properties;\n            assign(properties, options.properties);\n        }\n        properties[LayerProperty.OPACITY] =\n            options.opacity !== undefined ? options.opacity : 1;\n        assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n        properties[LayerProperty.VISIBLE] =\n            options.visible !== undefined ? options.visible : true;\n        properties[LayerProperty.Z_INDEX] = options.zIndex;\n        properties[LayerProperty.MAX_RESOLUTION] =\n            options.maxResolution !== undefined ? options.maxResolution : Infinity;\n        properties[LayerProperty.MIN_RESOLUTION] =\n            options.minResolution !== undefined ? options.minResolution : 0;\n        properties[LayerProperty.MIN_ZOOM] =\n            options.minZoom !== undefined ? options.minZoom : -Infinity;\n        properties[LayerProperty.MAX_ZOOM] =\n            options.maxZoom !== undefined ? options.maxZoom : Infinity;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.className_ =\n            properties.className !== undefined ? options.className : 'ol-layer';\n        delete properties.className;\n        _this.setProperties(properties);\n        /**\n         * @type {import(\"./Layer.js\").State}\n         * @private\n         */\n        _this.state_ = null;\n        return _this;\n    }\n    /**\n     * @return {string} CSS class name.\n     */\n    BaseLayer.prototype.getClassName = function () {\n        return this.className_;\n    };\n    /**\n     * This method is not meant to be called by layers or layer renderers because the state\n     * is incorrect if the layer is included in a layer group.\n     *\n     * @param {boolean} [opt_managed] Layer is managed.\n     * @return {import(\"./Layer.js\").State} Layer state.\n     */\n    BaseLayer.prototype.getLayerState = function (opt_managed) {\n        /** @type {import(\"./Layer.js\").State} */\n        var state = this.state_ ||\n            /** @type {?} */ ({\n                layer: this,\n                managed: opt_managed === undefined ? true : opt_managed,\n            });\n        var zIndex = this.getZIndex();\n        state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n        state.sourceState = this.getSourceState();\n        state.visible = this.getVisible();\n        state.extent = this.getExtent();\n        state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n        state.maxResolution = this.getMaxResolution();\n        state.minResolution = Math.max(this.getMinResolution(), 0);\n        state.minZoom = this.getMinZoom();\n        state.maxZoom = this.getMaxZoom();\n        this.state_ = state;\n        return state;\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be\n     *     modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    BaseLayer.prototype.getLayersArray = function (opt_array) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer\n     *     states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    BaseLayer.prototype.getLayerStatesArray = function (opt_states) {\n        return abstract();\n    };\n    /**\n     * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n     * will be visible regardless of extent.\n     * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getExtent = function () {\n        return /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT));\n    };\n    /**\n     * Return the maximum resolution of the layer.\n     * @return {number} The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n    };\n    /**\n     * Return the minimum resolution of the layer.\n     * @return {number} The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n    };\n    /**\n     * Return the minimum zoom level of the layer.\n     * @return {number} The minimum zoom level of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n    };\n    /**\n     * Return the maximum zoom level of the layer.\n     * @return {number} The maximum zoom level of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n    };\n    /**\n     * Return the opacity of the layer (between 0 and 1).\n     * @return {number} The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getOpacity = function () {\n        return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n    };\n    /**\n     * @abstract\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    BaseLayer.prototype.getSourceState = function () {\n        return abstract();\n    };\n    /**\n     * Return the visibility of the layer (`true` or `false`).\n     * @return {boolean} The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getVisible = function () {\n        return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n    };\n    /**\n     * Return the Z-index of the layer, which is used to order layers before\n     * rendering. The default Z-index is 0.\n     * @return {number} The Z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getZIndex = function () {\n        return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n    };\n    /**\n     * Set the extent at which the layer is visible.  If `undefined`, the layer\n     * will be visible at all extents.\n     * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setExtent = function (extent) {\n        this.set(LayerProperty.EXTENT, extent);\n    };\n    /**\n     * Set the maximum resolution at which the layer is visible.\n     * @param {number} maxResolution The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxResolution = function (maxResolution) {\n        this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n    };\n    /**\n     * Set the minimum resolution at which the layer is visible.\n     * @param {number} minResolution The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinResolution = function (minResolution) {\n        this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n    };\n    /**\n     * Set the maximum zoom (exclusive) at which the layer is visible.\n     * Note that the zoom levels for layer visibility are based on the\n     * view zoom level, which may be different from a tile source zoom level.\n     * @param {number} maxZoom The maximum zoom of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxZoom = function (maxZoom) {\n        this.set(LayerProperty.MAX_ZOOM, maxZoom);\n    };\n    /**\n     * Set the minimum zoom (inclusive) at which the layer is visible.\n     * Note that the zoom levels for layer visibility are based on the\n     * view zoom level, which may be different from a tile source zoom level.\n     * @param {number} minZoom The minimum zoom of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinZoom = function (minZoom) {\n        this.set(LayerProperty.MIN_ZOOM, minZoom);\n    };\n    /**\n     * Set the opacity of the layer, allowed values range from 0 to 1.\n     * @param {number} opacity The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setOpacity = function (opacity) {\n        assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n        this.set(LayerProperty.OPACITY, opacity);\n    };\n    /**\n     * Set the visibility of the layer (`true` or `false`).\n     * @param {boolean} visible The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setVisible = function (visible) {\n        this.set(LayerProperty.VISIBLE, visible);\n    };\n    /**\n     * Set Z-index of the layer, which is used to order layers before rendering.\n     * The default Z-index is 0.\n     * @param {number} zindex The z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setZIndex = function (zindex) {\n        this.set(LayerProperty.Z_INDEX, zindex);\n    };\n    /**\n     * Clean up.\n     */\n    BaseLayer.prototype.disposeInternal = function () {\n        if (this.state_) {\n            this.state_.layer = null;\n            this.state_ = null;\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    return BaseLayer;\n}(BaseObject));\nexport default BaseLayer;\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/render/EventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered before a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#prerender\n     * @api\n     */\n    PRERENDER: 'prerender',\n    /**\n     * Triggered after a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered before layers are rendered.\n     * The event object will not have a `context` set.\n     * @event module:ol/render/Event~RenderEvent#precompose\n     * @api\n     */\n    PRECOMPOSE: 'precompose',\n    /**\n     * Triggered after all layers are rendered.\n     * The event object will not have a `context` set.\n     * @event module:ol/render/Event~RenderEvent#postcompose\n     * @api\n     */\n    POSTCOMPOSE: 'postcompose',\n    /**\n     * Triggered when rendering is complete, i.e. all sources and tiles have\n     * finished loading for the current viewport, and all tiles are faded in.\n     * The event object will not have a `context` set.\n     * @event module:ol/render/Event~RenderEvent#rendercomplete\n     * @api\n     */\n    RENDERCOMPLETE: 'rendercomplete',\n};\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/source/State\n */\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n    UNDEFINED: 'undefined',\n    LOADING: 'loading',\n    READY: 'ready',\n    ERROR: 'error',\n};\n//# sourceMappingURL=State.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport { assert } from '../asserts.js';\nimport { assign } from '../obj.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:source'|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n/**\n * @template {import(\"../source/Source.js\").default} SourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {import(\"../source/State.js\").default} sourceState SourceState.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}. Components\n * like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link import(\"../PluggableMap.js\").default#forEachLayerAtPixel map.forEachLayerAtPixel()} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    /**\n     * @param {Options<SourceType>} options Layer options.\n     */\n    function Layer(options) {\n        var _this = this;\n        var baseOptions = assign({}, options);\n        delete baseOptions.source;\n        _this = _super.call(this, baseOptions) || this;\n        /***\n         * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {LayerOnSignature<void>}\n         */\n        _this.un;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapPrecomposeKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapRenderKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.sourceChangeKey_ = null;\n        /**\n         * @private\n         * @type {import(\"../renderer/Layer.js\").default}\n         */\n        _this.renderer_ = null;\n        // Overwrite default render method with a custom one\n        if (options.render) {\n            _this.render = options.render;\n        }\n        if (options.map) {\n            _this.setMap(options.map);\n        }\n        _this.addChangeListener(LayerProperty.SOURCE, _this.handleSourcePropertyChange_);\n        var source = options.source\n            ? /** @type {SourceType} */ (options.source)\n            : null;\n        _this.setSource(source);\n        return _this;\n    }\n    /**\n     * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    Layer.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array ? opt_array : [];\n        array.push(this);\n        return array;\n    };\n    /**\n     * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    Layer.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states ? opt_states : [];\n        states.push(this.getLayerState());\n        return states;\n    };\n    /**\n     * Get the layer source.\n     * @return {SourceType} The layer source (or `null` if not yet set).\n     * @observable\n     * @api\n     */\n    Layer.prototype.getSource = function () {\n        return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n    };\n    /**\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    Layer.prototype.getSourceState = function () {\n        var source = this.getSource();\n        return !source ? SourceState.UNDEFINED : source.getState();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourceChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourcePropertyChange_ = function () {\n        if (this.sourceChangeKey_) {\n            unlistenByKey(this.sourceChangeKey_);\n            this.sourceChangeKey_ = null;\n        }\n        var source = this.getSource();\n        if (source) {\n            this.sourceChangeKey_ = listen(source, EventType.CHANGE, this.handleSourceChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * @param {import(\"../pixel\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n     * an array of features.\n     */\n    Layer.prototype.getFeatures = function (pixel) {\n        if (!this.renderer_) {\n            return new Promise(function (resolve) { return resolve([]); });\n        }\n        return this.renderer_.getFeatures(pixel);\n    };\n    /**\n     * In charge to manage the rendering of the layer. One layer type is\n     * bounded with one layer renderer.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target which the renderer may (but need not) use\n     * for rendering its content.\n     * @return {HTMLElement} The rendered element.\n     */\n    Layer.prototype.render = function (frameState, target) {\n        var layerRenderer = this.getRenderer();\n        if (layerRenderer.prepareFrame(frameState)) {\n            return layerRenderer.renderFrame(frameState, target);\n        }\n    };\n    /**\n     * Sets the layer to be rendered on top of other layers on a map. The map will\n     * not manage this layer in its layers collection, and the callback in\n     * {@link module:ol/Map~Map#forEachLayerAtPixel} will receive `null` as layer. This\n     * is useful for temporary layers. To remove an unmanaged layer from the map,\n     * use `#setMap(null)`.\n     *\n     * To add the layer to a map and have it managed by the map, use\n     * {@link module:ol/Map~Map#addLayer} instead.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Layer.prototype.setMap = function (map) {\n        if (this.mapPrecomposeKey_) {\n            unlistenByKey(this.mapPrecomposeKey_);\n            this.mapPrecomposeKey_ = null;\n        }\n        if (!map) {\n            this.changed();\n        }\n        if (this.mapRenderKey_) {\n            unlistenByKey(this.mapRenderKey_);\n            this.mapRenderKey_ = null;\n        }\n        if (map) {\n            this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function (evt) {\n                var renderEvent = \n                /** @type {import(\"../render/Event.js\").default} */ (evt);\n                var layerStatesArray = renderEvent.frameState.layerStatesArray;\n                var layerState = this.getLayerState(false);\n                // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n                assert(!layerStatesArray.some(function (arrayLayerState) {\n                    return arrayLayerState.layer === layerState.layer;\n                }), 67);\n                layerStatesArray.push(layerState);\n            }, this);\n            this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n            this.changed();\n        }\n    };\n    /**\n     * Set the layer source.\n     * @param {SourceType} source The layer source.\n     * @observable\n     * @api\n     */\n    Layer.prototype.setSource = function (source) {\n        this.set(LayerProperty.SOURCE, source);\n    };\n    /**\n     * Get the renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n     */\n    Layer.prototype.getRenderer = function () {\n        if (!this.renderer_) {\n            this.renderer_ = this.createRenderer();\n        }\n        return this.renderer_;\n    };\n    /**\n     * @return {boolean} The layer has a renderer.\n     */\n    Layer.prototype.hasRenderer = function () {\n        return !!this.renderer_;\n    };\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    Layer.prototype.createRenderer = function () {\n        return null;\n    };\n    /**\n     * Clean up.\n     */\n    Layer.prototype.disposeInternal = function () {\n        if (this.renderer_) {\n            this.renderer_.dispose();\n            delete this.renderer_;\n        }\n        this.setSource(null);\n        _super.prototype.disposeInternal.call(this);\n    };\n    return Layer;\n}(BaseLayer));\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n    if (!layerState.visible) {\n        return false;\n    }\n    var resolution = viewState.resolution;\n    if (resolution < layerState.minResolution ||\n        resolution >= layerState.maxResolution) {\n        return false;\n    }\n    var zoom = viewState.zoom;\n    return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\nexport default Layer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport { TRUE } from '../functions.js';\nimport { abstract } from '../util.js';\nimport { compose as composeTransform, makeInverse } from '../transform.js';\nimport { getWidth } from '../extent.js';\nimport { shared as iconImageCache } from '../style/IconImageCache.js';\nimport { inView } from '../layer/Layer.js';\nimport { wrapX } from '../coordinate.js';\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n/**\n * @abstract\n */\nvar MapRenderer = /** @class */ (function (_super) {\n    __extends(MapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function MapRenderer(map) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = map;\n        return _this;\n    }\n    /**\n     * @abstract\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @protected\n     */\n    MapRenderer.prototype.calculateMatrices2D = function (frameState) {\n        var viewState = frameState.viewState;\n        var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n        var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n        composeTransform(coordinateToPixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / viewState.resolution, -1 / viewState.resolution, -viewState.rotation, -viewState.center[0], -viewState.center[1]);\n        makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {boolean} checkWrapped Check for wrapped geometries.\n     * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n     * @param {S} thisArg Value to use as `this` when executing `callback`.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n     * @return {T|undefined} Callback result.\n     * @template S,T,U\n     */\n    MapRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, checkWrapped, callback, thisArg, layerFilter, thisArg2) {\n        var result;\n        var viewState = frameState.viewState;\n        /**\n         * @param {boolean} managed Managed layer.\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n         * @return {T|undefined} Callback result.\n         */\n        function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n            return callback.call(thisArg, feature, managed ? layer : null, geometry);\n        }\n        var projection = viewState.projection;\n        var translatedCoordinate = wrapX(coordinate.slice(), projection);\n        var offsets = [[0, 0]];\n        if (projection.canWrapX() && checkWrapped) {\n            var projectionExtent = projection.getExtent();\n            var worldWidth = getWidth(projectionExtent);\n            offsets.push([-worldWidth, 0], [worldWidth, 0]);\n        }\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        var matches = /** @type {Array<HitMatch<T>>} */ ([]);\n        var tmpCoord = [];\n        for (var i = 0; i < offsets.length; i++) {\n            for (var j = numLayers - 1; j >= 0; --j) {\n                var layerState = layerStates[j];\n                var layer = layerState.layer;\n                if (layer.hasRenderer() &&\n                    inView(layerState, viewState) &&\n                    layerFilter.call(thisArg2, layer)) {\n                    var layerRenderer = layer.getRenderer();\n                    var source = layer.getSource();\n                    if (layerRenderer && source) {\n                        var coordinates = source.getWrapX()\n                            ? translatedCoordinate\n                            : coordinate;\n                        var callback_1 = forEachFeatureAtCoordinate.bind(null, layerState.managed);\n                        tmpCoord[0] = coordinates[0] + offsets[i][0];\n                        tmpCoord[1] = coordinates[1] + offsets[i][1];\n                        result = layerRenderer.forEachFeatureAtCoordinate(tmpCoord, frameState, hitTolerance, callback_1, matches);\n                    }\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        if (matches.length === 0) {\n            return undefined;\n        }\n        var order = 1 / matches.length;\n        matches.forEach(function (m, i) { return (m.distanceSq += i * order); });\n        matches.sort(function (a, b) { return a.distanceSq - b.distanceSq; });\n        matches.some(function (m) {\n            return (result = m.callback(m.feature, m.layer, m.geometry));\n        });\n        return result;\n    };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n     *     callback.\n     * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    MapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        return abstract();\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {boolean} checkWrapped Check for wrapped geometries.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n     * @return {boolean} Is there a feature at the given coordinate?\n     * @template U\n     */\n    MapRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, checkWrapped, layerFilter, thisArg) {\n        var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, checkWrapped, TRUE, this, layerFilter, thisArg);\n        return hasFeature !== undefined;\n    };\n    /**\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     */\n    MapRenderer.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Render.\n     * @abstract\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.renderFrame = function (frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    MapRenderer.prototype.scheduleExpireIconCache = function (frameState) {\n        if (iconImageCache.canExpireCache()) {\n            frameState.postRenderFunctions.push(expireIconCache);\n        }\n    };\n    return MapRenderer;\n}(Disposable));\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n    iconImageCache.expire();\n}\nexport default MapRenderer;\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/render/Event\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Event from '../events/Event.js';\nvar RenderEvent = /** @class */ (function (_super) {\n    __extends(RenderEvent, _super);\n    /**\n     * @param {import(\"./EventType.js\").default} type Type.\n     * @param {import(\"../transform.js\").Transform} [opt_inversePixelTransform] Transform for\n     *     CSS pixels to rendered pixels.\n     * @param {import(\"../PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n     * @param {?CanvasRenderingContext2D} [opt_context] Context.\n     */\n    function RenderEvent(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n         * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n         * @type {import(\"../transform.js\").Transform|undefined}\n         * @api\n         */\n        _this.inversePixelTransform = opt_inversePixelTransform;\n        /**\n         * An object representing the current render frame state.\n         * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n         * @api\n         */\n        _this.frameState = opt_frameState;\n        /**\n         * Canvas context. Not available when the event is dispatched by the map. Only available\n         * when a Canvas renderer is used, null otherwise.\n         * @type {CanvasRenderingContext2D|null|undefined}\n         * @api\n         */\n        _this.context = opt_context;\n        return _this;\n    }\n    return RenderEvent;\n}(Event));\nexport default RenderEvent;\n//# sourceMappingURL=Event.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport { CLASS_UNSELECTABLE } from '../css.js';\nimport { checkedFonts } from '../render/canvas.js';\nimport { inView } from '../layer/Layer.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { replaceChildren } from '../dom.js';\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CompositeMapRenderer = /** @class */ (function (_super) {\n    __extends(CompositeMapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function CompositeMapRenderer(map) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * @type {import(\"../events.js\").EventsKey}\n         */\n        _this.fontChangeListenerKey_ = listen(checkedFonts, ObjectEventType.PROPERTYCHANGE, map.redrawText.bind(map));\n        /**\n         * @private\n         * @type {HTMLDivElement}\n         */\n        _this.element_ = document.createElement('div');\n        var style = _this.element_.style;\n        style.position = 'absolute';\n        style.width = '100%';\n        style.height = '100%';\n        style.zIndex = '0';\n        _this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n        var container = map.getViewport();\n        container.insertBefore(_this.element_, container.firstChild || null);\n        /**\n         * @private\n         * @type {Array<HTMLElement>}\n         */\n        _this.children_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CompositeMapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        var map = this.getMap();\n        if (map.hasListener(type)) {\n            var event_1 = new RenderEvent(type, undefined, frameState);\n            map.dispatchEvent(event_1);\n        }\n    };\n    CompositeMapRenderer.prototype.disposeInternal = function () {\n        unlistenByKey(this.fontChangeListenerKey_);\n        this.element_.parentNode.removeChild(this.element_);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Render.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CompositeMapRenderer.prototype.renderFrame = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element_.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        this.calculateMatrices2D(frameState);\n        this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n        var layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n            return a.zIndex - b.zIndex;\n        });\n        var viewState = frameState.viewState;\n        this.children_.length = 0;\n        /**\n         * @type {Array<import(\"../layer/BaseVector.js\").default>}\n         */\n        var declutterLayers = [];\n        var previousElement = null;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            frameState.layerIndex = i;\n            if (!inView(layerState, viewState) ||\n                (layerState.sourceState != SourceState.READY &&\n                    layerState.sourceState != SourceState.UNDEFINED)) {\n                continue;\n            }\n            var layer = layerState.layer;\n            var element = layer.render(frameState, previousElement);\n            if (!element) {\n                continue;\n            }\n            if (element !== previousElement) {\n                this.children_.push(element);\n                previousElement = element;\n            }\n            if ('getDeclutter' in layer) {\n                declutterLayers.push(\n                /** @type {import(\"../layer/BaseVector.js\").default} */ (layer));\n            }\n        }\n        for (var i = declutterLayers.length - 1; i >= 0; --i) {\n            declutterLayers[i].renderDeclutter(frameState);\n        }\n        replaceChildren(this.element_, this.children_);\n        this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n        if (!this.renderedVisible_) {\n            this.element_.style.display = '';\n            this.renderedVisible_ = true;\n        }\n        this.scheduleExpireIconCache(frameState);\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n     *     callback.\n     * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    CompositeMapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        var viewState = frameState.viewState;\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        for (var i = numLayers - 1; i >= 0; --i) {\n            var layerState = layerStates[i];\n            var layer = layerState.layer;\n            if (layer.hasRenderer() &&\n                inView(layerState, viewState) &&\n                layerFilter(layer)) {\n                var layerRenderer = layer.getRenderer();\n                var data = layerRenderer.getDataAtPixel(pixel, frameState, hitTolerance);\n                if (data) {\n                    var result = callback(layer, data);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    return CompositeMapRenderer;\n}(MapRenderer));\nexport default CompositeMapRenderer;\n//# sourceMappingURL=Composite.js.map","/**\n * @module ol/CollectionEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when an item is added to the collection.\n     * @event module:ol/Collection.CollectionEvent#add\n     * @api\n     */\n    ADD: 'add',\n    /**\n     * Triggered when an item is removed from the collection.\n     * @event module:ol/Collection.CollectionEvent#remove\n     * @api\n     */\n    REMOVE: 'remove',\n};\n//# sourceMappingURL=CollectionEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LENGTH: 'length',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nvar CollectionEvent = /** @class */ (function (_super) {\n    __extends(CollectionEvent, _super);\n    /**\n     * @param {import(\"./CollectionEventType.js\").default} type Type.\n     * @param {*} [opt_element] Element.\n     * @param {number} [opt_index] The index of the added or removed element.\n     */\n    function CollectionEvent(type, opt_element, opt_index) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The element that is added to or removed from the collection.\n         * @type {*}\n         * @api\n         */\n        _this.element = opt_element;\n        /**\n         * The index of the added or removed element.\n         * @type {number}\n         * @api\n         */\n        _this.index = opt_index;\n        return _this;\n    }\n    return CollectionEvent;\n}(Event));\nexport { CollectionEvent };\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = /** @class */ (function (_super) {\n    __extends(Collection, _super);\n    /**\n     * @param {Array<T>} [opt_array] Array.\n     * @param {Options} [opt_options] Collection options.\n     */\n    function Collection(opt_array, opt_options) {\n        var _this = _super.call(this) || this;\n        /***\n         * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {CollectionOnSignature<void>}\n         */\n        _this.un;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.unique_ = !!options.unique;\n        /**\n         * @private\n         * @type {!Array<T>}\n         */\n        _this.array_ = opt_array ? opt_array : [];\n        if (_this.unique_) {\n            for (var i = 0, ii = _this.array_.length; i < ii; ++i) {\n                _this.assertUnique_(_this.array_[i], i);\n            }\n        }\n        _this.updateLength_();\n        return _this;\n    }\n    /**\n     * Remove all elements from the collection.\n     * @api\n     */\n    Collection.prototype.clear = function () {\n        while (this.getLength() > 0) {\n            this.pop();\n        }\n    };\n    /**\n     * Add elements to the collection.  This pushes each item in the provided array\n     * to the end of the collection.\n     * @param {!Array<T>} arr Array.\n     * @return {Collection<T>} This collection.\n     * @api\n     */\n    Collection.prototype.extend = function (arr) {\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            this.push(arr[i]);\n        }\n        return this;\n    };\n    /**\n     * Iterate over each element, calling the provided callback.\n     * @param {function(T, number, Array<T>): *} f The function to call\n     *     for every element. This function takes 3 arguments (the element, the\n     *     index and the array). The return value is ignored.\n     * @api\n     */\n    Collection.prototype.forEach = function (f) {\n        var array = this.array_;\n        for (var i = 0, ii = array.length; i < ii; ++i) {\n            f(array[i], i, array);\n        }\n    };\n    /**\n     * Get a reference to the underlying Array object. Warning: if the array\n     * is mutated, no events will be dispatched by the collection, and the\n     * collection's \"length\" property won't be in sync with the actual length\n     * of the array.\n     * @return {!Array<T>} Array.\n     * @api\n     */\n    Collection.prototype.getArray = function () {\n        return this.array_;\n    };\n    /**\n     * Get the element at the provided index.\n     * @param {number} index Index.\n     * @return {T} Element.\n     * @api\n     */\n    Collection.prototype.item = function (index) {\n        return this.array_[index];\n    };\n    /**\n     * Get the length of this collection.\n     * @return {number} The length of the array.\n     * @observable\n     * @api\n     */\n    Collection.prototype.getLength = function () {\n        return this.get(Property.LENGTH);\n    };\n    /**\n     * Insert an element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.insertAt = function (index, elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        this.array_.splice(index, 0, elem);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n    };\n    /**\n     * Remove the last element of the collection and return it.\n     * Return `undefined` if the collection is empty.\n     * @return {T|undefined} Element.\n     * @api\n     */\n    Collection.prototype.pop = function () {\n        return this.removeAt(this.getLength() - 1);\n    };\n    /**\n     * Insert the provided element at the end of the collection.\n     * @param {T} elem Element.\n     * @return {number} New length of the collection.\n     * @api\n     */\n    Collection.prototype.push = function (elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        var n = this.getLength();\n        this.insertAt(n, elem);\n        return this.getLength();\n    };\n    /**\n     * Remove the first occurrence of an element from the collection.\n     * @param {T} elem Element.\n     * @return {T|undefined} The removed element or undefined if none found.\n     * @api\n     */\n    Collection.prototype.remove = function (elem) {\n        var arr = this.array_;\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            if (arr[i] === elem) {\n                return this.removeAt(i);\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Remove the element at the provided index and return it.\n     * Return `undefined` if the collection does not contain this index.\n     * @param {number} index Index.\n     * @return {T|undefined} Value.\n     * @api\n     */\n    Collection.prototype.removeAt = function (index) {\n        var prev = this.array_[index];\n        this.array_.splice(index, 1);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n        return prev;\n    };\n    /**\n     * Set the element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.setAt = function (index, elem) {\n        var n = this.getLength();\n        if (index < n) {\n            if (this.unique_) {\n                this.assertUnique_(elem, index);\n            }\n            var prev = this.array_[index];\n            this.array_[index] = elem;\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n        }\n        else {\n            for (var j = n; j < index; ++j) {\n                this.insertAt(j, undefined);\n            }\n            this.insertAt(index, elem);\n        }\n    };\n    /**\n     * @private\n     */\n    Collection.prototype.updateLength_ = function () {\n        this.set(Property.LENGTH, this.array_.length);\n    };\n    /**\n     * @private\n     * @param {T} elem Element.\n     * @param {number} [opt_except] Optional index to ignore.\n     */\n    Collection.prototype.assertUnique_ = function (elem, opt_except) {\n        for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n            if (this.array_[i] === elem && i !== opt_except) {\n                throw new AssertionError(58);\n            }\n        }\n    };\n    return Collection;\n}(BaseObject));\nexport default Collection;\n//# sourceMappingURL=Collection.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport { assert } from '../asserts.js';\nimport { assign, clear } from '../obj.js';\nimport { getIntersection } from '../extent.js';\nimport { getUid } from '../util.js';\nimport { listen, unlistenByKey } from '../events.js';\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LAYERS: 'layers',\n};\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = /** @class */ (function (_super) {\n    __extends(LayerGroup, _super);\n    /**\n     * @param {Options} [opt_options] Layer options.\n     */\n    function LayerGroup(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var baseOptions = /** @type {Options} */ (assign({}, options));\n        delete baseOptions.layers;\n        var layers = options.layers;\n        _this = _super.call(this, baseOptions) || this;\n        /***\n         * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {GroupOnSignature<void>}\n         */\n        _this.un;\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.layersListenerKeys_ = [];\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.listenerKeys_ = {};\n        _this.addChangeListener(Property.LAYERS, _this.handleLayersChanged_);\n        if (layers) {\n            if (Array.isArray(layers)) {\n                layers = new Collection(layers.slice(), { unique: true });\n            }\n            else {\n                assert(typeof ( /** @type {?} */(layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n            }\n        }\n        else {\n            layers = new Collection(undefined, { unique: true });\n        }\n        _this.setLayers(layers);\n        return _this;\n    }\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayerChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayersChanged_ = function () {\n        this.layersListenerKeys_.forEach(unlistenByKey);\n        this.layersListenerKeys_.length = 0;\n        var layers = this.getLayers();\n        this.layersListenerKeys_.push(listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this), listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this));\n        for (var id in this.listenerKeys_) {\n            this.listenerKeys_[id].forEach(unlistenByKey);\n        }\n        clear(this.listenerKeys_);\n        var layersArray = layers.getArray();\n        for (var i = 0, ii = layersArray.length; i < ii; i++) {\n            var layer = layersArray[i];\n            this.listenerKeys_[getUid(layer)] = [\n                listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n                listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n            ];\n        }\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersAdd_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        this.listenerKeys_[getUid(layer)] = [\n            listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n            listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n        ];\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersRemove_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        var key = getUid(layer);\n        this.listenerKeys_[key].forEach(unlistenByKey);\n        delete this.listenerKeys_[key];\n        this.changed();\n    };\n    /**\n     * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.getLayers = function () {\n        return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS));\n    };\n    /**\n     * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.setLayers = function (layers) {\n        this.set(Property.LAYERS, layers);\n    };\n    /**\n     * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    LayerGroup.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array !== undefined ? opt_array : [];\n        this.getLayers().forEach(function (layer) {\n            layer.getLayersArray(array);\n        });\n        return array;\n    };\n    /**\n     * Get the layer states list and use this groups z-index as the default\n     * for all layers in this and nested groups, if it is unset at this point.\n     * If opt_states is not provided and this group's z-index is undefined\n     * 0 is used a the default z-index.\n     * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list\n     * of layer states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    LayerGroup.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states !== undefined ? opt_states : [];\n        var pos = states.length;\n        this.getLayers().forEach(function (layer) {\n            layer.getLayerStatesArray(states);\n        });\n        var ownLayerState = this.getLayerState();\n        var defaultZIndex = ownLayerState.zIndex;\n        if (!opt_states && ownLayerState.zIndex === undefined) {\n            defaultZIndex = 0;\n        }\n        for (var i = pos, ii = states.length; i < ii; i++) {\n            var layerState = states[i];\n            layerState.opacity *= ownLayerState.opacity;\n            layerState.visible = layerState.visible && ownLayerState.visible;\n            layerState.maxResolution = Math.min(layerState.maxResolution, ownLayerState.maxResolution);\n            layerState.minResolution = Math.max(layerState.minResolution, ownLayerState.minResolution);\n            layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n            layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n            if (ownLayerState.extent !== undefined) {\n                if (layerState.extent !== undefined) {\n                    layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n                }\n                else {\n                    layerState.extent = ownLayerState.extent;\n                }\n            }\n            if (layerState.zIndex === undefined) {\n                layerState.zIndex = defaultZIndex;\n            }\n        }\n        return states;\n    };\n    /**\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    LayerGroup.prototype.getSourceState = function () {\n        return SourceState.READY;\n    };\n    return LayerGroup;\n}(BaseLayer));\nexport default LayerGroup;\n//# sourceMappingURL=Group.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nvar MapEvent = /** @class */ (function (_super) {\n    __extends(MapEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n     */\n    function MapEvent(type, map, opt_frameState) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The map where the event occurred.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @api\n         */\n        _this.map = map;\n        /**\n         * The frame state at the time of the event.\n         * @type {?import(\"./PluggableMap.js\").FrameState}\n         * @api\n         */\n        _this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n        return _this;\n    }\n    return MapEvent;\n}(Event));\nexport default MapEvent;\n//# sourceMappingURL=MapEvent.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nvar MapBrowserEvent = /** @class */ (function (_super) {\n    __extends(MapBrowserEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {EVENT} originalEvent Original event.\n     * @param {boolean} [opt_dragging] Is the map currently being dragged?\n     * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n     */\n    function MapBrowserEvent(type, map, originalEvent, opt_dragging, opt_frameState) {\n        var _this = _super.call(this, type, map, opt_frameState) || this;\n        /**\n         * The original browser event.\n         * @const\n         * @type {EVENT}\n         * @api\n         */\n        _this.originalEvent = originalEvent;\n        /**\n         * The map pixel relative to the viewport corresponding to the original browser event.\n         * @type {?import(\"./pixel.js\").Pixel}\n         */\n        _this.pixel_ = null;\n        /**\n         * The coordinate in the user projection corresponding to the original browser event.\n         * @type {?import(\"./coordinate.js\").Coordinate}\n         */\n        _this.coordinate_ = null;\n        /**\n         * Indicates if the map is currently being dragged. Only set for\n         * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n         *\n         * @type {boolean}\n         * @api\n         */\n        _this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n        return _this;\n    }\n    Object.defineProperty(MapBrowserEvent.prototype, \"pixel\", {\n        /**\n         * The map pixel relative to the viewport corresponding to the original event.\n         * @type {import(\"./pixel.js\").Pixel}\n         * @api\n         */\n        get: function () {\n            if (!this.pixel_) {\n                this.pixel_ = this.map.getEventPixel(this.originalEvent);\n            }\n            return this.pixel_;\n        },\n        set: function (pixel) {\n            this.pixel_ = pixel;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MapBrowserEvent.prototype, \"coordinate\", {\n        /**\n         * The coordinate corresponding to the original browser event.  This will be in the user\n         * projection if one is set.  Otherwise it will be in the view projection.\n         * @type {import(\"./coordinate.js\").Coordinate}\n         * @api\n         */\n        get: function () {\n            if (!this.coordinate_) {\n                this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n            }\n            return this.coordinate_;\n        },\n        set: function (coordinate) {\n            this.coordinate_ = coordinate;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Prevents the default browser action.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n     * @api\n     */\n    MapBrowserEvent.prototype.preventDefault = function () {\n        _super.prototype.preventDefault.call(this);\n        if ('preventDefault' in this.originalEvent) {\n            /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n        }\n    };\n    /**\n     * Prevents further propagation of the current event.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n     * @api\n     */\n    MapBrowserEvent.prototype.stopPropagation = function () {\n        _super.prototype.stopPropagation.call(this);\n        if ('stopPropagation' in this.originalEvent) {\n            /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n        }\n    };\n    return MapBrowserEvent;\n}(MapEvent));\nexport default MapBrowserEvent;\n//# sourceMappingURL=MapBrowserEvent.js.map","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    /**\n     * A true single click with no dragging and no double click. Note that this\n     * event is delayed by 250 ms to ensure that it is not a double click.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n     * @api\n     */\n    SINGLECLICK: 'singleclick',\n    /**\n     * A click with no dragging. A double click will fire two of this.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n     * @api\n     */\n    CLICK: EventType.CLICK,\n    /**\n     * A true double click, with no dragging.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n     * @api\n     */\n    DBLCLICK: EventType.DBLCLICK,\n    /**\n     * Triggered when a pointer is dragged.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n     * @api\n     */\n    POINTERDRAG: 'pointerdrag',\n    /**\n     * Triggered when a pointer is moved. Note that on touch devices this is\n     * triggered when the map is panned, so is not the same as mousemove.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n     * @api\n     */\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel',\n};\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n//# sourceMappingURL=MapBrowserEventType.js.map","/**\n * @module ol/pointer/EventType\n */\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel',\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/MapBrowserEventHandler\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport { PASSIVE_EVENT_LISTENERS } from './has.js';\nimport { VOID } from './functions.js';\nimport { listen, unlistenByKey } from './events.js';\nvar MapBrowserEventHandler = /** @class */ (function (_super) {\n    __extends(MapBrowserEventHandler, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n     * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n     */\n    function MapBrowserEventHandler(map, moveTolerance) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * This is the element that we will listen to the real events on.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @private\n         */\n        _this.map_ = map;\n        /**\n         * @type {any}\n         * @private\n         */\n        _this.clickTimeoutId_;\n        /**\n         * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n         * @type {boolean}\n         */\n        _this.emulateClicks_ = false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.dragging_ = false;\n        /**\n         * @type {!Array<import(\"./events.js\").EventsKey>}\n         * @private\n         */\n        _this.dragListenerKeys_ = [];\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n        /**\n         * The most recent \"down\" type event (or null if none have occurred).\n         * Set on pointerdown.\n         * @type {PointerEvent}\n         * @private\n         */\n        _this.down_ = null;\n        var element = _this.map_.getViewport();\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.activePointers_ = 0;\n        /**\n         * @type {!Object<number, boolean>}\n         * @private\n         */\n        _this.trackedTouches_ = {};\n        _this.element_ = element;\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.pointerdownListenerKey_ = listen(element, PointerEventType.POINTERDOWN, _this.handlePointerDown_, _this);\n        /**\n         * @type {PointerEvent}\n         * @private\n         */\n        _this.originalPointerMoveEvent_;\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.relayedListenerKey_ = listen(element, PointerEventType.POINTERMOVE, _this.relayEvent_, _this);\n        /**\n         * @private\n         */\n        _this.boundHandleTouchMove_ = _this.handleTouchMove_.bind(_this);\n        _this.element_.addEventListener(EventType.TOUCHMOVE, _this.boundHandleTouchMove_, PASSIVE_EVENT_LISTENERS ? { passive: false } : false);\n        return _this;\n    }\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.emulateClick_ = function (pointerEvent) {\n        var newEvent = new MapBrowserEvent(MapBrowserEventType.CLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        if (this.clickTimeoutId_ !== undefined) {\n            // double-click\n            clearTimeout(this.clickTimeoutId_);\n            this.clickTimeoutId_ = undefined;\n            newEvent = new MapBrowserEvent(MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n            this.dispatchEvent(newEvent);\n        }\n        else {\n            // click\n            this.clickTimeoutId_ = setTimeout(\n            /** @this {MapBrowserEventHandler} */\n            function () {\n                this.clickTimeoutId_ = undefined;\n                var newEvent = new MapBrowserEvent(MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n                this.dispatchEvent(newEvent);\n            }.bind(this), 250);\n        }\n    };\n    /**\n     * Keeps track on how many pointers are currently active.\n     *\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.updateActivePointers_ = function (pointerEvent) {\n        var event = pointerEvent;\n        if (event.type == MapBrowserEventType.POINTERUP ||\n            event.type == MapBrowserEventType.POINTERCANCEL) {\n            delete this.trackedTouches_[event.pointerId];\n        }\n        else if (event.type == MapBrowserEventType.POINTERDOWN) {\n            this.trackedTouches_[event.pointerId] = true;\n        }\n        this.activePointers_ = Object.keys(this.trackedTouches_).length;\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerUp_ = function (pointerEvent) {\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserEvent(MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        // We emulate click events on left mouse button click, touch contact, and pen\n        // contact. isMouseActionButton returns true in these cases (evt.button is set\n        // to 0).\n        // See http://www.w3.org/TR/pointerevents/#button-states\n        // We only fire click, singleclick, and doubleclick if nobody has called\n        // event.preventDefault().\n        if (this.emulateClicks_ &&\n            !newEvent.defaultPrevented &&\n            !this.dragging_ &&\n            this.isMouseActionButton_(pointerEvent)) {\n            this.emulateClick_(this.down_);\n        }\n        if (this.activePointers_ === 0) {\n            this.dragListenerKeys_.forEach(unlistenByKey);\n            this.dragListenerKeys_.length = 0;\n            this.dragging_ = false;\n            this.down_ = null;\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @return {boolean} If the left mouse button was pressed.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMouseActionButton_ = function (pointerEvent) {\n        return pointerEvent.button === 0;\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerDown_ = function (pointerEvent) {\n        this.emulateClicks_ = this.activePointers_ === 0;\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserEvent(MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        // Store a copy of the down event\n        this.down_ = /** @type {PointerEvent} */ ({});\n        for (var property in pointerEvent) {\n            var value = pointerEvent[property];\n            this.down_[property] = typeof value === 'function' ? VOID : value;\n        }\n        if (this.dragListenerKeys_.length === 0) {\n            var doc = this.map_.getOwnerDocument();\n            this.dragListenerKeys_.push(listen(doc, MapBrowserEventType.POINTERMOVE, this.handlePointerMove_, this), listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this), \n            /* Note that the listener for `pointercancel is set up on\n             * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n             * the `pointerup` and `pointermove` listeners.\n             *\n             * The reason for this is the following: `TouchSource.vacuumTouches_()`\n             * issues `pointercancel` events, when there was no `touchend` for a\n             * `touchstart`. Now, let's say a first `touchstart` is registered on\n             * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n             * But `documentPointerEventHandler_` doesn't know about the first\n             * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n             * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n             * only registered there.\n             */\n            listen(this.element_, MapBrowserEventType.POINTERCANCEL, this.handlePointerUp_, this));\n            if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n                this.dragListenerKeys_.push(listen(this.element_.getRootNode(), MapBrowserEventType.POINTERUP, this.handlePointerUp_, this));\n            }\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerMove_ = function (pointerEvent) {\n        // Between pointerdown and pointerup, pointermove events are triggered.\n        // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n        // moved a significant distance.\n        if (this.isMoving_(pointerEvent)) {\n            this.dragging_ = true;\n            var newEvent = new MapBrowserEvent(MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent, this.dragging_);\n            this.dispatchEvent(newEvent);\n        }\n    };\n    /**\n     * Wrap and relay a pointer event.  Note that this requires that the type\n     * string for the MapBrowserEvent matches the PointerEvent type.\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.relayEvent_ = function (pointerEvent) {\n        this.originalPointerMoveEvent_ = pointerEvent;\n        var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n        this.dispatchEvent(new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging));\n    };\n    /**\n     * Flexible handling of a `touch-action: none` css equivalent: because calling\n     * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n     * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n     * when an interaction (currently `DragPan` handles the event.\n     * @param {TouchEvent} event Event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handleTouchMove_ = function (event) {\n        // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n        // may not be initialized yet when we get here on a platform without native pointer events.\n        var originalEvent = this.originalPointerMoveEvent_;\n        if ((!originalEvent || originalEvent.defaultPrevented) &&\n            (typeof event.cancelable !== 'boolean' || event.cancelable === true)) {\n            event.preventDefault();\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @return {boolean} Is moving.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMoving_ = function (pointerEvent) {\n        return (this.dragging_ ||\n            Math.abs(pointerEvent.clientX - this.down_.clientX) >\n                this.moveTolerance_ ||\n            Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_);\n    };\n    /**\n     * Clean up.\n     */\n    MapBrowserEventHandler.prototype.disposeInternal = function () {\n        if (this.relayedListenerKey_) {\n            unlistenByKey(this.relayedListenerKey_);\n            this.relayedListenerKey_ = null;\n        }\n        this.element_.removeEventListener(EventType.TOUCHMOVE, this.boundHandleTouchMove_);\n        if (this.pointerdownListenerKey_) {\n            unlistenByKey(this.pointerdownListenerKey_);\n            this.pointerdownListenerKey_ = null;\n        }\n        this.dragListenerKeys_.forEach(unlistenByKey);\n        this.dragListenerKeys_.length = 0;\n        this.element_ = null;\n        _super.prototype.disposeInternal.call(this);\n    };\n    return MapBrowserEventHandler;\n}(Target));\nexport default MapBrowserEventHandler;\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\n * @module ol/MapEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered after a map frame is rendered.\n     * @event module:ol/MapEvent~MapEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered when the map starts moving.\n     * @event module:ol/MapEvent~MapEvent#movestart\n     * @api\n     */\n    MOVESTART: 'movestart',\n    /**\n     * Triggered after the map is moved.\n     * @event module:ol/MapEvent~MapEvent#moveend\n     * @api\n     */\n    MOVEEND: 'moveend',\n};\n/***\n * @typedef {'postrender'|'movestart'|'moveend'} Types\n */\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/MapProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    LAYERGROUP: 'layergroup',\n    SIZE: 'size',\n    TARGET: 'target',\n    VIEW: 'view',\n};\n//# sourceMappingURL=MapProperty.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport { assert } from '../asserts.js';\nimport { clear } from '../obj.js';\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = /** @class */ (function () {\n    /**\n     * @param {function(T): number} priorityFunction Priority function.\n     * @param {function(T): string} keyFunction Key function.\n     */\n    function PriorityQueue(priorityFunction, keyFunction) {\n        /**\n         * @type {function(T): number}\n         * @private\n         */\n        this.priorityFunction_ = priorityFunction;\n        /**\n         * @type {function(T): string}\n         * @private\n         */\n        this.keyFunction_ = keyFunction;\n        /**\n         * @type {Array<T>}\n         * @private\n         */\n        this.elements_ = [];\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        this.priorities_ = [];\n        /**\n         * @type {!Object<string, boolean>}\n         * @private\n         */\n        this.queuedElements_ = {};\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.clear = function () {\n        this.elements_.length = 0;\n        this.priorities_.length = 0;\n        clear(this.queuedElements_);\n    };\n    /**\n     * Remove and return the highest-priority element. O(log N).\n     * @return {T} Element.\n     */\n    PriorityQueue.prototype.dequeue = function () {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[0];\n        if (elements.length == 1) {\n            elements.length = 0;\n            priorities.length = 0;\n        }\n        else {\n            elements[0] = elements.pop();\n            priorities[0] = priorities.pop();\n            this.siftUp_(0);\n        }\n        var elementKey = this.keyFunction_(element);\n        delete this.queuedElements_[elementKey];\n        return element;\n    };\n    /**\n     * Enqueue an element. O(log N).\n     * @param {T} element Element.\n     * @return {boolean} The element was added to the queue.\n     */\n    PriorityQueue.prototype.enqueue = function (element) {\n        assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n        var priority = this.priorityFunction_(element);\n        if (priority != DROP) {\n            this.elements_.push(element);\n            this.priorities_.push(priority);\n            this.queuedElements_[this.keyFunction_(element)] = true;\n            this.siftDown_(0, this.elements_.length - 1);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @return {number} Count.\n     */\n    PriorityQueue.prototype.getCount = function () {\n        return this.elements_.length;\n    };\n    /**\n     * Gets the index of the left child of the node at the given index.\n     * @param {number} index The index of the node to get the left child for.\n     * @return {number} The index of the left child.\n     * @private\n     */\n    PriorityQueue.prototype.getLeftChildIndex_ = function (index) {\n        return index * 2 + 1;\n    };\n    /**\n     * Gets the index of the right child of the node at the given index.\n     * @param {number} index The index of the node to get the right child for.\n     * @return {number} The index of the right child.\n     * @private\n     */\n    PriorityQueue.prototype.getRightChildIndex_ = function (index) {\n        return index * 2 + 2;\n    };\n    /**\n     * Gets the index of the parent of the node at the given index.\n     * @param {number} index The index of the node to get the parent for.\n     * @return {number} The index of the parent.\n     * @private\n     */\n    PriorityQueue.prototype.getParentIndex_ = function (index) {\n        return (index - 1) >> 1;\n    };\n    /**\n     * Make this a heap. O(N).\n     * @private\n     */\n    PriorityQueue.prototype.heapify_ = function () {\n        var i;\n        for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n            this.siftUp_(i);\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    PriorityQueue.prototype.isEmpty = function () {\n        return this.elements_.length === 0;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Is key queued.\n     */\n    PriorityQueue.prototype.isKeyQueued = function (key) {\n        return key in this.queuedElements_;\n    };\n    /**\n     * @param {T} element Element.\n     * @return {boolean} Is queued.\n     */\n    PriorityQueue.prototype.isQueued = function (element) {\n        return this.isKeyQueued(this.keyFunction_(element));\n    };\n    /**\n     * @param {number} index The index of the node to move down.\n     * @private\n     */\n    PriorityQueue.prototype.siftUp_ = function (index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var count = elements.length;\n        var element = elements[index];\n        var priority = priorities[index];\n        var startIndex = index;\n        while (index < count >> 1) {\n            var lIndex = this.getLeftChildIndex_(index);\n            var rIndex = this.getRightChildIndex_(index);\n            var smallerChildIndex = rIndex < count && priorities[rIndex] < priorities[lIndex]\n                ? rIndex\n                : lIndex;\n            elements[index] = elements[smallerChildIndex];\n            priorities[index] = priorities[smallerChildIndex];\n            index = smallerChildIndex;\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n        this.siftDown_(startIndex, index);\n    };\n    /**\n     * @param {number} startIndex The index of the root.\n     * @param {number} index The index of the node to move up.\n     * @private\n     */\n    PriorityQueue.prototype.siftDown_ = function (startIndex, index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[index];\n        var priority = priorities[index];\n        while (index > startIndex) {\n            var parentIndex = this.getParentIndex_(index);\n            if (priorities[parentIndex] > priority) {\n                elements[index] = elements[parentIndex];\n                priorities[index] = priorities[parentIndex];\n                index = parentIndex;\n            }\n            else {\n                break;\n            }\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.reprioritize = function () {\n        var priorityFunction = this.priorityFunction_;\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var index = 0;\n        var n = elements.length;\n        var element, i, priority;\n        for (i = 0; i < n; ++i) {\n            element = elements[i];\n            priority = priorityFunction(element);\n            if (priority == DROP) {\n                delete this.queuedElements_[this.keyFunction_(element)];\n            }\n            else {\n                priorities[index] = priority;\n                elements[index++] = element;\n            }\n        }\n        elements.length = index;\n        priorities.length = index;\n        this.heapify_();\n    };\n    return PriorityQueue;\n}());\nexport default PriorityQueue;\n//# sourceMappingURL=PriorityQueue.js.map","/**\n * @module ol/TileState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    /**\n     * Indicates that tile loading failed\n     * @type {number}\n     */\n    ERROR: 3,\n    EMPTY: 4,\n};\n//# sourceMappingURL=TileState.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, { DROP } from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\nvar TileQueue = /** @class */ (function (_super) {\n    __extends(TileQueue, _super);\n    /**\n     * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n     * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n     */\n    function TileQueue(tilePriorityFunction, tileChangeCallback) {\n        var _this = _super.call(this, \n        /**\n         * @param {Array} element Element.\n         * @return {number} Priority.\n         */\n        function (element) {\n            return tilePriorityFunction.apply(null, element);\n        }, \n        /**\n         * @param {Array} element Element.\n         * @return {string} Key.\n         */\n        function (element) {\n            return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n        }) || this;\n        /** @private */\n        _this.boundHandleTileChange_ = _this.handleTileChange.bind(_this);\n        /**\n         * @private\n         * @type {function(): ?}\n         */\n        _this.tileChangeCallback_ = tileChangeCallback;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilesLoading_ = 0;\n        /**\n         * @private\n         * @type {!Object<string,boolean>}\n         */\n        _this.tilesLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * @param {Array} element Element.\n     * @return {boolean} The element was added to the queue.\n     */\n    TileQueue.prototype.enqueue = function (element) {\n        var added = _super.prototype.enqueue.call(this, element);\n        if (added) {\n            var tile = element[0];\n            tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n        }\n        return added;\n    };\n    /**\n     * @return {number} Number of tiles loading.\n     */\n    TileQueue.prototype.getTilesLoading = function () {\n        return this.tilesLoading_;\n    };\n    /**\n     * @param {import(\"./events/Event.js\").default} event Event.\n     * @protected\n     */\n    TileQueue.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n        var state = tile.getState();\n        if (state === TileState.LOADED ||\n            state === TileState.ERROR ||\n            state === TileState.EMPTY) {\n            tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n            var tileKey = tile.getKey();\n            if (tileKey in this.tilesLoadingKeys_) {\n                delete this.tilesLoadingKeys_[tileKey];\n                --this.tilesLoading_;\n            }\n            this.tileChangeCallback_();\n        }\n    };\n    /**\n     * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n     * @param {number} maxNewLoads Maximum number of new tiles to load.\n     */\n    TileQueue.prototype.loadMoreTiles = function (maxTotalLoading, maxNewLoads) {\n        var newLoads = 0;\n        var state, tile, tileKey;\n        while (this.tilesLoading_ < maxTotalLoading &&\n            newLoads < maxNewLoads &&\n            this.getCount() > 0) {\n            tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n            tileKey = tile.getKey();\n            state = tile.getState();\n            if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n                this.tilesLoadingKeys_[tileKey] = true;\n                ++this.tilesLoading_;\n                ++newLoads;\n                tile.load();\n            }\n        }\n    };\n    return TileQueue;\n}(PriorityQueue));\nexport default TileQueue;\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(frameState, tile, tileSourceKey, tileCenter, tileResolution) {\n    // Filter out tiles at higher zoom levels than the current zoom level, or that\n    // are outside the visible extent.\n    if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n        return DROP;\n    }\n    if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n        return DROP;\n    }\n    // Prioritize the highest zoom level tiles closest to the focus.\n    // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n    // Within a zoom level, tiles are prioritized by the distance in pixels between\n    // the center of the tile and the center of the viewport.  The factor of 65536\n    // means that the prioritization should behave as desired for tiles up to\n    // 65536 * Math.log(2) = 45426 pixels from the focus.\n    var center = frameState.viewState.center;\n    var deltaX = tileCenter[0] - center[0];\n    var deltaY = tileCenter[1] - center[1];\n    return (65536 * Math.log(tileResolution) +\n        Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution);\n}\n//# sourceMappingURL=TileQueue.js.map","/**\n * @module ol/ViewHint\n */\n/**\n * @enum {number}\n */\nexport default {\n    ANIMATING: 0,\n    INTERACTING: 1,\n};\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/ViewProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    CENTER: 'center',\n    RESOLUTION: 'resolution',\n    ROTATION: 'rotation',\n};\n//# sourceMappingURL=ViewProperty.js.map","/**\n * @module ol/tilegrid/common\n */\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n//# sourceMappingURL=common.js.map","/**\n * @module ol/centerconstraint\n */\nimport { clamp } from './math.js';\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n    return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [opt_centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n        if (center) {\n            var viewWidth = onlyCenter ? 0 : size[0] * resolution;\n            var viewHeight = onlyCenter ? 0 : size[1] * resolution;\n            var shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n            var shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n            var minX = extent[0] + viewWidth / 2 + shiftX;\n            var maxX = extent[2] - viewWidth / 2 + shiftX;\n            var minY = extent[1] + viewHeight / 2 + shiftY;\n            var maxY = extent[3] - viewHeight / 2 + shiftY;\n            // note: when zooming out of bounds, min and max values for x and y may\n            // end up inverted (min > max); this has to be accounted for\n            if (minX > maxX) {\n                minX = (maxX + minX) / 2;\n                maxX = minX;\n            }\n            if (minY > maxY) {\n                minY = (maxY + minY) / 2;\n                maxY = minY;\n            }\n            var x = clamp(center[0], minX, maxX);\n            var y = clamp(center[1], minY, maxY);\n            var ratio = 30 * resolution;\n            // during an interaction, allow some overscroll\n            if (opt_isMoving && smooth) {\n                x +=\n                    -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n                        ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n                y +=\n                    -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n                        ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n            }\n            return [x, y];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n    return center;\n}\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/resolutionconstraint\n */\nimport { clamp } from './math.js';\nimport { getHeight, getWidth } from './extent.js';\nimport { linearFindNearest } from './array.js';\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(resolution, maxExtent, viewportSize, showFullExtent) {\n    var xResolution = getWidth(maxExtent) / viewportSize[0];\n    var yResolution = getHeight(maxExtent) / viewportSize[1];\n    if (showFullExtent) {\n        return Math.min(resolution, Math.max(xResolution, yResolution));\n    }\n    return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n    var result = Math.min(resolution, maxResolution);\n    var ratio = 50;\n    result *=\n        Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n            1;\n    if (minResolution) {\n        result = Math.max(result, minResolution);\n        result /=\n            Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n                ratio +\n                1;\n    }\n    return clamp(result, minResolution / 2, maxResolution * 2);\n}\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var maxResolution = resolutions[0];\n            var minResolution = resolutions[resolutions.length - 1];\n            var cappedMaxRes = opt_maxExtent\n                ? getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent)\n                : maxResolution;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var capped = Math.min(cappedMaxRes, resolution);\n            var z = Math.floor(linearFindNearest(resolutions, capped, direction));\n            if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n                return resolutions[z + 1];\n            }\n            return resolutions[z];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [opt_minResolution] Minimum resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_minResolution, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent\n                ? getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent)\n                : maxResolution;\n            var minResolution = opt_minResolution !== undefined ? opt_minResolution : 0;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var tolerance = 1e-9;\n            var minZoomLevel = Math.ceil(Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance);\n            var offset = -direction * (0.5 - tolerance) + 0.5;\n            var capped = Math.min(cappedMaxRes, resolution);\n            var cappedZoomLevel = Math.floor(Math.log(maxResolution / capped) / Math.log(power) + offset);\n            var zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n            var newResolution = maxResolution / Math.pow(power, zoomLevel);\n            return clamp(newResolution, minResolution, cappedMaxRes);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(maxResolution, minResolution, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent\n                ? getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent)\n                : maxResolution;\n            var smooth = opt_smooth !== undefined ? opt_smooth : true;\n            if (!smooth || !opt_isMoving) {\n                return clamp(resolution, minResolution, cappedMaxRes);\n            }\n            return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=resolutionconstraint.js.map","/**\n * @module ol/rotationconstraint\n */\nimport { toRadians } from './math.js';\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n    if (rotation !== undefined) {\n        return 0;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n    if (rotation !== undefined) {\n        return rotation;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n    var theta = (2 * Math.PI) / n;\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            rotation = Math.floor(rotation / theta + 0.5) * theta;\n            return rotation;\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} [opt_tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n    var tolerance = opt_tolerance || toRadians(5);\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            if (Math.abs(rotation) <= tolerance) {\n                return 0;\n            }\n            else {\n                return rotation;\n            }\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=rotationconstraint.js.map","/**\n * @module ol/easing\n */\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n    return Math.pow(t, 3);\n}\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n    return 1 - easeIn(1 - t);\n}\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n    return 3 * t * t - 2 * t * t * t;\n}\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n    return t;\n}\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n    if (t < 0.5) {\n        return inAndOut(2 * t);\n    }\n    else {\n        return 1 - inAndOut(2 * (t - 0.5));\n    }\n}\n//# sourceMappingURL=easing.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport { DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { METERS_PER_UNIT, createProjection, fromUserCoordinate, fromUserExtent, getUserProjection, toUserCoordinate, toUserExtent, } from './proj.js';\nimport { VOID } from './functions.js';\nimport { add as addCoordinate, equals as coordinatesEqual, rotate as rotateCoordinate, } from './coordinate.js';\nimport { assert } from './asserts.js';\nimport { assign } from './obj.js';\nimport { none as centerNone, createExtent } from './centerconstraint.js';\nimport { clamp, modulo } from './math.js';\nimport { createMinMaxResolution } from './resolutionconstraint.js';\nimport { createSnapToN, createSnapToZero, disable, none as rotationNone, } from './rotationconstraint.js';\nimport { createSnapToPower, createSnapToResolutions, } from './resolutionconstraint.js';\nimport { easeOut } from './easing.js';\nimport { equals } from './coordinate.js';\nimport { getCenter, getForViewAndSize, getHeight, getWidth, isEmpty, } from './extent.js';\nimport { inAndOut } from './easing.js';\nimport { linearFindNearest } from './array.js';\nimport { fromExtent as polygonFromExtent } from './geom/Polygon.js';\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nvar View = /** @class */ (function (_super) {\n    __extends(View, _super);\n    /**\n     * @param {ViewOptions} [opt_options] View options.\n     */\n    function View(opt_options) {\n        var _this = _super.call(this) || this;\n        /***\n         * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {ViewOnSignature<void>}\n         */\n        _this.un;\n        var options = assign({}, opt_options);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.hints_ = [0, 0];\n        /**\n         * @private\n         * @type {Array<Array<Animation>>}\n         */\n        _this.animations_ = [];\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.updateAnimationKey_;\n        /**\n         * @private\n         * @const\n         * @type {import(\"./proj/Projection.js\").default}\n         */\n        _this.projection_ = createProjection(options.projection, 'EPSG:3857');\n        /**\n         * @private\n         * @type {import(\"./size.js\").Size}\n         */\n        _this.viewportSize_ = [100, 100];\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate|undefined}\n         */\n        _this.targetCenter_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetResolution_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetRotation_;\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate}\n         */\n        _this.nextCenter_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.nextResolution_;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.nextRotation_;\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate|undefined}\n         */\n        _this.cancelAnchor_ = undefined;\n        if (options.center) {\n            options.center = fromUserCoordinate(options.center, _this.projection_);\n        }\n        if (options.extent) {\n            options.extent = fromUserExtent(options.extent, _this.projection_);\n        }\n        _this.applyOptions_(options);\n        return _this;\n    }\n    /**\n     * Set up the view with the given options.\n     * @param {ViewOptions} options View options.\n     */\n    View.prototype.applyOptions_ = function (options) {\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = {};\n        var resolutionConstraintInfo = createResolutionConstraint(options);\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minResolution_ = resolutionConstraintInfo.minResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n        /**\n         * @private\n         * @type {Array<number>|undefined}\n         */\n        this.resolutions_ = options.resolutions;\n        /**\n         * @type {Array<number>|undefined}\n         * @private\n         */\n        this.padding_ = options.padding;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minZoom_ = resolutionConstraintInfo.minZoom;\n        var centerConstraint = createCenterConstraint(options);\n        var resolutionConstraint = resolutionConstraintInfo.constraint;\n        var rotationConstraint = createRotationConstraint(options);\n        /**\n         * @private\n         * @type {Constraints}\n         */\n        this.constraints_ = {\n            center: centerConstraint,\n            resolution: resolutionConstraint,\n            rotation: rotationConstraint,\n        };\n        this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n        this.setCenterInternal(options.center !== undefined ? options.center : null);\n        if (options.resolution !== undefined) {\n            this.setResolution(options.resolution);\n        }\n        else if (options.zoom !== undefined) {\n            this.setZoom(options.zoom);\n        }\n        this.setProperties(properties);\n        /**\n         * @private\n         * @type {ViewOptions}\n         */\n        this.options_ = options;\n    };\n    Object.defineProperty(View.prototype, \"padding\", {\n        /**\n         * Padding (in css pixels).\n         * If the map viewport is partially covered with other content (overlays) along\n         * its edges, this setting allows to shift the center of the viewport away from that\n         * content. The order of the values in the array is top, right, bottom, left.\n         * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n         * @type {Array<number>|undefined}\n         * @api\n         */\n        get: function () {\n            return this.padding_;\n        },\n        set: function (padding) {\n            var oldPadding = this.padding_;\n            this.padding_ = padding;\n            var center = this.getCenter();\n            if (center) {\n                var newPadding = padding || [0, 0, 0, 0];\n                oldPadding = oldPadding || [0, 0, 0, 0];\n                var resolution = this.getResolution();\n                var offsetX = (resolution / 2) *\n                    (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n                var offsetY = (resolution / 2) *\n                    (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n                this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Get an updated version of the view options used to construct the view.  The\n     * current resolution (or zoom), center, and rotation are applied to any stored\n     * options.  The provided options can be used to apply new min/max zoom or\n     * resolution limits.\n     * @param {ViewOptions} newOptions New options to be applied.\n     * @return {ViewOptions} New options updated with the current view state.\n     */\n    View.prototype.getUpdatedOptions_ = function (newOptions) {\n        var options = assign({}, this.options_);\n        // preserve resolution (or zoom)\n        if (options.resolution !== undefined) {\n            options.resolution = this.getResolution();\n        }\n        else {\n            options.zoom = this.getZoom();\n        }\n        // preserve center\n        options.center = this.getCenterInternal();\n        // preserve rotation\n        options.rotation = this.getRotation();\n        return assign({}, options, newOptions);\n    };\n    /**\n     * Animate the view.  The view's center, zoom (or resolution), and rotation\n     * can be animated for smooth transitions between view states.  For example,\n     * to animate the view to a new zoom level:\n     *\n     *     view.animate({zoom: view.getZoom() + 1});\n     *\n     * By default, the animation lasts one second and uses in-and-out easing.  You\n     * can customize this behavior by including `duration` (in milliseconds) and\n     * `easing` options (see {@link module:ol/easing}).\n     *\n     * To chain together multiple animations, call the method with multiple\n     * animation objects.  For example, to first zoom and then pan:\n     *\n     *     view.animate({zoom: 10}, {center: [0, 0]});\n     *\n     * If you provide a function as the last argument to the animate method, it\n     * will get called at the end of an animation series.  The callback will be\n     * called with `true` if the animation series completed on its own or `false`\n     * if it was cancelled.\n     *\n     * Animations are cancelled by user interactions (e.g. dragging the map) or by\n     * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n     * (or another method that calls one of these).\n     *\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n     *     options.  Multiple animations can be run in series by passing multiple\n     *     options objects.  To run multiple animations in parallel, call the method\n     *     multiple times.  An optional callback can be provided as a final\n     *     argument.  The callback will be called with a boolean indicating whether\n     *     the animation completed without being cancelled.\n     * @api\n     */\n    View.prototype.animate = function (var_args) {\n        if (this.isDef() && !this.getAnimating()) {\n            this.resolveConstraints(0);\n        }\n        var args = new Array(arguments.length);\n        for (var i = 0; i < args.length; ++i) {\n            var options = arguments[i];\n            if (options.center) {\n                options = assign({}, options);\n                options.center = fromUserCoordinate(options.center, this.getProjection());\n            }\n            if (options.anchor) {\n                options = assign({}, options);\n                options.anchor = fromUserCoordinate(options.anchor, this.getProjection());\n            }\n            args[i] = options;\n        }\n        this.animateInternal.apply(this, args);\n    };\n    /**\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n     */\n    View.prototype.animateInternal = function (var_args) {\n        var animationCount = arguments.length;\n        var callback;\n        if (animationCount > 1 &&\n            typeof arguments[animationCount - 1] === 'function') {\n            callback = arguments[animationCount - 1];\n            --animationCount;\n        }\n        var i = 0;\n        for (; i < animationCount && !this.isDef(); ++i) {\n            // if view properties are not yet set, shortcut to the final state\n            var state = arguments[i];\n            if (state.center) {\n                this.setCenterInternal(state.center);\n            }\n            if (state.zoom !== undefined) {\n                this.setZoom(state.zoom);\n            }\n            else if (state.resolution) {\n                this.setResolution(state.resolution);\n            }\n            if (state.rotation !== undefined) {\n                this.setRotation(state.rotation);\n            }\n        }\n        if (i === animationCount) {\n            if (callback) {\n                animationCallback(callback, true);\n            }\n            return;\n        }\n        var start = Date.now();\n        var center = this.targetCenter_.slice();\n        var resolution = this.targetResolution_;\n        var rotation = this.targetRotation_;\n        var series = [];\n        for (; i < animationCount; ++i) {\n            var options = /** @type {AnimationOptions} */ (arguments[i]);\n            var animation = {\n                start: start,\n                complete: false,\n                anchor: options.anchor,\n                duration: options.duration !== undefined ? options.duration : 1000,\n                easing: options.easing || inAndOut,\n                callback: callback,\n            };\n            if (options.center) {\n                animation.sourceCenter = center;\n                animation.targetCenter = options.center.slice();\n                center = animation.targetCenter;\n            }\n            if (options.zoom !== undefined) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = this.getResolutionForZoom(options.zoom);\n                resolution = animation.targetResolution;\n            }\n            else if (options.resolution) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = options.resolution;\n                resolution = animation.targetResolution;\n            }\n            if (options.rotation !== undefined) {\n                animation.sourceRotation = rotation;\n                var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n                animation.targetRotation = rotation + delta;\n                rotation = animation.targetRotation;\n            }\n            // check if animation is a no-op\n            if (isNoopAnimation(animation)) {\n                animation.complete = true;\n                // we still push it onto the series for callback handling\n            }\n            else {\n                start += animation.duration;\n            }\n            series.push(animation);\n        }\n        this.animations_.push(series);\n        this.setHint(ViewHint.ANIMATING, 1);\n        this.updateAnimations_();\n    };\n    /**\n     * Determine if the view is being animated.\n     * @return {boolean} The view is being animated.\n     * @api\n     */\n    View.prototype.getAnimating = function () {\n        return this.hints_[ViewHint.ANIMATING] > 0;\n    };\n    /**\n     * Determine if the user is interacting with the view, such as panning or zooming.\n     * @return {boolean} The view is being interacted with.\n     * @api\n     */\n    View.prototype.getInteracting = function () {\n        return this.hints_[ViewHint.INTERACTING] > 0;\n    };\n    /**\n     * Cancel any ongoing animations.\n     * @api\n     */\n    View.prototype.cancelAnimations = function () {\n        this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n        var anchor;\n        for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n            var series = this.animations_[i];\n            if (series[0].callback) {\n                animationCallback(series[0].callback, false);\n            }\n            if (!anchor) {\n                for (var j = 0, jj = series.length; j < jj; ++j) {\n                    var animation = series[j];\n                    if (!animation.complete) {\n                        anchor = animation.anchor;\n                        break;\n                    }\n                }\n            }\n        }\n        this.animations_.length = 0;\n        this.cancelAnchor_ = anchor;\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n    };\n    /**\n     * Update all animations.\n     */\n    View.prototype.updateAnimations_ = function () {\n        if (this.updateAnimationKey_ !== undefined) {\n            cancelAnimationFrame(this.updateAnimationKey_);\n            this.updateAnimationKey_ = undefined;\n        }\n        if (!this.getAnimating()) {\n            return;\n        }\n        var now = Date.now();\n        var more = false;\n        for (var i = this.animations_.length - 1; i >= 0; --i) {\n            var series = this.animations_[i];\n            var seriesComplete = true;\n            for (var j = 0, jj = series.length; j < jj; ++j) {\n                var animation = series[j];\n                if (animation.complete) {\n                    continue;\n                }\n                var elapsed = now - animation.start;\n                var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n                if (fraction >= 1) {\n                    animation.complete = true;\n                    fraction = 1;\n                }\n                else {\n                    seriesComplete = false;\n                }\n                var progress = animation.easing(fraction);\n                if (animation.sourceCenter) {\n                    var x0 = animation.sourceCenter[0];\n                    var y0 = animation.sourceCenter[1];\n                    var x1 = animation.targetCenter[0];\n                    var y1 = animation.targetCenter[1];\n                    this.nextCenter_ = animation.targetCenter;\n                    var x = x0 + progress * (x1 - x0);\n                    var y = y0 + progress * (y1 - y0);\n                    this.targetCenter_ = [x, y];\n                }\n                if (animation.sourceResolution && animation.targetResolution) {\n                    var resolution = progress === 1\n                        ? animation.targetResolution\n                        : animation.sourceResolution +\n                            progress *\n                                (animation.targetResolution - animation.sourceResolution);\n                    if (animation.anchor) {\n                        var size = this.getViewportSize_(this.getRotation());\n                        var constrainedResolution = this.constraints_.resolution(resolution, 0, size, true);\n                        this.targetCenter_ = this.calculateCenterZoom(constrainedResolution, animation.anchor);\n                    }\n                    this.nextResolution_ = animation.targetResolution;\n                    this.targetResolution_ = resolution;\n                    this.applyTargetState_(true);\n                }\n                if (animation.sourceRotation !== undefined &&\n                    animation.targetRotation !== undefined) {\n                    var rotation = progress === 1\n                        ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                            Math.PI\n                        : animation.sourceRotation +\n                            progress *\n                                (animation.targetRotation - animation.sourceRotation);\n                    if (animation.anchor) {\n                        var constrainedRotation = this.constraints_.rotation(rotation, true);\n                        this.targetCenter_ = this.calculateCenterRotate(constrainedRotation, animation.anchor);\n                    }\n                    this.nextRotation_ = animation.targetRotation;\n                    this.targetRotation_ = rotation;\n                }\n                this.applyTargetState_(true);\n                more = true;\n                if (!animation.complete) {\n                    break;\n                }\n            }\n            if (seriesComplete) {\n                this.animations_[i] = null;\n                this.setHint(ViewHint.ANIMATING, -1);\n                this.nextCenter_ = null;\n                this.nextResolution_ = NaN;\n                this.nextRotation_ = NaN;\n                var callback = series[0].callback;\n                if (callback) {\n                    animationCallback(callback, true);\n                }\n            }\n        }\n        // prune completed series\n        this.animations_ = this.animations_.filter(Boolean);\n        if (more && this.updateAnimationKey_ === undefined) {\n            this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_.bind(this));\n        }\n    };\n    /**\n     * @param {number} rotation Target rotation.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n     */\n    View.prototype.calculateCenterRotate = function (rotation, anchor) {\n        var center;\n        var currentCenter = this.getCenterInternal();\n        if (currentCenter !== undefined) {\n            center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n            rotateCoordinate(center, rotation - this.getRotation());\n            addCoordinate(center, anchor);\n        }\n        return center;\n    };\n    /**\n     * @param {number} resolution Target resolution.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n     */\n    View.prototype.calculateCenterZoom = function (resolution, anchor) {\n        var center;\n        var currentCenter = this.getCenterInternal();\n        var currentResolution = this.getResolution();\n        if (currentCenter !== undefined && currentResolution !== undefined) {\n            var x = anchor[0] -\n                (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n            var y = anchor[1] -\n                (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n            center = [x, y];\n        }\n        return center;\n    };\n    /**\n     * Returns the current viewport size.\n     * @private\n     * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n     * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n     */\n    View.prototype.getViewportSize_ = function (opt_rotation) {\n        var size = this.viewportSize_;\n        if (opt_rotation) {\n            var w = size[0];\n            var h = size[1];\n            return [\n                Math.abs(w * Math.cos(opt_rotation)) +\n                    Math.abs(h * Math.sin(opt_rotation)),\n                Math.abs(w * Math.sin(opt_rotation)) +\n                    Math.abs(h * Math.cos(opt_rotation)),\n            ];\n        }\n        else {\n            return size;\n        }\n    };\n    /**\n     * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n     * to avoid performance hit and layout reflow.\n     * This should be done on map size change.\n     * Note: the constraints are not resolved during an animation to avoid stopping it\n     * @param {import(\"./size.js\").Size} [opt_size] Viewport size; if undefined, [100, 100] is assumed\n     */\n    View.prototype.setViewportSize = function (opt_size) {\n        this.viewportSize_ = Array.isArray(opt_size)\n            ? opt_size.slice()\n            : [100, 100];\n        if (!this.getAnimating()) {\n            this.resolveConstraints(0);\n        }\n    };\n    /**\n     * Get the view center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getCenter = function () {\n        var center = this.getCenterInternal();\n        if (!center) {\n            return center;\n        }\n        return toUserCoordinate(center, this.getProjection());\n    };\n    /**\n     * Get the view center without transforming to user projection.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n     */\n    View.prototype.getCenterInternal = function () {\n        return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER));\n    };\n    /**\n     * @return {Constraints} Constraints.\n     */\n    View.prototype.getConstraints = function () {\n        return this.constraints_;\n    };\n    /**\n     * @return {boolean} Resolution constraint is set\n     */\n    View.prototype.getConstrainResolution = function () {\n        return this.options_.constrainResolution;\n    };\n    /**\n     * @param {Array<number>} [opt_hints] Destination array.\n     * @return {Array<number>} Hint.\n     */\n    View.prototype.getHints = function (opt_hints) {\n        if (opt_hints !== undefined) {\n            opt_hints[0] = this.hints_[0];\n            opt_hints[1] = this.hints_[1];\n            return opt_hints;\n        }\n        else {\n            return this.hints_.slice();\n        }\n    };\n    /**\n     * Calculate the extent for the current view state and the passed size.\n     * The size is the pixel dimensions of the box into which the calculated extent\n     * should fit. In most cases you want to get the extent of the entire map,\n     * that is `map.getSize()`.\n     * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided, the size\n     * of the map that uses this view will be used.\n     * @return {import(\"./extent.js\").Extent} Extent.\n     * @api\n     */\n    View.prototype.calculateExtent = function (opt_size) {\n        var extent = this.calculateExtentInternal(opt_size);\n        return toUserExtent(extent, this.getProjection());\n    };\n    /**\n     * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided,\n     * the map's last known viewport size will be used.\n     * @return {import(\"./extent.js\").Extent} Extent.\n     */\n    View.prototype.calculateExtentInternal = function (opt_size) {\n        var size = opt_size || this.getViewportSizeMinusPadding_();\n        var center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n        assert(center, 1); // The view center is not defined\n        var resolution = /** @type {!number} */ (this.getResolution());\n        assert(resolution !== undefined, 2); // The view resolution is not defined\n        var rotation = /** @type {!number} */ (this.getRotation());\n        assert(rotation !== undefined, 3); // The view rotation is not defined\n        return getForViewAndSize(center, resolution, rotation, size);\n    };\n    /**\n     * Get the maximum resolution of the view.\n     * @return {number} The maximum resolution of the view.\n     * @api\n     */\n    View.prototype.getMaxResolution = function () {\n        return this.maxResolution_;\n    };\n    /**\n     * Get the minimum resolution of the view.\n     * @return {number} The minimum resolution of the view.\n     * @api\n     */\n    View.prototype.getMinResolution = function () {\n        return this.minResolution_;\n    };\n    /**\n     * Get the maximum zoom level for the view.\n     * @return {number} The maximum zoom level.\n     * @api\n     */\n    View.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n    };\n    /**\n     * Set a new maximum zoom level for the view.\n     * @param {number} zoom The maximum zoom level.\n     * @api\n     */\n    View.prototype.setMaxZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ maxZoom: zoom }));\n    };\n    /**\n     * Get the minimum zoom level for the view.\n     * @return {number} The minimum zoom level.\n     * @api\n     */\n    View.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n    };\n    /**\n     * Set a new minimum zoom level for the view.\n     * @param {number} zoom The minimum zoom level.\n     * @api\n     */\n    View.prototype.setMinZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ minZoom: zoom }));\n    };\n    /**\n     * Set whether the view should allow intermediary zoom levels.\n     * @param {boolean} enabled Whether the resolution is constrained.\n     * @api\n     */\n    View.prototype.setConstrainResolution = function (enabled) {\n        this.applyOptions_(this.getUpdatedOptions_({ constrainResolution: enabled }));\n    };\n    /**\n     * Get the view projection.\n     * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n     * @api\n     */\n    View.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * Get the view resolution.\n     * @return {number|undefined} The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getResolution = function () {\n        return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n    };\n    /**\n     * Get the resolutions for the view. This returns the array of resolutions\n     * passed to the constructor of the View, or undefined if none were given.\n     * @return {Array<number>|undefined} The resolutions of the view.\n     * @api\n     */\n    View.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n     * @return {number} The resolution at which the provided extent will render at\n     *     the given size.\n     * @api\n     */\n    View.prototype.getResolutionForExtent = function (extent, opt_size) {\n        return this.getResolutionForExtentInternal(fromUserExtent(extent, this.getProjection()), opt_size);\n    };\n    /**\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n     * @return {number} The resolution at which the provided extent will render at\n     *     the given size.\n     */\n    View.prototype.getResolutionForExtentInternal = function (extent, opt_size) {\n        var size = opt_size || this.getViewportSizeMinusPadding_();\n        var xResolution = getWidth(extent) / size[0];\n        var yResolution = getHeight(extent) / size[1];\n        return Math.max(xResolution, yResolution);\n    };\n    /**\n     * Return a function that returns a value between 0 and 1 for a\n     * resolution. Exponential scaling is assumed.\n     * @param {number} [opt_power] Power.\n     * @return {function(number): number} Resolution for value function.\n     */\n    View.prototype.getResolutionForValueFunction = function (opt_power) {\n        var power = opt_power || 2;\n        var maxResolution = this.getConstrainedResolution(this.maxResolution_);\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\n        return (\n        /**\n         * @param {number} value Value.\n         * @return {number} Resolution.\n         */\n        function (value) {\n            var resolution = maxResolution / Math.pow(power, value * max);\n            return resolution;\n        });\n    };\n    /**\n     * Get the view rotation.\n     * @return {number} The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.getRotation = function () {\n        return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n    };\n    /**\n     * Return a function that returns a resolution for a value between\n     * 0 and 1. Exponential scaling is assumed.\n     * @param {number} [opt_power] Power.\n     * @return {function(number): number} Value for resolution function.\n     */\n    View.prototype.getValueForResolutionFunction = function (opt_power) {\n        var logPower = Math.log(opt_power || 2);\n        var maxResolution = this.getConstrainedResolution(this.maxResolution_);\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / logPower;\n        return (\n        /**\n         * @param {number} resolution Resolution.\n         * @return {number} Value.\n         */\n        function (resolution) {\n            var value = Math.log(maxResolution / resolution) / logPower / max;\n            return value;\n        });\n    };\n    /**\n     * Returns the size of the viewport minus padding.\n     * @private\n     * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n     * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n     */\n    View.prototype.getViewportSizeMinusPadding_ = function (opt_rotation) {\n        var size = this.getViewportSize_(opt_rotation);\n        var padding = this.padding_;\n        if (padding) {\n            size = [\n                size[0] - padding[1] - padding[3],\n                size[1] - padding[0] - padding[2],\n            ];\n        }\n        return size;\n    };\n    /**\n     * @return {State} View state.\n     */\n    View.prototype.getState = function () {\n        var projection = this.getProjection();\n        var resolution = this.getResolution();\n        var rotation = this.getRotation();\n        var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n        var padding = this.padding_;\n        if (padding) {\n            var reducedSize = this.getViewportSizeMinusPadding_();\n            center = calculateCenterOn(center, this.getViewportSize_(), [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]], resolution, rotation);\n        }\n        return {\n            center: center.slice(0),\n            projection: projection !== undefined ? projection : null,\n            resolution: resolution,\n            nextCenter: this.nextCenter_,\n            nextResolution: this.nextResolution_,\n            nextRotation: this.nextRotation_,\n            rotation: rotation,\n            zoom: this.getZoom(),\n        };\n    };\n    /**\n     * Get the current zoom level. This method may return non-integer zoom levels\n     * if the view does not constrain the resolution, or if an interaction or\n     * animation is underway.\n     * @return {number|undefined} Zoom.\n     * @api\n     */\n    View.prototype.getZoom = function () {\n        var zoom;\n        var resolution = this.getResolution();\n        if (resolution !== undefined) {\n            zoom = this.getZoomForResolution(resolution);\n        }\n        return zoom;\n    };\n    /**\n     * Get the zoom level for a resolution.\n     * @param {number} resolution The resolution.\n     * @return {number|undefined} The zoom level for the provided resolution.\n     * @api\n     */\n    View.prototype.getZoomForResolution = function (resolution) {\n        var offset = this.minZoom_ || 0;\n        var max, zoomFactor;\n        if (this.resolutions_) {\n            var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n            offset = nearest;\n            max = this.resolutions_[nearest];\n            if (nearest == this.resolutions_.length - 1) {\n                zoomFactor = 2;\n            }\n            else {\n                zoomFactor = max / this.resolutions_[nearest + 1];\n            }\n        }\n        else {\n            max = this.maxResolution_;\n            zoomFactor = this.zoomFactor_;\n        }\n        return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n    };\n    /**\n     * Get the resolution for a zoom level.\n     * @param {number} zoom Zoom level.\n     * @return {number} The view resolution for the provided zoom level.\n     * @api\n     */\n    View.prototype.getResolutionForZoom = function (zoom) {\n        if (this.resolutions_) {\n            if (this.resolutions_.length <= 1) {\n                return 0;\n            }\n            var baseLevel = clamp(Math.floor(zoom), 0, this.resolutions_.length - 2);\n            var zoomFactor = this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n            return (this.resolutions_[baseLevel] /\n                Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1)));\n        }\n        else {\n            return (this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_));\n        }\n    };\n    /**\n     * Fit the given geometry or extent based on the given map size and border.\n     * The size is pixel dimensions of the box to fit the extent into.\n     * In most cases you will want to use the map size, that is `map.getSize()`.\n     * Takes care of the map angle.\n     * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n     *     extent to fit the view to.\n     * @param {FitOptions} [opt_options] Options.\n     * @api\n     */\n    View.prototype.fit = function (geometryOrExtent, opt_options) {\n        /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n        var geometry;\n        assert(Array.isArray(geometryOrExtent) ||\n            typeof ( /** @type {?} */(geometryOrExtent).getSimplifiedGeometry) ===\n                'function', 24); // Invalid extent or geometry provided as `geometry`\n        if (Array.isArray(geometryOrExtent)) {\n            assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n            var extent = fromUserExtent(geometryOrExtent, this.getProjection());\n            geometry = polygonFromExtent(extent);\n        }\n        else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n            var extent = fromUserExtent(geometryOrExtent.getExtent(), this.getProjection());\n            geometry = polygonFromExtent(extent);\n            geometry.rotate(this.getRotation(), getCenter(extent));\n        }\n        else {\n            var userProjection = getUserProjection();\n            if (userProjection) {\n                geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometryOrExtent\n                    .clone()\n                    .transform(userProjection, this.getProjection()));\n            }\n            else {\n                geometry = geometryOrExtent;\n            }\n        }\n        this.fitInternal(geometry, opt_options);\n    };\n    /**\n     * Calculate rotated extent\n     * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n     * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n     */\n    View.prototype.rotatedExtentForGeometry = function (geometry) {\n        var rotation = this.getRotation();\n        var cosAngle = Math.cos(rotation);\n        var sinAngle = Math.sin(-rotation);\n        var coords = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        var minRotX = +Infinity;\n        var minRotY = +Infinity;\n        var maxRotX = -Infinity;\n        var maxRotY = -Infinity;\n        for (var i = 0, ii = coords.length; i < ii; i += stride) {\n            var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n            var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n            minRotX = Math.min(minRotX, rotX);\n            minRotY = Math.min(minRotY, rotY);\n            maxRotX = Math.max(maxRotX, rotX);\n            maxRotY = Math.max(maxRotY, rotY);\n        }\n        return [minRotX, minRotY, maxRotX, maxRotY];\n    };\n    /**\n     * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n     * @param {FitOptions} [opt_options] Options.\n     */\n    View.prototype.fitInternal = function (geometry, opt_options) {\n        var options = opt_options || {};\n        var size = options.size;\n        if (!size) {\n            size = this.getViewportSizeMinusPadding_();\n        }\n        var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n        var nearest = options.nearest !== undefined ? options.nearest : false;\n        var minResolution;\n        if (options.minResolution !== undefined) {\n            minResolution = options.minResolution;\n        }\n        else if (options.maxZoom !== undefined) {\n            minResolution = this.getResolutionForZoom(options.maxZoom);\n        }\n        else {\n            minResolution = 0;\n        }\n        var rotatedExtent = this.rotatedExtentForGeometry(geometry);\n        // calculate resolution\n        var resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n            size[0] - padding[1] - padding[3],\n            size[1] - padding[0] - padding[2],\n        ]);\n        resolution = isNaN(resolution)\n            ? minResolution\n            : Math.max(resolution, minResolution);\n        resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n        // calculate center\n        var rotation = this.getRotation();\n        var sinAngle = Math.sin(rotation);\n        var cosAngle = Math.cos(rotation);\n        var centerRot = getCenter(rotatedExtent);\n        centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n        centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n        var centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n        var centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n        var center = this.getConstrainedCenter([centerX, centerY], resolution);\n        var callback = options.callback ? options.callback : VOID;\n        if (options.duration !== undefined) {\n            this.animateInternal({\n                resolution: resolution,\n                center: center,\n                duration: options.duration,\n                easing: options.easing,\n            }, callback);\n        }\n        else {\n            this.targetResolution_ = resolution;\n            this.targetCenter_ = center;\n            this.applyTargetState_(false, true);\n            animationCallback(callback, true);\n        }\n    };\n    /**\n     * Center on coordinate and view position.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"./size.js\").Size} size Box pixel size.\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n     * @api\n     */\n    View.prototype.centerOn = function (coordinate, size, position) {\n        this.centerOnInternal(fromUserCoordinate(coordinate, this.getProjection()), size, position);\n    };\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"./size.js\").Size} size Box pixel size.\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n     */\n    View.prototype.centerOnInternal = function (coordinate, size, position) {\n        this.setCenterInternal(calculateCenterOn(coordinate, size, position, this.getResolution(), this.getRotation()));\n    };\n    /**\n     * Calculates the shift between map and viewport center.\n     * @param {import(\"./coordinate.js\").Coordinate} center Center.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {import(\"./size.js\").Size} size Size.\n     * @return {Array<number>|undefined} Center shift.\n     */\n    View.prototype.calculateCenterShift = function (center, resolution, rotation, size) {\n        var centerShift;\n        var padding = this.padding_;\n        if (padding && center) {\n            var reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n            var shiftedCenter = calculateCenterOn(center, size, [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]], resolution, rotation);\n            centerShift = [\n                center[0] - shiftedCenter[0],\n                center[1] - shiftedCenter[1],\n            ];\n        }\n        return centerShift;\n    };\n    /**\n     * @return {boolean} Is defined.\n     */\n    View.prototype.isDef = function () {\n        return !!this.getCenterInternal() && this.getResolution() !== undefined;\n    };\n    /**\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n     * @api\n     */\n    View.prototype.adjustCenter = function (deltaCoordinates) {\n        var center = toUserCoordinate(this.targetCenter_, this.getProjection());\n        this.setCenter([\n            center[0] + deltaCoordinates[0],\n            center[1] + deltaCoordinates[1],\n        ]);\n    };\n    /**\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n     */\n    View.prototype.adjustCenterInternal = function (deltaCoordinates) {\n        var center = this.targetCenter_;\n        this.setCenterInternal([\n            center[0] + deltaCoordinates[0],\n            center[1] + deltaCoordinates[1],\n        ]);\n    };\n    /**\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} ratio The ratio to apply on the view resolution.\n     * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n     * @api\n     */\n    View.prototype.adjustResolution = function (ratio, opt_anchor) {\n        var anchor = opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n        this.adjustResolutionInternal(ratio, anchor);\n    };\n    /**\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} ratio The ratio to apply on the view resolution.\n     * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n     */\n    View.prototype.adjustResolutionInternal = function (ratio, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var size = this.getViewportSize_(this.getRotation());\n        var newResolution = this.constraints_.resolution(this.targetResolution_ * ratio, 0, size, isMoving);\n        if (opt_anchor) {\n            this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n        }\n        this.targetResolution_ *= ratio;\n        this.applyTargetState_();\n    };\n    /**\n     * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom level.\n     * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n     * @api\n     */\n    View.prototype.adjustZoom = function (delta, opt_anchor) {\n        this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n    };\n    /**\n     * Adds a value to the view rotation, optionally using an anchor. Any rotation\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\n     * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n     * @api\n     */\n    View.prototype.adjustRotation = function (delta, opt_anchor) {\n        if (opt_anchor) {\n            opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n        }\n        this.adjustRotationInternal(delta, opt_anchor);\n    };\n    /**\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\n     * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n     */\n    View.prototype.adjustRotationInternal = function (delta, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var newRotation = this.constraints_.rotation(this.targetRotation_ + delta, isMoving);\n        if (opt_anchor) {\n            this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n        }\n        this.targetRotation_ += delta;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the center of the current view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setCenter = function (center) {\n        this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n    };\n    /**\n     * Set the center using the view projection (not the user projection).\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n     */\n    View.prototype.setCenterInternal = function (center) {\n        this.targetCenter_ = center;\n        this.applyTargetState_();\n    };\n    /**\n     * @param {import(\"./ViewHint.js\").default} hint Hint.\n     * @param {number} delta Delta.\n     * @return {number} New value.\n     */\n    View.prototype.setHint = function (hint, delta) {\n        this.hints_[hint] += delta;\n        this.changed();\n        return this.hints_[hint];\n    };\n    /**\n     * Set the resolution for this view. Any resolution constraint will apply.\n     * @param {number|undefined} resolution The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setResolution = function (resolution) {\n        this.targetResolution_ = resolution;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the rotation for this view. Any rotation constraint will apply.\n     * @param {number} rotation The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.setRotation = function (rotation) {\n        this.targetRotation_ = rotation;\n        this.applyTargetState_();\n    };\n    /**\n     * Zoom to a specific zoom level. Any resolution constrain will apply.\n     * @param {number} zoom Zoom level.\n     * @api\n     */\n    View.prototype.setZoom = function (zoom) {\n        this.setResolution(this.getResolutionForZoom(zoom));\n    };\n    /**\n     * Recompute rotation/resolution/center based on target values.\n     * Note: we have to compute rotation first, then resolution and center considering that\n     * parameters can influence one another in case a view extent constraint is present.\n     * @param {boolean} [opt_doNotCancelAnims] Do not cancel animations.\n     * @param {boolean} [opt_forceMoving] Apply constraints as if the view is moving.\n     * @private\n     */\n    View.prototype.applyTargetState_ = function (opt_doNotCancelAnims, opt_forceMoving) {\n        var isMoving = this.getAnimating() || this.getInteracting() || opt_forceMoving;\n        // compute rotation\n        var newRotation = this.constraints_.rotation(this.targetRotation_, isMoving);\n        var size = this.getViewportSize_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, 0, size, isMoving);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size, isMoving, this.calculateCenterShift(this.targetCenter_, newResolution, newRotation, size));\n        if (this.get(ViewProperty.ROTATION) !== newRotation) {\n            this.set(ViewProperty.ROTATION, newRotation);\n        }\n        if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n            this.set(ViewProperty.RESOLUTION, newResolution);\n        }\n        if (!this.get(ViewProperty.CENTER) ||\n            !equals(this.get(ViewProperty.CENTER), newCenter)) {\n            this.set(ViewProperty.CENTER, newCenter);\n        }\n        if (this.getAnimating() && !opt_doNotCancelAnims) {\n            this.cancelAnimations();\n        }\n        this.cancelAnchor_ = undefined;\n    };\n    /**\n     * If any constraints need to be applied, an animation will be triggered.\n     * This is typically done on interaction end.\n     * Note: calling this with a duration of 0 will apply the constrained values straight away,\n     * without animation.\n     * @param {number} [opt_duration] The animation duration in ms.\n     * @param {number} [opt_resolutionDirection] Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n     */\n    View.prototype.resolveConstraints = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        var duration = opt_duration !== undefined ? opt_duration : 200;\n        var direction = opt_resolutionDirection || 0;\n        var newRotation = this.constraints_.rotation(this.targetRotation_);\n        var size = this.getViewportSize_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, direction, size);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size, false, this.calculateCenterShift(this.targetCenter_, newResolution, newRotation, size));\n        if (duration === 0 && !this.cancelAnchor_) {\n            this.targetResolution_ = newResolution;\n            this.targetRotation_ = newRotation;\n            this.targetCenter_ = newCenter;\n            this.applyTargetState_();\n            return;\n        }\n        var anchor = opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n        this.cancelAnchor_ = undefined;\n        if (this.getResolution() !== newResolution ||\n            this.getRotation() !== newRotation ||\n            !this.getCenterInternal() ||\n            !equals(this.getCenterInternal(), newCenter)) {\n            if (this.getAnimating()) {\n                this.cancelAnimations();\n            }\n            this.animateInternal({\n                rotation: newRotation,\n                center: newCenter,\n                resolution: newResolution,\n                duration: duration,\n                easing: easeOut,\n                anchor: anchor,\n            });\n        }\n    };\n    /**\n     * Notify the View that an interaction has started.\n     * The view state will be resolved to a stable one if needed\n     * (depending on its constraints).\n     * @api\n     */\n    View.prototype.beginInteraction = function () {\n        this.resolveConstraints(0);\n        this.setHint(ViewHint.INTERACTING, 1);\n    };\n    /**\n     * Notify the View that an interaction has ended. The view state will be resolved\n     * to a stable one if needed (depending on its constraints).\n     * @param {number} [opt_duration] Animation duration in ms.\n     * @param {number} [opt_resolutionDirection] Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n     * @api\n     */\n    View.prototype.endInteraction = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        var anchor = opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n        this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n    };\n    /**\n     * Notify the View that an interaction has ended. The view state will be resolved\n     * to a stable one if needed (depending on its constraints).\n     * @param {number} [opt_duration] Animation duration in ms.\n     * @param {number} [opt_resolutionDirection] Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n     */\n    View.prototype.endInteractionInternal = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        this.setHint(ViewHint.INTERACTING, -1);\n        this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n    };\n    /**\n     * Get a valid position for the view center according to the current constraints.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n     * @param {number} [opt_targetResolution] Target resolution. If not supplied, the current one will be used.\n     * This is useful to guess a valid center position at a different zoom level.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n     */\n    View.prototype.getConstrainedCenter = function (targetCenter, opt_targetResolution) {\n        var size = this.getViewportSize_(this.getRotation());\n        return this.constraints_.center(targetCenter, opt_targetResolution || this.getResolution(), size);\n    };\n    /**\n     * Get a valid zoom level according to the current view constraints.\n     * @param {number|undefined} targetZoom Target zoom.\n     * @param {number} [opt_direction=0] Indicate which resolution should be used\n     * by a renderer if the view resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @return {number|undefined} Valid zoom level.\n     */\n    View.prototype.getConstrainedZoom = function (targetZoom, opt_direction) {\n        var targetRes = this.getResolutionForZoom(targetZoom);\n        return this.getZoomForResolution(this.getConstrainedResolution(targetRes, opt_direction));\n    };\n    /**\n     * Get a valid resolution according to the current view constraints.\n     * @param {number|undefined} targetResolution Target resolution.\n     * @param {number} [opt_direction=0] Indicate which resolution should be used\n     * by a renderer if the view resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @return {number|undefined} Valid resolution.\n     */\n    View.prototype.getConstrainedResolution = function (targetResolution, opt_direction) {\n        var direction = opt_direction || 0;\n        var size = this.getViewportSize_(this.getRotation());\n        return this.constraints_.resolution(targetResolution, direction, size);\n    };\n    return View;\n}(BaseObject));\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n    setTimeout(function () {\n        callback(returnValue);\n    }, 0);\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n    if (options.extent !== undefined) {\n        var smooth = options.smoothExtentConstraint !== undefined\n            ? options.smoothExtentConstraint\n            : true;\n        return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n    }\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    if (options.multiWorld !== true && projection.isGlobal()) {\n        var extent = projection.getExtent().slice();\n        extent[0] = -Infinity;\n        extent[2] = Infinity;\n        return createExtent(extent, false, false);\n    }\n    return centerNone;\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n    var resolutionConstraint;\n    var maxResolution;\n    var minResolution;\n    // TODO: move these to be ol constants\n    // see https://github.com/openlayers/openlayers/issues/2076\n    var defaultMaxZoom = 28;\n    var defaultZoomFactor = 2;\n    var minZoom = options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n    var maxZoom = options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n    var zoomFactor = options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n    var multiWorld = options.multiWorld !== undefined ? options.multiWorld : false;\n    var smooth = options.smoothResolutionConstraint !== undefined\n        ? options.smoothResolutionConstraint\n        : true;\n    var showFullExtent = options.showFullExtent !== undefined ? options.showFullExtent : false;\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    var projExtent = projection.getExtent();\n    var constrainOnlyCenter = options.constrainOnlyCenter;\n    var extent = options.extent;\n    if (!multiWorld && !extent && projection.isGlobal()) {\n        constrainOnlyCenter = false;\n        extent = projExtent;\n    }\n    if (options.resolutions !== undefined) {\n        var resolutions = options.resolutions;\n        maxResolution = resolutions[minZoom];\n        minResolution =\n            resolutions[maxZoom] !== undefined\n                ? resolutions[maxZoom]\n                : resolutions[resolutions.length - 1];\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToResolutions(resolutions, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n        else {\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n    }\n    else {\n        // calculate the default min and max resolution\n        var size = !projExtent\n            ? // use an extent that can fit the whole world if need be\n                (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n            : Math.max(getWidth(projExtent), getHeight(projExtent));\n        var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n        var defaultMinResolution = defaultMaxResolution /\n            Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n        // user provided maxResolution takes precedence\n        maxResolution = options.maxResolution;\n        if (maxResolution !== undefined) {\n            minZoom = 0;\n        }\n        else {\n            maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n        }\n        // user provided minResolution takes precedence\n        minResolution = options.minResolution;\n        if (minResolution === undefined) {\n            if (options.maxZoom !== undefined) {\n                if (options.maxResolution !== undefined) {\n                    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n                else {\n                    minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n            }\n            else {\n                minResolution = defaultMinResolution;\n            }\n        }\n        // given discrete zoom levels, minResolution may be different than provided\n        maxZoom =\n            minZoom +\n                Math.floor(Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n        minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToPower(zoomFactor, maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n        else {\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n    }\n    return {\n        constraint: resolutionConstraint,\n        maxResolution: maxResolution,\n        minResolution: minResolution,\n        minZoom: minZoom,\n        zoomFactor: zoomFactor,\n    };\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n    var enableRotation = options.enableRotation !== undefined ? options.enableRotation : true;\n    if (enableRotation) {\n        var constrainRotation = options.constrainRotation;\n        if (constrainRotation === undefined || constrainRotation === true) {\n            return createSnapToZero();\n        }\n        else if (constrainRotation === false) {\n            return rotationNone;\n        }\n        else if (typeof constrainRotation === 'number') {\n            return createSnapToN(constrainRotation);\n        }\n        else {\n            return rotationNone;\n        }\n    }\n    else {\n        return disable;\n    }\n}\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n    if (animation.sourceCenter && animation.targetCenter) {\n        if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n            return false;\n        }\n    }\n    if (animation.sourceResolution !== animation.targetResolution) {\n        return false;\n    }\n    if (animation.sourceRotation !== animation.targetRotation) {\n        return false;\n    }\n    return true;\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n    // calculate rotated position\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    rotX += (size[0] / 2 - position[0]) * resolution;\n    rotY += (position[1] - size[1] / 2) * resolution;\n    // go back to original angle\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerX = rotX * cosAngle - rotY * sinAngle;\n    var centerY = rotY * cosAngle + rotX * sinAngle;\n    return [centerX, centerY];\n}\nexport default View;\n//# sourceMappingURL=View.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/PluggableMap\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport LayerGroup from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, { getTilePriority } from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport { DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS } from './has.js';\nimport { TRUE } from './functions.js';\nimport { apply as applyTransform, create as createTransform, } from './transform.js';\nimport { assert } from './asserts.js';\nimport { clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty, } from './extent.js';\nimport { fromUserCoordinate, toUserCoordinate } from './proj.js';\nimport { hasArea } from './size.js';\nimport { listen, unlistenByKey } from './events.js';\nimport { removeNode } from './dom.js';\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n */\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} PluggableMapOnSignature\n */\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nvar PluggableMap = /** @class */ (function (_super) {\n    __extends(PluggableMap, _super);\n    /**\n     * @param {MapOptions} options Map options.\n     */\n    function PluggableMap(options) {\n        var _this = _super.call(this) || this;\n        /***\n         * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {PluggableMapOnSignature<void>}\n         */\n        _this.un;\n        var optionsInternal = createOptionsInternal(options);\n        /** @private */\n        _this.boundHandleBrowserEvent_ = _this.handleBrowserEvent.bind(_this);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxTilesLoading_ =\n            options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ =\n            options.pixelRatio !== undefined\n                ? options.pixelRatio\n                : DEVICE_PIXEL_RATIO;\n        /**\n         * @private\n         * @type {*}\n         */\n        _this.postRenderTimeoutHandle_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.animationDelayKey_;\n        /**\n         * @private\n         */\n        _this.animationDelay_ = /** @this {PluggableMap} */ function () {\n            this.animationDelayKey_ = undefined;\n            this.renderFrame_(Date.now());\n        }.bind(_this);\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.coordinateToPixelTransform_ = createTransform();\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.pixelToCoordinateTransform_ = createTransform();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.frameIndex_ = 0;\n        /**\n         * @private\n         * @type {?FrameState}\n         */\n        _this.frameState_ = null;\n        /**\n         * The extent at the previous 'moveend' event.\n         * @private\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.previousExtent_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewPropertyListenerKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewChangeListenerKey_ = null;\n        /**\n         * @private\n         * @type {?Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.layerGroupPropertyListenerKeys_ = null;\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.viewport_ = document.createElement('div');\n        _this.viewport_.className =\n            'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n        _this.viewport_.style.position = 'relative';\n        _this.viewport_.style.overflow = 'hidden';\n        _this.viewport_.style.width = '100%';\n        _this.viewport_.style.height = '100%';\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainer_ = document.createElement('div');\n        _this.overlayContainer_.style.position = 'absolute';\n        _this.overlayContainer_.style.zIndex = '0';\n        _this.overlayContainer_.style.width = '100%';\n        _this.overlayContainer_.style.height = '100%';\n        _this.overlayContainer_.style.pointerEvents = 'none';\n        _this.overlayContainer_.className = 'ol-overlaycontainer';\n        _this.viewport_.appendChild(_this.overlayContainer_);\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainerStopEvent_ = document.createElement('div');\n        _this.overlayContainerStopEvent_.style.position = 'absolute';\n        _this.overlayContainerStopEvent_.style.zIndex = '0';\n        _this.overlayContainerStopEvent_.style.width = '100%';\n        _this.overlayContainerStopEvent_.style.height = '100%';\n        _this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n        _this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n        _this.viewport_.appendChild(_this.overlayContainerStopEvent_);\n        /**\n         * @private\n         * @type {MapBrowserEventHandler}\n         */\n        _this.mapBrowserEventHandler_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.moveTolerance_ = options.moveTolerance;\n        /**\n         * @private\n         * @type {HTMLElement|Document}\n         */\n        _this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n        /**\n         * @private\n         * @type {?Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.keyHandlerKeys_ = null;\n        /**\n         * @type {Collection<import(\"./control/Control.js\").default>}\n         * @protected\n         */\n        _this.controls = optionsInternal.controls || new Collection();\n        /**\n         * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n         * @protected\n         */\n        _this.interactions = optionsInternal.interactions || new Collection();\n        /**\n         * @type {Collection<import(\"./Overlay.js\").default>}\n         * @private\n         */\n        _this.overlays_ = optionsInternal.overlays;\n        /**\n         * A lookup of overlays by id.\n         * @private\n         * @type {Object<string, import(\"./Overlay.js\").default>}\n         */\n        _this.overlayIdIndex_ = {};\n        /**\n         * @type {import(\"./renderer/Map.js\").default}\n         * @private\n         */\n        _this.renderer_ = null;\n        /**\n         * @type {undefined|function(Event): void}\n         * @private\n         */\n        _this.handleResize_;\n        /**\n         * @private\n         * @type {!Array<PostRenderFunction>}\n         */\n        _this.postRenderFunctions_ = [];\n        /**\n         * @private\n         * @type {TileQueue}\n         */\n        _this.tileQueue_ = new TileQueue(_this.getTilePriority.bind(_this), _this.handleTileChange_.bind(_this));\n        _this.addChangeListener(MapProperty.LAYERGROUP, _this.handleLayerGroupChanged_);\n        _this.addChangeListener(MapProperty.VIEW, _this.handleViewChanged_);\n        _this.addChangeListener(MapProperty.SIZE, _this.handleSizeChanged_);\n        _this.addChangeListener(MapProperty.TARGET, _this.handleTargetChanged_);\n        // setProperties will trigger the rendering of the map if the map\n        // is \"defined\" already.\n        _this.setProperties(optionsInternal.values);\n        var map = _this;\n        if (options.view && !(options.view instanceof View)) {\n            options.view.then(function (viewOptions) {\n                map.setView(new View(viewOptions));\n            });\n        }\n        _this.controls.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }.bind(_this));\n        _this.controls.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }.bind(_this));\n        _this.interactions.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }.bind(_this));\n        _this.interactions.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }.bind(_this));\n        _this.overlays_.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            this.addOverlayInternal_(\n            /** @type {import(\"./Overlay.js\").default} */ (event.element));\n        }.bind(_this));\n        _this.overlays_.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            var overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n            var id = overlay.getId();\n            if (id !== undefined) {\n                delete this.overlayIdIndex_[id.toString()];\n            }\n            event.element.setMap(null);\n        }.bind(_this));\n        _this.controls.forEach(\n        /**\n         * @param {import(\"./control/Control.js\").default} control Control.\n         * @this {PluggableMap}\n         */\n        function (control) {\n            control.setMap(this);\n        }.bind(_this));\n        _this.interactions.forEach(\n        /**\n         * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n         * @this {PluggableMap}\n         */\n        function (interaction) {\n            interaction.setMap(this);\n        }.bind(_this));\n        _this.overlays_.forEach(_this.addOverlayInternal_.bind(_this));\n        return _this;\n    }\n    /**\n     * @abstract\n     * @return {import(\"./renderer/Map.js\").default} The map renderer\n     */\n    PluggableMap.prototype.createRenderer = function () {\n        throw new Error('Use a map type that has a createRenderer method');\n    };\n    /**\n     * Add the given control to the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @api\n     */\n    PluggableMap.prototype.addControl = function (control) {\n        this.getControls().push(control);\n    };\n    /**\n     * Add the given interaction to the map. If you want to add an interaction\n     * at another point of the collection use `getInteraction()` and the methods\n     * available on {@link module:ol/Collection~Collection}. This can be used to\n     * stop the event propagation from the handleEvent function. The interactions\n     * get to handle the events in the reverse order of this collection.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n     * @api\n     */\n    PluggableMap.prototype.addInteraction = function (interaction) {\n        this.getInteractions().push(interaction);\n    };\n    /**\n     * Adds the given layer to the top of this map. If you want to add a layer\n     * elsewhere in the stack, use `getLayers()` and the methods available on\n     * {@link module:ol/Collection~Collection}.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @api\n     */\n    PluggableMap.prototype.addLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        layers.push(layer);\n    };\n    /**\n     * Add the given overlay to the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @api\n     */\n    PluggableMap.prototype.addOverlay = function (overlay) {\n        this.getOverlays().push(overlay);\n    };\n    /**\n     * This deals with map's overlay collection changes.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @private\n     */\n    PluggableMap.prototype.addOverlayInternal_ = function (overlay) {\n        var id = overlay.getId();\n        if (id !== undefined) {\n            this.overlayIdIndex_[id.toString()] = overlay;\n        }\n        overlay.setMap(this);\n    };\n    /**\n     *\n     * Clean up.\n     */\n    PluggableMap.prototype.disposeInternal = function () {\n        this.setTarget(null);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Detect features that intersect a pixel on the viewport, and execute a\n     * callback with each intersecting feature. Layers included in the detection can\n     * be configured through the `layerFilter` option in `opt_options`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n     *     called with two arguments. The first argument is one\n     *     {@link module:ol/Feature feature} or\n     *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n     *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n     *     unmanaged layers. To stop detection, callback functions can return a\n     *     truthy value.\n     * @param {AtPixelOptions} [opt_options] Optional options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template T\n     * @api\n     */\n    PluggableMap.prototype.forEachFeatureAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var coordinate = this.getCoordinateFromPixelInternal(pixel);\n        opt_options = opt_options !== undefined ? opt_options : {};\n        var hitTolerance = opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n        var checkWrapped = opt_options.checkWrapped !== false;\n        return this.renderer_.forEachFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, checkWrapped, callback, null, layerFilter, null);\n    };\n    /**\n     * Get all features that intersect a pixel on the viewport.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions} [opt_options] Optional options.\n     * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n     * an empty array if none were found.\n     * @api\n     */\n    PluggableMap.prototype.getFeaturesAtPixel = function (pixel, opt_options) {\n        var features = [];\n        this.forEachFeatureAtPixel(pixel, function (feature) {\n            features.push(feature);\n        }, opt_options);\n        return features;\n    };\n    /**\n     * Detect layers that have a color value at a pixel on the viewport, and\n     * execute a callback with each matching layer. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     *\n     * Note: this may give false positives unless the map layers have had different `className`\n     * properties assigned to them.\n     *\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n     *     Layer callback. This callback will receive two arguments: first is the\n     *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n     *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n     *     that do not currently support this argument. To stop detection, callback\n     *     functions can return a truthy value.\n     * @param {AtPixelOptions} [opt_options] Configuration options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachLayerAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var options = opt_options || {};\n        var hitTolerance = options.hitTolerance !== undefined ? options.hitTolerance : 0;\n        var layerFilter = options.layerFilter || TRUE;\n        return this.renderer_.forEachLayerAtPixel(pixel, this.frameState_, hitTolerance, callback, layerFilter);\n    };\n    /**\n     * Detect if features intersect a pixel on the viewport. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions} [opt_options] Optional options.\n     * @return {boolean} Is there a feature at the given pixel?\n     * @api\n     */\n    PluggableMap.prototype.hasFeatureAtPixel = function (pixel, opt_options) {\n        if (!this.frameState_) {\n            return false;\n        }\n        var coordinate = this.getCoordinateFromPixelInternal(pixel);\n        opt_options = opt_options !== undefined ? opt_options : {};\n        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n        var hitTolerance = opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n        var checkWrapped = opt_options.checkWrapped !== false;\n        return this.renderer_.hasFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, checkWrapped, layerFilter, null);\n    };\n    /**\n     * Returns the coordinate in user projection for a browser event.\n     * @param {MouseEvent} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    PluggableMap.prototype.getEventCoordinate = function (event) {\n        return this.getCoordinateFromPixel(this.getEventPixel(event));\n    };\n    /**\n     * Returns the coordinate in view projection for a browser event.\n     * @param {MouseEvent} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     */\n    PluggableMap.prototype.getEventCoordinateInternal = function (event) {\n        return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n    };\n    /**\n     * Returns the map pixel position for a browser event relative to the viewport.\n     * @param {UIEvent} event Event.\n     * @return {import(\"./pixel.js\").Pixel} Pixel.\n     * @api\n     */\n    PluggableMap.prototype.getEventPixel = function (event) {\n        var viewportPosition = this.viewport_.getBoundingClientRect();\n        var eventPosition = \n        //FIXME Are we really calling this with a TouchEvent anywhere?\n        'changedTouches' in event\n            ? /** @type {TouchEvent} */ (event).changedTouches[0]\n            : /** @type {MouseEvent} */ (event);\n        return [\n            eventPosition.clientX - viewportPosition.left,\n            eventPosition.clientY - viewportPosition.top,\n        ];\n    };\n    /**\n     * Get the target in which this map is rendered.\n     * Note that this returns what is entered as an option or in setTarget:\n     * if that was an element, it returns an element; if a string, it returns that.\n     * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n     *     map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getTarget = function () {\n        return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n    };\n    /**\n     * Get the DOM element into which this map is rendered. In contrast to\n     * `getTarget` this method always return an `Element`, or `null` if the\n     * map has no target.\n     * @return {HTMLElement} The element that the map is rendered in.\n     * @api\n     */\n    PluggableMap.prototype.getTargetElement = function () {\n        var target = this.getTarget();\n        if (target !== undefined) {\n            return typeof target === 'string'\n                ? document.getElementById(target)\n                : target;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * user projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     * @api\n     */\n    PluggableMap.prototype.getCoordinateFromPixel = function (pixel) {\n        return toUserCoordinate(this.getCoordinateFromPixelInternal(pixel), this.getView().getProjection());\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * map view projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     */\n    PluggableMap.prototype.getCoordinateFromPixelInternal = function (pixel) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n        }\n    };\n    /**\n     * Get the map controls. Modifying this collection changes the controls\n     * associated with the map.\n     * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n     * @api\n     */\n    PluggableMap.prototype.getControls = function () {\n        return this.controls;\n    };\n    /**\n     * Get the map overlays. Modifying this collection changes the overlays\n     * associated with the map.\n     * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n     * @api\n     */\n    PluggableMap.prototype.getOverlays = function () {\n        return this.overlays_;\n    };\n    /**\n     * Get an overlay by its identifier (the value returned by overlay.getId()).\n     * Note that the index treats string and numeric identifiers as the same. So\n     * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n     * @param {string|number} id Overlay identifier.\n     * @return {import(\"./Overlay.js\").default} Overlay.\n     * @api\n     */\n    PluggableMap.prototype.getOverlayById = function (id) {\n        var overlay = this.overlayIdIndex_[id.toString()];\n        return overlay !== undefined ? overlay : null;\n    };\n    /**\n     * Get the map interactions. Modifying this collection changes the interactions\n     * associated with the map.\n     *\n     * Interactions are used for e.g. pan, zoom and rotate.\n     * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n     * @api\n     */\n    PluggableMap.prototype.getInteractions = function () {\n        return this.interactions;\n    };\n    /**\n     * Get the layergroup associated with this map.\n     * @return {LayerGroup} A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getLayerGroup = function () {\n        return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n    };\n    /**\n     * Clear any existing layers and add layers to the map.\n     * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n     * @api\n     */\n    PluggableMap.prototype.setLayers = function (layers) {\n        var group = this.getLayerGroup();\n        if (layers instanceof Collection) {\n            group.setLayers(layers);\n            return;\n        }\n        var collection = group.getLayers();\n        collection.clear();\n        collection.extend(layers);\n    };\n    /**\n     * Get the collection of layers associated with this map.\n     * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n     * @api\n     */\n    PluggableMap.prototype.getLayers = function () {\n        var layers = this.getLayerGroup().getLayers();\n        return layers;\n    };\n    /**\n     * @return {boolean} Layers have sources that are still loading.\n     */\n    PluggableMap.prototype.getLoading = function () {\n        var layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layer = layerStatesArray[i].layer;\n            var source = /** @type {import(\"./layer/Layer.js\").default} */ (layer).getSource();\n            if (source && source.loading) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the user\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.getPixelFromCoordinate = function (coordinate) {\n        var viewCoordinate = fromUserCoordinate(coordinate, this.getView().getProjection());\n        return this.getPixelFromCoordinateInternal(viewCoordinate);\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the map view\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     */\n    PluggableMap.prototype.getPixelFromCoordinateInternal = function (coordinate) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n        }\n    };\n    /**\n     * Get the map renderer.\n     * @return {import(\"./renderer/Map.js\").default} Renderer\n     */\n    PluggableMap.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Get the size of this map.\n     * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getSize = function () {\n        return /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE));\n    };\n    /**\n     * Get the view associated with this map. A view manages properties such as\n     * center and resolution.\n     * @return {View} The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getView = function () {\n        return /** @type {View} */ (this.get(MapProperty.VIEW));\n    };\n    /**\n     * Get the element that serves as the map viewport.\n     * @return {HTMLElement} Viewport.\n     * @api\n     */\n    PluggableMap.prototype.getViewport = function () {\n        return this.viewport_;\n    };\n    /**\n     * Get the element that serves as the container for overlays.  Elements added to\n     * this container will let mousedown and touchstart events through to the map,\n     * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n     * events.\n     * @return {!HTMLElement} The map's overlay container.\n     */\n    PluggableMap.prototype.getOverlayContainer = function () {\n        return this.overlayContainer_;\n    };\n    /**\n     * Get the element that serves as a container for overlays that don't allow\n     * event propagation. Elements added to this container won't let mousedown and\n     * touchstart events through to the map, so clicks and gestures on an overlay\n     * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @return {!HTMLElement} The map's overlay container that stops events.\n     */\n    PluggableMap.prototype.getOverlayContainerStopEvent = function () {\n        return this.overlayContainerStopEvent_;\n    };\n    /**\n     * @return {!Document} The document where the map is displayed.\n     */\n    PluggableMap.prototype.getOwnerDocument = function () {\n        var targetElement = this.getTargetElement();\n        return targetElement ? targetElement.ownerDocument : document;\n    };\n    /**\n     * @param {import(\"./Tile.js\").default} tile Tile.\n     * @param {string} tileSourceKey Tile source key.\n     * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n     * @param {number} tileResolution Tile resolution.\n     * @return {number} Tile priority.\n     */\n    PluggableMap.prototype.getTilePriority = function (tile, tileSourceKey, tileCenter, tileResolution) {\n        return getTilePriority(this.frameState_, tile, tileSourceKey, tileCenter, tileResolution);\n    };\n    /**\n     * @param {UIEvent} browserEvent Browser event.\n     * @param {string} [opt_type] Type.\n     */\n    PluggableMap.prototype.handleBrowserEvent = function (browserEvent, opt_type) {\n        var type = opt_type || browserEvent.type;\n        var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n        this.handleMapBrowserEvent(mapBrowserEvent);\n    };\n    /**\n     * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n     */\n    PluggableMap.prototype.handleMapBrowserEvent = function (mapBrowserEvent) {\n        if (!this.frameState_) {\n            // With no view defined, we cannot translate pixels into geographical\n            // coordinates so interactions cannot be used.\n            return;\n        }\n        var originalEvent = /** @type {PointerEvent} */ (mapBrowserEvent.originalEvent);\n        var eventType = originalEvent.type;\n        if (eventType === PointerEventType.POINTERDOWN ||\n            eventType === EventType.WHEEL ||\n            eventType === EventType.KEYDOWN) {\n            var doc = this.getOwnerDocument();\n            var rootNode = this.viewport_.getRootNode\n                ? this.viewport_.getRootNode()\n                : doc;\n            var target = /** @type {Node} */ (originalEvent.target);\n            if (\n            // Abort if the target is a child of the container for elements whose events are not meant\n            // to be handled by map interactions.\n            this.overlayContainerStopEvent_.contains(target) ||\n                // Abort if the event target is a child of the container that is no longer in the page.\n                // It's possible for the target to no longer be in the page if it has been removed in an\n                // event listener, this might happen in a Control that recreates it's content based on\n                // user interaction either manually or via a render in something like https://reactjs.org/\n                !(rootNode === doc ? doc.documentElement : rootNode).contains(target)) {\n                return;\n            }\n        }\n        mapBrowserEvent.frameState = this.frameState_;\n        if (this.dispatchEvent(mapBrowserEvent) !== false) {\n            var interactionsArray = this.getInteractions().getArray().slice();\n            for (var i = interactionsArray.length - 1; i >= 0; i--) {\n                var interaction = interactionsArray[i];\n                if (interaction.getMap() !== this ||\n                    !interaction.getActive() ||\n                    !this.getTargetElement()) {\n                    continue;\n                }\n                var cont = interaction.handleEvent(mapBrowserEvent);\n                if (!cont || mapBrowserEvent.propagationStopped) {\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * @protected\n     */\n    PluggableMap.prototype.handlePostRender = function () {\n        var frameState = this.frameState_;\n        // Manage the tile queue\n        // Image loads are expensive and a limited resource, so try to use them\n        // efficiently:\n        // * When the view is static we allow a large number of parallel tile loads\n        //   to complete the frame as quickly as possible.\n        // * When animating or interacting, image loads can cause janks, so we reduce\n        //   the maximum number of loads per frame and limit the number of parallel\n        //   tile loads to remain reactive to view changes and to reduce the chance of\n        //   loading tiles that will quickly disappear from view.\n        var tileQueue = this.tileQueue_;\n        if (!tileQueue.isEmpty()) {\n            var maxTotalLoading = this.maxTilesLoading_;\n            var maxNewLoads = maxTotalLoading;\n            if (frameState) {\n                var hints = frameState.viewHints;\n                if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n                    var lowOnFrameBudget = Date.now() - frameState.time > 8;\n                    maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n                    maxNewLoads = lowOnFrameBudget ? 0 : 2;\n                }\n            }\n            if (tileQueue.getTilesLoading() < maxTotalLoading) {\n                tileQueue.reprioritize(); // FIXME only call if view has changed\n                tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n            }\n        }\n        if (frameState &&\n            this.hasListener(RenderEventType.RENDERCOMPLETE) &&\n            !frameState.animate &&\n            !this.tileQueue_.getTilesLoading() &&\n            !this.getLoading()) {\n            this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n        }\n        var postRenderFunctions = this.postRenderFunctions_;\n        for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n            postRenderFunctions[i](this, frameState);\n        }\n        postRenderFunctions.length = 0;\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleSizeChanged_ = function () {\n        if (this.getView() && !this.getView().getAnimating()) {\n            this.getView().resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTargetChanged_ = function () {\n        // target may be undefined, null, a string or an Element.\n        // If it's a string we convert it to an Element before proceeding.\n        // If it's not now an Element we remove the viewport from the DOM.\n        // If it's an Element we append the viewport element to it.\n        var targetElement;\n        if (this.getTarget()) {\n            targetElement = this.getTargetElement();\n        }\n        if (this.mapBrowserEventHandler_) {\n            for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n                unlistenByKey(this.keyHandlerKeys_[i]);\n            }\n            this.keyHandlerKeys_ = null;\n            this.viewport_.removeEventListener(EventType.CONTEXTMENU, this.boundHandleBrowserEvent_);\n            this.viewport_.removeEventListener(EventType.WHEEL, this.boundHandleBrowserEvent_);\n            if (this.handleResize_ !== undefined) {\n                removeEventListener(EventType.RESIZE, this.handleResize_, false);\n                this.handleResize_ = undefined;\n            }\n            this.mapBrowserEventHandler_.dispose();\n            this.mapBrowserEventHandler_ = null;\n            removeNode(this.viewport_);\n        }\n        if (!targetElement) {\n            if (this.renderer_) {\n                clearTimeout(this.postRenderTimeoutHandle_);\n                this.postRenderTimeoutHandle_ = undefined;\n                this.postRenderFunctions_.length = 0;\n                this.renderer_.dispose();\n                this.renderer_ = null;\n            }\n            if (this.animationDelayKey_) {\n                cancelAnimationFrame(this.animationDelayKey_);\n                this.animationDelayKey_ = undefined;\n            }\n        }\n        else {\n            targetElement.appendChild(this.viewport_);\n            if (!this.renderer_) {\n                this.renderer_ = this.createRenderer();\n            }\n            this.mapBrowserEventHandler_ = new MapBrowserEventHandler(this, this.moveTolerance_);\n            for (var key in MapBrowserEventType) {\n                this.mapBrowserEventHandler_.addEventListener(MapBrowserEventType[key], this.handleMapBrowserEvent.bind(this));\n            }\n            this.viewport_.addEventListener(EventType.CONTEXTMENU, this.boundHandleBrowserEvent_, false);\n            this.viewport_.addEventListener(EventType.WHEEL, this.boundHandleBrowserEvent_, PASSIVE_EVENT_LISTENERS ? { passive: false } : false);\n            var keyboardEventTarget = !this.keyboardEventTarget_\n                ? targetElement\n                : this.keyboardEventTarget_;\n            this.keyHandlerKeys_ = [\n                listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n                listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this),\n            ];\n            if (!this.handleResize_) {\n                this.handleResize_ = this.updateSize.bind(this);\n                window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n            }\n        }\n        this.updateSize();\n        // updateSize calls setSize, so no need to call this.render\n        // ourselves here.\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTileChange_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewPropertyChanged_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewChanged_ = function () {\n        if (this.viewPropertyListenerKey_) {\n            unlistenByKey(this.viewPropertyListenerKey_);\n            this.viewPropertyListenerKey_ = null;\n        }\n        if (this.viewChangeListenerKey_) {\n            unlistenByKey(this.viewChangeListenerKey_);\n            this.viewChangeListenerKey_ = null;\n        }\n        var view = this.getView();\n        if (view) {\n            this.updateViewportSize_();\n            this.viewPropertyListenerKey_ = listen(view, ObjectEventType.PROPERTYCHANGE, this.handleViewPropertyChanged_, this);\n            this.viewChangeListenerKey_ = listen(view, EventType.CHANGE, this.handleViewPropertyChanged_, this);\n            view.resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleLayerGroupChanged_ = function () {\n        if (this.layerGroupPropertyListenerKeys_) {\n            this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n            this.layerGroupPropertyListenerKeys_ = null;\n        }\n        var layerGroup = this.getLayerGroup();\n        if (layerGroup) {\n            this.layerGroupPropertyListenerKeys_ = [\n                listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n                listen(layerGroup, EventType.CHANGE, this.render, this),\n            ];\n        }\n        this.render();\n    };\n    /**\n     * @return {boolean} Is rendered.\n     */\n    PluggableMap.prototype.isRendered = function () {\n        return !!this.frameState_;\n    };\n    /**\n     * Requests an immediate render in a synchronous manner.\n     * @api\n     */\n    PluggableMap.prototype.renderSync = function () {\n        if (this.animationDelayKey_) {\n            cancelAnimationFrame(this.animationDelayKey_);\n        }\n        this.animationDelay_();\n    };\n    /**\n     * Redraws all text after new fonts have loaded\n     */\n    PluggableMap.prototype.redrawText = function () {\n        var layerStates = this.getLayerGroup().getLayerStatesArray();\n        for (var i = 0, ii = layerStates.length; i < ii; ++i) {\n            var layer = layerStates[i].layer;\n            if (layer.hasRenderer()) {\n                layer.getRenderer().handleFontsChanged();\n            }\n        }\n    };\n    /**\n     * Request a map rendering (at the next animation frame).\n     * @api\n     */\n    PluggableMap.prototype.render = function () {\n        if (this.renderer_ && this.animationDelayKey_ === undefined) {\n            this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n        }\n    };\n    /**\n     * Remove the given control from the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n     *     if the control was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeControl = function (control) {\n        return this.getControls().remove(control);\n    };\n    /**\n     * Remove the given interaction from the map.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n     * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n     *     undefined if the interaction was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeInteraction = function (interaction) {\n        return this.getInteractions().remove(interaction);\n    };\n    /**\n     * Removes the given layer from the map.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n     *     layer was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        return layers.remove(layer);\n    };\n    /**\n     * Remove the given overlay from the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n     *     if the overlay was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeOverlay = function (overlay) {\n        return this.getOverlays().remove(overlay);\n    };\n    /**\n     * @param {number} time Time.\n     * @private\n     */\n    PluggableMap.prototype.renderFrame_ = function (time) {\n        var _this = this;\n        var size = this.getSize();\n        var view = this.getView();\n        var previousFrameState = this.frameState_;\n        /** @type {?FrameState} */\n        var frameState = null;\n        if (size !== undefined && hasArea(size) && view && view.isDef()) {\n            var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n            var viewState = view.getState();\n            frameState = {\n                animate: false,\n                coordinateToPixelTransform: this.coordinateToPixelTransform_,\n                declutterTree: null,\n                extent: getForViewAndSize(viewState.center, viewState.resolution, viewState.rotation, size),\n                index: this.frameIndex_++,\n                layerIndex: 0,\n                layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n                pixelRatio: this.pixelRatio_,\n                pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n                postRenderFunctions: [],\n                size: size,\n                tileQueue: this.tileQueue_,\n                time: time,\n                usedTiles: {},\n                viewState: viewState,\n                viewHints: viewHints,\n                wantedTiles: {},\n            };\n            if (viewState.nextCenter && viewState.nextResolution) {\n                var rotation = isNaN(viewState.nextRotation)\n                    ? viewState.rotation\n                    : viewState.nextRotation;\n                frameState.nextExtent = getForViewAndSize(viewState.nextCenter, viewState.nextResolution, rotation, size);\n            }\n        }\n        this.frameState_ = frameState;\n        this.renderer_.renderFrame(frameState);\n        if (frameState) {\n            if (frameState.animate) {\n                this.render();\n            }\n            Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n            if (previousFrameState) {\n                var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                        !equals(frameState.extent, this.previousExtent_));\n                if (moveStart) {\n                    this.dispatchEvent(new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n                    this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n                }\n            }\n            var idle = this.previousExtent_ &&\n                !frameState.viewHints[ViewHint.ANIMATING] &&\n                !frameState.viewHints[ViewHint.INTERACTING] &&\n                !equals(frameState.extent, this.previousExtent_);\n            if (idle) {\n                this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n                clone(frameState.extent, this.previousExtent_);\n            }\n        }\n        this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n        if (!this.postRenderTimeoutHandle_) {\n            this.postRenderTimeoutHandle_ = setTimeout(function () {\n                _this.postRenderTimeoutHandle_ = undefined;\n                _this.handlePostRender();\n            }, 0);\n        }\n    };\n    /**\n     * Sets the layergroup of this map.\n     * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setLayerGroup = function (layerGroup) {\n        this.set(MapProperty.LAYERGROUP, layerGroup);\n    };\n    /**\n     * Set the size of this map.\n     * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setSize = function (size) {\n        this.set(MapProperty.SIZE, size);\n    };\n    /**\n     * Set the target element to render this map into.\n     * @param {HTMLElement|string} [target] The Element or id of the Element\n     *     that the map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setTarget = function (target) {\n        this.set(MapProperty.TARGET, target);\n    };\n    /**\n     * Set the view for this map.\n     * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n     * It is also possible to pass a promise that resolves to options for constructing a view.  This\n     * alternative allows view properties to be resolved by sources or other components that load\n     * view-related metadata.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setView = function (view) {\n        if (!view || view instanceof View) {\n            this.set(MapProperty.VIEW, view);\n            return;\n        }\n        this.set(MapProperty.VIEW, new View());\n        var map = this;\n        view.then(function (viewOptions) {\n            map.setView(new View(viewOptions));\n        });\n    };\n    /**\n     * Force a recalculation of the map viewport size.  This should be called when\n     * third-party code changes the size of the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.updateSize = function () {\n        var targetElement = this.getTargetElement();\n        var size = undefined;\n        if (targetElement) {\n            var computedStyle = getComputedStyle(targetElement);\n            var width = targetElement.offsetWidth -\n                parseFloat(computedStyle['borderLeftWidth']) -\n                parseFloat(computedStyle['paddingLeft']) -\n                parseFloat(computedStyle['paddingRight']) -\n                parseFloat(computedStyle['borderRightWidth']);\n            var height = targetElement.offsetHeight -\n                parseFloat(computedStyle['borderTopWidth']) -\n                parseFloat(computedStyle['paddingTop']) -\n                parseFloat(computedStyle['paddingBottom']) -\n                parseFloat(computedStyle['borderBottomWidth']);\n            if (!isNaN(width) && !isNaN(height)) {\n                size = [width, height];\n                if (!hasArea(size) &&\n                    !!(targetElement.offsetWidth ||\n                        targetElement.offsetHeight ||\n                        targetElement.getClientRects().length)) {\n                    // eslint-disable-next-line\n                    console.warn(\"No map visible because the map container's width or height are 0.\");\n                }\n            }\n        }\n        this.setSize(size);\n        this.updateViewportSize_();\n    };\n    /**\n     * Recomputes the viewport size and save it on the view object (if any)\n     * @private\n     */\n    PluggableMap.prototype.updateViewportSize_ = function () {\n        var view = this.getView();\n        if (view) {\n            var size = undefined;\n            var computedStyle = getComputedStyle(this.viewport_);\n            if (computedStyle.width && computedStyle.height) {\n                size = [\n                    parseInt(computedStyle.width, 10),\n                    parseInt(computedStyle.height, 10),\n                ];\n            }\n            view.setViewportSize(size);\n        }\n    };\n    return PluggableMap;\n}(BaseObject));\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n    /**\n     * @type {HTMLElement|Document}\n     */\n    var keyboardEventTarget = null;\n    if (options.keyboardEventTarget !== undefined) {\n        keyboardEventTarget =\n            typeof options.keyboardEventTarget === 'string'\n                ? document.getElementById(options.keyboardEventTarget)\n                : options.keyboardEventTarget;\n    }\n    /**\n     * @type {Object<string, *>}\n     */\n    var values = {};\n    var layerGroup = options.layers &&\n        typeof ( /** @type {?} */(options.layers).getLayers) === 'function'\n        ? /** @type {LayerGroup} */ (options.layers)\n        : new LayerGroup({ layers: /** @type {Collection} */ (options.layers) });\n    values[MapProperty.LAYERGROUP] = layerGroup;\n    values[MapProperty.TARGET] = options.target;\n    values[MapProperty.VIEW] =\n        options.view instanceof View ? options.view : new View();\n    var controls;\n    if (options.controls !== undefined) {\n        if (Array.isArray(options.controls)) {\n            controls = new Collection(options.controls.slice());\n        }\n        else {\n            assert(typeof ( /** @type {?} */(options.controls).getArray) === 'function', 47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n            controls = /** @type {Collection} */ (options.controls);\n        }\n    }\n    var interactions;\n    if (options.interactions !== undefined) {\n        if (Array.isArray(options.interactions)) {\n            interactions = new Collection(options.interactions.slice());\n        }\n        else {\n            assert(typeof ( /** @type {?} */(options.interactions).getArray) ===\n                'function', 48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n            interactions = /** @type {Collection} */ (options.interactions);\n        }\n    }\n    var overlays;\n    if (options.overlays !== undefined) {\n        if (Array.isArray(options.overlays)) {\n            overlays = new Collection(options.overlays.slice());\n        }\n        else {\n            assert(typeof ( /** @type {?} */(options.overlays).getArray) === 'function', 49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n            overlays = options.overlays;\n        }\n    }\n    else {\n        overlays = new Collection();\n    }\n    return {\n        controls: controls,\n        interactions: interactions,\n        keyboardEventTarget: keyboardEventTarget,\n        overlays: overlays,\n        values: values,\n    };\n}\nexport default PluggableMap;\n//# sourceMappingURL=PluggableMap.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport { VOID } from '../functions.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { removeNode } from '../dom.js';\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = /** @class */ (function (_super) {\n    __extends(Control, _super);\n    /**\n     * @param {Options} options Control options.\n     */\n    function Control(options) {\n        var _this = _super.call(this) || this;\n        var element = options.element;\n        if (element && !options.target && !element.style.pointerEvents) {\n            element.style.pointerEvents = 'auto';\n        }\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.element = element ? element : null;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.target_ = null;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @protected\n         * @type {!Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.listenerKeys = [];\n        if (options.render) {\n            _this.render = options.render;\n        }\n        if (options.target) {\n            _this.setTarget(options.target);\n        }\n        return _this;\n    }\n    /**\n     * Clean up.\n     */\n    Control.prototype.disposeInternal = function () {\n        removeNode(this.element);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the map associated with this control.\n     * @return {import(\"../PluggableMap.js\").default|undefined} Map.\n     * @api\n     */\n    Control.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Remove the control from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} [map] Map.\n     * @api\n     */\n    Control.prototype.setMap = function (map) {\n        if (this.map_) {\n            removeNode(this.element);\n        }\n        for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n            unlistenByKey(this.listenerKeys[i]);\n        }\n        this.listenerKeys.length = 0;\n        this.map_ = map;\n        if (this.map_) {\n            var target = this.target_\n                ? this.target_\n                : map.getOverlayContainerStopEvent();\n            target.appendChild(this.element);\n            if (this.render !== VOID) {\n                this.listenerKeys.push(listen(map, MapEventType.POSTRENDER, this.render, this));\n            }\n            map.render();\n        }\n    };\n    /**\n     * Renders the control.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @api\n     */\n    Control.prototype.render = function (mapEvent) { };\n    /**\n     * This function is used to set a target element for the control. It has no\n     * effect if it is called after the control has been added to the map (i.e.\n     * after `setMap` is called on the control). If no `target` is set in the\n     * options passed to the control constructor and if `setTarget` is not called\n     * then the control is added to the map's overlay container.\n     * @param {HTMLElement|string} target Target.\n     * @api\n     */\n    Control.prototype.setTarget = function (target) {\n        this.target_ =\n            typeof target === 'string' ? document.getElementById(target) : target;\n    };\n    return Control;\n}(BaseObject));\nexport default Control;\n//# sourceMappingURL=Control.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { equals } from '../array.js';\nimport { inView } from '../layer/Layer.js';\nimport { removeChildren, replaceNode } from '../dom.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = /** @class */ (function (_super) {\n    __extends(Attribution, _super);\n    /**\n     * @param {Options} [opt_options] Attribution options.\n     */\n    function Attribution(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render,\n            target: options.target,\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.ulElement_ = document.createElement('ul');\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsed_ =\n            options.collapsed !== undefined ? options.collapsed : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.userCollapsed_ = _this.collapsed_;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overrideCollapsible_ = options.collapsible !== undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsible_ =\n            options.collapsible !== undefined ? options.collapsible : true;\n        if (!_this.collapsible_) {\n            _this.collapsed_ = false;\n        }\n        var className = options.className !== undefined ? options.className : 'ol-attribution';\n        var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n        var expandClassName = options.expandClassName !== undefined\n            ? options.expandClassName\n            : className + '-expand';\n        var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n        var collapseClassName = options.collapseClassName !== undefined\n            ? options.collapseClassName\n            : className + '-collpase';\n        if (typeof collapseLabel === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.collapseLabel_ = document.createElement('span');\n            _this.collapseLabel_.textContent = collapseLabel;\n            _this.collapseLabel_.className = collapseClassName;\n        }\n        else {\n            _this.collapseLabel_ = collapseLabel;\n        }\n        var label = options.label !== undefined ? options.label : 'i';\n        if (typeof label === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.label_ = document.createElement('span');\n            _this.label_.textContent = label;\n            _this.label_.className = expandClassName;\n        }\n        else {\n            _this.label_ = label;\n        }\n        var activeLabel = _this.collapsible_ && !_this.collapsed_ ? _this.collapseLabel_ : _this.label_;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.toggleButton_ = document.createElement('button');\n        _this.toggleButton_.setAttribute('type', 'button');\n        _this.toggleButton_.setAttribute('aria-expanded', String(!_this.collapsed_));\n        _this.toggleButton_.title = tipLabel;\n        _this.toggleButton_.appendChild(activeLabel);\n        _this.toggleButton_.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n        var cssClasses = className +\n            ' ' +\n            CLASS_UNSELECTABLE +\n            ' ' +\n            CLASS_CONTROL +\n            (_this.collapsed_ && _this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n            (_this.collapsible_ ? '' : ' ol-uncollapsible');\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(_this.toggleButton_);\n        element.appendChild(_this.ulElement_);\n        /**\n         * A list of currently rendered resolutions.\n         * @type {Array<string>}\n         * @private\n         */\n        _this.renderedAttributions_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * Collect a list of visible attributions and set the collapsible state.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {Array<string>} Attributions.\n     * @private\n     */\n    Attribution.prototype.collectSourceAttributions_ = function (frameState) {\n        /**\n         * Used to determine if an attribution already exists.\n         * @type {!Object<string, boolean>}\n         */\n        var lookup = {};\n        /**\n         * A list of visible attributions.\n         * @type {Array<string>}\n         */\n        var visibleAttributions = [];\n        var collapsible = true;\n        var layerStatesArray = frameState.layerStatesArray;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            if (!inView(layerState, frameState.viewState)) {\n                continue;\n            }\n            var source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n            if (!source) {\n                continue;\n            }\n            var attributionGetter = source.getAttributions();\n            if (!attributionGetter) {\n                continue;\n            }\n            var attributions = attributionGetter(frameState);\n            if (!attributions) {\n                continue;\n            }\n            collapsible =\n                collapsible && source.getAttributionsCollapsible() !== false;\n            if (Array.isArray(attributions)) {\n                for (var j = 0, jj = attributions.length; j < jj; ++j) {\n                    if (!(attributions[j] in lookup)) {\n                        visibleAttributions.push(attributions[j]);\n                        lookup[attributions[j]] = true;\n                    }\n                }\n            }\n            else {\n                if (!(attributions in lookup)) {\n                    visibleAttributions.push(attributions);\n                    lookup[attributions] = true;\n                }\n            }\n        }\n        if (!this.overrideCollapsible_) {\n            this.setCollapsible(collapsible);\n        }\n        return visibleAttributions;\n    };\n    /**\n     * @private\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    Attribution.prototype.updateElement_ = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        var attributions = this.collectSourceAttributions_(frameState);\n        var visible = attributions.length > 0;\n        if (this.renderedVisible_ != visible) {\n            this.element.style.display = visible ? '' : 'none';\n            this.renderedVisible_ = visible;\n        }\n        if (equals(attributions, this.renderedAttributions_)) {\n            return;\n        }\n        removeChildren(this.ulElement_);\n        // append the attributions\n        for (var i = 0, ii = attributions.length; i < ii; ++i) {\n            var element = document.createElement('li');\n            element.innerHTML = attributions[i];\n            this.ulElement_.appendChild(element);\n        }\n        this.renderedAttributions_ = attributions;\n    };\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Attribution.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleToggle_();\n        this.userCollapsed_ = this.collapsed_;\n    };\n    /**\n     * @private\n     */\n    Attribution.prototype.handleToggle_ = function () {\n        this.element.classList.toggle(CLASS_COLLAPSED);\n        if (this.collapsed_) {\n            replaceNode(this.collapseLabel_, this.label_);\n        }\n        else {\n            replaceNode(this.label_, this.collapseLabel_);\n        }\n        this.collapsed_ = !this.collapsed_;\n        this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    };\n    /**\n     * Return `true` if the attribution is collapsible, `false` otherwise.\n     * @return {boolean} True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.getCollapsible = function () {\n        return this.collapsible_;\n    };\n    /**\n     * Set whether the attribution should be collapsible.\n     * @param {boolean} collapsible True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.setCollapsible = function (collapsible) {\n        if (this.collapsible_ === collapsible) {\n            return;\n        }\n        this.collapsible_ = collapsible;\n        this.element.classList.toggle('ol-uncollapsible');\n        if (this.userCollapsed_) {\n            this.handleToggle_();\n        }\n    };\n    /**\n     * Collapse or expand the attribution according to the passed parameter. Will\n     * not do anything if the attribution isn't collapsible or if the current\n     * collapsed state is already the one requested.\n     * @param {boolean} collapsed True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.setCollapsed = function (collapsed) {\n        this.userCollapsed_ = collapsed;\n        if (!this.collapsible_ || this.collapsed_ === collapsed) {\n            return;\n        }\n        this.handleToggle_();\n    };\n    /**\n     * Return `true` when the attribution is currently collapsed or `false`\n     * otherwise.\n     * @return {boolean} True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.getCollapsed = function () {\n        return this.collapsed_;\n    };\n    /**\n     * Update the attribution element.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @override\n     */\n    Attribution.prototype.render = function (mapEvent) {\n        this.updateElement_(mapEvent.frameState);\n    };\n    return Attribution;\n}(Control));\nexport default Attribution;\n//# sourceMappingURL=Attribution.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = /** @class */ (function (_super) {\n    __extends(Rotate, _super);\n    /**\n     * @param {Options} [opt_options] Rotate options.\n     */\n    function Rotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render,\n            target: options.target,\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-rotate';\n        var label = options.label !== undefined ? options.label : '\\u21E7';\n        var compassClassName = options.compassClassName !== undefined\n            ? options.compassClassName\n            : 'ol-compass';\n        /**\n         * @type {HTMLElement}\n         * @private\n         */\n        _this.label_ = null;\n        if (typeof label === 'string') {\n            _this.label_ = document.createElement('span');\n            _this.label_.className = compassClassName;\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n            _this.label_.classList.add(compassClassName);\n        }\n        var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n        var button = document.createElement('button');\n        button.className = className + '-reset';\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(_this.label_);\n        button.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(button);\n        _this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        if (_this.autoHide_) {\n            _this.element.classList.add(CLASS_HIDDEN);\n        }\n        return _this;\n    }\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Rotate.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        if (this.callResetNorth_ !== undefined) {\n            this.callResetNorth_();\n        }\n        else {\n            this.resetNorth_();\n        }\n    };\n    /**\n     * @private\n     */\n    Rotate.prototype.resetNorth_ = function () {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        var rotation = view.getRotation();\n        if (rotation !== undefined) {\n            if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n                view.animate({\n                    rotation: 0,\n                    duration: this.duration_,\n                    easing: easeOut,\n                });\n            }\n            else {\n                view.setRotation(0);\n            }\n        }\n    };\n    /**\n     * Update the rotate control element.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @override\n     */\n    Rotate.prototype.render = function (mapEvent) {\n        var frameState = mapEvent.frameState;\n        if (!frameState) {\n            return;\n        }\n        var rotation = frameState.viewState.rotation;\n        if (rotation != this.rotation_) {\n            var transform = 'rotate(' + rotation + 'rad)';\n            if (this.autoHide_) {\n                var contains = this.element.classList.contains(CLASS_HIDDEN);\n                if (!contains && rotation === 0) {\n                    this.element.classList.add(CLASS_HIDDEN);\n                }\n                else if (contains && rotation !== 0) {\n                    this.element.classList.remove(CLASS_HIDDEN);\n                }\n            }\n            this.label_.style.transform = transform;\n        }\n        this.rotation_ = rotation;\n    };\n    return Rotate;\n}(Control));\nexport default Rotate;\n//# sourceMappingURL=Rotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = /** @class */ (function (_super) {\n    __extends(Zoom, _super);\n    /**\n     * @param {Options} [opt_options] Zoom options.\n     */\n    function Zoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            target: options.target,\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-zoom';\n        var delta = options.delta !== undefined ? options.delta : 1;\n        var zoomInClassName = options.zoomInClassName !== undefined\n            ? options.zoomInClassName\n            : className + '-in';\n        var zoomOutClassName = options.zoomOutClassName !== undefined\n            ? options.zoomOutClassName\n            : className + '-out';\n        var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n        var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n        var zoomInTipLabel = options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n        var zoomOutTipLabel = options.zoomOutTipLabel !== undefined\n            ? options.zoomOutTipLabel\n            : 'Zoom out';\n        var inElement = document.createElement('button');\n        inElement.className = zoomInClassName;\n        inElement.setAttribute('type', 'button');\n        inElement.title = zoomInTipLabel;\n        inElement.appendChild(typeof zoomInLabel === 'string'\n            ? document.createTextNode(zoomInLabel)\n            : zoomInLabel);\n        inElement.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this, delta), false);\n        var outElement = document.createElement('button');\n        outElement.className = zoomOutClassName;\n        outElement.setAttribute('type', 'button');\n        outElement.title = zoomOutTipLabel;\n        outElement.appendChild(typeof zoomOutLabel === 'string'\n            ? document.createTextNode(zoomOutLabel)\n            : zoomOutLabel);\n        outElement.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this, -delta), false);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(inElement);\n        element.appendChild(outElement);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @param {number} delta Zoom delta.\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Zoom.prototype.handleClick_ = function (delta, event) {\n        event.preventDefault();\n        this.zoomByDelta_(delta);\n    };\n    /**\n     * @param {number} delta Zoom delta.\n     * @private\n     */\n    Zoom.prototype.zoomByDelta_ = function (delta) {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        var currentZoom = view.getZoom();\n        if (currentZoom !== undefined) {\n            var newZoom = view.getConstrainedZoom(currentZoom + delta);\n            if (this.duration_ > 0) {\n                if (view.getAnimating()) {\n                    view.cancelAnimations();\n                }\n                view.animate({\n                    zoom: newZoom,\n                    duration: this.duration_,\n                    easing: easeOut,\n                });\n            }\n            else {\n                view.setZoom(newZoom);\n            }\n        }\n    };\n    return Zoom;\n}(Control));\nexport default Zoom;\n//# sourceMappingURL=Zoom.js.map","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\nexport { default as Attribution } from './control/Attribution.js';\nexport { default as Control } from './control/Control.js';\nexport { default as FullScreen } from './control/FullScreen.js';\nexport { default as MousePosition } from './control/MousePosition.js';\nexport { default as OverviewMap } from './control/OverviewMap.js';\nexport { default as Rotate } from './control/Rotate.js';\nexport { default as ScaleLine } from './control/ScaleLine.js';\nexport { default as Zoom } from './control/Zoom.js';\nexport { default as ZoomSlider } from './control/ZoomSlider.js';\nexport { default as ZoomToExtent } from './control/ZoomToExtent.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [opt_options]\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var controls = new Collection();\n    var zoomControl = options.zoom !== undefined ? options.zoom : true;\n    if (zoomControl) {\n        controls.push(new Zoom(options.zoomOptions));\n    }\n    var rotateControl = options.rotate !== undefined ? options.rotate : true;\n    if (rotateControl) {\n        controls.push(new Rotate(options.rotateOptions));\n    }\n    var attributionControl = options.attribution !== undefined ? options.attribution : true;\n    if (attributionControl) {\n        controls.push(new Attribution(options.attributionOptions));\n    }\n    return controls;\n}\n//# sourceMappingURL=control.js.map","/**\n * @module ol/interaction/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    ACTIVE: 'active',\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport { easeOut, linear } from '../easing.js';\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = /** @class */ (function (_super) {\n    __extends(Interaction, _super);\n    /**\n     * @param {InteractionOptions} [opt_options] Options.\n     */\n    function Interaction(opt_options) {\n        var _this = _super.call(this) || this;\n        /***\n         * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {InteractionOnSignature<void>}\n         */\n        _this.un;\n        if (opt_options && opt_options.handleEvent) {\n            _this.handleEvent = opt_options.handleEvent;\n        }\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        _this.setActive(true);\n        return _this;\n    }\n    /**\n     * Return whether the interaction is currently active.\n     * @return {boolean} `true` if the interaction is active, `false` otherwise.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.getActive = function () {\n        return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n    };\n    /**\n     * Get the map associated with this interaction.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Interaction.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @api\n     */\n    Interaction.prototype.handleEvent = function (mapBrowserEvent) {\n        return true;\n    };\n    /**\n     * Activate or deactivate the interaction.\n     * @param {boolean} active Active.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.setActive = function (active) {\n        this.set(InteractionProperty.ACTIVE, active);\n    };\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    Interaction.prototype.setMap = function (map) {\n        this.map_ = map;\n    };\n    return Interaction;\n}(BaseObject));\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [opt_duration] Duration.\n */\nexport function pan(view, delta, opt_duration) {\n    var currentCenter = view.getCenterInternal();\n    if (currentCenter) {\n        var center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n        view.animateInternal({\n            duration: opt_duration !== undefined ? opt_duration : 250,\n            easing: linear,\n            center: view.getConstrainedCenter(center),\n        });\n    }\n}\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] Anchor coordinate in the user projection.\n * @param {number} [opt_duration] Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n    var currentZoom = view.getZoom();\n    if (currentZoom === undefined) {\n        return;\n    }\n    var newZoom = view.getConstrainedZoom(currentZoom + delta);\n    var newResolution = view.getResolutionForZoom(newZoom);\n    if (view.getAnimating()) {\n        view.cancelAnimations();\n    }\n    view.animate({\n        resolution: newResolution,\n        anchor: opt_anchor,\n        duration: opt_duration !== undefined ? opt_duration : 250,\n        easing: easeOut,\n    });\n}\nexport default Interaction;\n//# sourceMappingURL=Interaction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = /** @class */ (function (_super) {\n    __extends(DoubleClickZoom, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function DoubleClickZoom(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n     * doubleclick) and eventually zooms the map.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     */\n    DoubleClickZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        var stopEvent = false;\n        if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n            var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n            var map = mapBrowserEvent.map;\n            var anchor = mapBrowserEvent.coordinate;\n            var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n            var view = map.getView();\n            zoomByDelta(view, delta, anchor, this.duration_);\n            browserEvent.preventDefault();\n            stopEvent = true;\n        }\n        return !stopEvent;\n    };\n    return DoubleClickZoom;\n}(Interaction));\nexport default DoubleClickZoom;\n//# sourceMappingURL=DoubleClickZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { getValues } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = /** @class */ (function (_super) {\n    __extends(PointerInteraction, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function PointerInteraction(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, \n        /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        if (options.handleDownEvent) {\n            _this.handleDownEvent = options.handleDownEvent;\n        }\n        if (options.handleDragEvent) {\n            _this.handleDragEvent = options.handleDragEvent;\n        }\n        if (options.handleMoveEvent) {\n            _this.handleMoveEvent = options.handleMoveEvent;\n        }\n        if (options.handleUpEvent) {\n            _this.handleUpEvent = options.handleUpEvent;\n        }\n        if (options.stopDown) {\n            _this.stopDown = options.stopDown;\n        }\n        /**\n         * @type {boolean}\n         * @protected\n         */\n        _this.handlingDownUpSequence = false;\n        /**\n         * @type {!Object<string, PointerEvent>}\n         * @private\n         */\n        _this.trackedPointers_ = {};\n        /**\n         * @type {Array<PointerEvent>}\n         * @protected\n         */\n        _this.targetPointers = [];\n        return _this;\n    }\n    /**\n     * Returns the current number of pointers involved in the interaction,\n     * e.g. `2` when two fingers are used.\n     * @return {number} The number of pointers.\n     * @api\n     */\n    PointerInteraction.prototype.getPointerCount = function () {\n        return this.targetPointers.length;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDownEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDragEvent = function (mapBrowserEvent) { };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n     * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n     * detected.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @api\n     */\n    PointerInteraction.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!mapBrowserEvent.originalEvent) {\n            return true;\n        }\n        var stopEvent = false;\n        this.updateTrackedPointers_(mapBrowserEvent);\n        if (this.handlingDownUpSequence) {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n                this.handleDragEvent(mapBrowserEvent);\n                // prevent page scrolling during dragging\n                mapBrowserEvent.originalEvent.preventDefault();\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                var handledUp = this.handleUpEvent(mapBrowserEvent);\n                this.handlingDownUpSequence =\n                    handledUp && this.targetPointers.length > 0;\n            }\n        }\n        else {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n                var handled = this.handleDownEvent(mapBrowserEvent);\n                this.handlingDownUpSequence = handled;\n                stopEvent = this.stopDown(handled);\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n                this.handleMoveEvent(mapBrowserEvent);\n            }\n        }\n        return !stopEvent;\n    };\n    /**\n     * Handle pointer move events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleMoveEvent = function (mapBrowserEvent) { };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleUpEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * This function is used to determine if \"down\" events should be propagated\n     * to other interactions or should be stopped.\n     * @param {boolean} handled Was the event handled by the interaction?\n     * @return {boolean} Should the `down` event be stopped?\n     */\n    PointerInteraction.prototype.stopDown = function (handled) {\n        return handled;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @private\n     */\n    PointerInteraction.prototype.updateTrackedPointers_ = function (mapBrowserEvent) {\n        if (isPointerDraggingEvent(mapBrowserEvent)) {\n            var event_1 = mapBrowserEvent.originalEvent;\n            var id = event_1.pointerId.toString();\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                delete this.trackedPointers_[id];\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n                this.trackedPointers_[id] = event_1;\n            }\n            else if (id in this.trackedPointers_) {\n                // update only when there was a pointerdown event for this pointer\n                this.trackedPointers_[id] = event_1;\n            }\n            this.targetPointers = getValues(this.trackedPointers_);\n        }\n    };\n    return PointerInteraction;\n}(Interaction));\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n    var length = pointerEvents.length;\n    var clientX = 0;\n    var clientY = 0;\n    for (var i = 0; i < length; i++) {\n        clientX += pointerEvents[i].clientX;\n        clientY += pointerEvents[i].clientY;\n    }\n    return [clientX / length, clientY / length];\n}\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n    var type = mapBrowserEvent.type;\n    return (type === MapBrowserEventType.POINTERDOWN ||\n        type === MapBrowserEventType.POINTERDRAG ||\n        type === MapBrowserEventType.POINTERUP);\n}\nexport default PointerInteraction;\n//# sourceMappingURL=Pointer.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { FALSE, TRUE } from '../functions.js';\nimport { MAC, WEBKIT } from '../has.js';\nimport { assert } from '../asserts.js';\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n    var conditions = arguments;\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @return {boolean} All conditions passed.\n     */\n    return function (event) {\n        var pass = true;\n        for (var i = 0, ii = conditions.length; i < ii; ++i) {\n            pass = pass && conditions[i](event);\n            if (!pass) {\n                break;\n            }\n        }\n        return pass;\n    };\n}\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function (event) {\n    return event.target.getTargetElement().contains(document.activeElement);\n};\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport var focusWithTabindex = function (event) {\n    return event.map.getTargetElement().hasAttribute('tabindex')\n        ? focus(event)\n        : true;\n};\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport var always = TRUE;\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function (mapBrowserEvent) {\n    var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport var never = FALSE;\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == 'pointermove';\n};\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    var tagName = /** @type {Element} */ (originalEvent.target).tagName;\n    return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent).originalEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvent.pointerType == 'mouse';\n};\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport var touchOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent).originalEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'touch';\n};\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport var penOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent).originalEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'pen';\n};\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent).originalEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n//# sourceMappingURL=condition.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, { centroid as centroidFromPointers, } from './Pointer.js';\nimport { FALSE } from '../functions.js';\nimport { all, focusWithTabindex, noModifierKeys, primaryAction, } from '../events/condition.js';\nimport { easeOut } from '../easing.js';\nimport { rotate as rotateCoordinate, scale as scaleCoordinate, } from '../coordinate.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = /** @class */ (function (_super) {\n    __extends(DragPan, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function DragPan(opt_options) {\n        var _this = _super.call(this, {\n            stopDown: FALSE,\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../Kinetic.js\").default|undefined}\n         */\n        _this.kinetic_ = options.kinetic;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.lastCentroid = null;\n        /**\n         * @type {number}\n         */\n        _this.lastPointersCount_;\n        /**\n         * @type {boolean}\n         */\n        _this.panning_ = false;\n        var condition = options.condition\n            ? options.condition\n            : all(noModifierKeys, primaryAction);\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.onFocusOnly\n            ? all(focusWithTabindex, condition)\n            : condition;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.noKinetic_ = false;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    DragPan.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!this.panning_) {\n            this.panning_ = true;\n            this.getMap().getView().beginInteraction();\n        }\n        var targetPointers = this.targetPointers;\n        var centroid = centroidFromPointers(targetPointers);\n        if (targetPointers.length == this.lastPointersCount_) {\n            if (this.kinetic_) {\n                this.kinetic_.update(centroid[0], centroid[1]);\n            }\n            if (this.lastCentroid) {\n                var delta = [\n                    this.lastCentroid[0] - centroid[0],\n                    centroid[1] - this.lastCentroid[1],\n                ];\n                var map = mapBrowserEvent.map;\n                var view = map.getView();\n                scaleCoordinate(delta, view.getResolution());\n                rotateCoordinate(delta, view.getRotation());\n                view.adjustCenterInternal(delta);\n            }\n        }\n        else if (this.kinetic_) {\n            // reset so we don't overestimate the kinetic energy after\n            // after one finger down, tiny drag, second finger down\n            this.kinetic_.begin();\n        }\n        this.lastCentroid = centroid;\n        this.lastPointersCount_ = targetPointers.length;\n        mapBrowserEvent.originalEvent.preventDefault();\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragPan.prototype.handleUpEvent = function (mapBrowserEvent) {\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (this.targetPointers.length === 0) {\n            if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n                var distance = this.kinetic_.getDistance();\n                var angle = this.kinetic_.getAngle();\n                var center = view.getCenterInternal();\n                var centerpx = map.getPixelFromCoordinateInternal(center);\n                var dest = map.getCoordinateFromPixelInternal([\n                    centerpx[0] - distance * Math.cos(angle),\n                    centerpx[1] - distance * Math.sin(angle),\n                ]);\n                view.animateInternal({\n                    center: view.getConstrainedCenter(dest),\n                    duration: 500,\n                    easing: easeOut,\n                });\n            }\n            if (this.panning_) {\n                this.panning_ = false;\n                view.endInteraction();\n            }\n            return false;\n        }\n        else {\n            if (this.kinetic_) {\n                // reset so we don't overestimate the kinetic energy after\n                // after one finger up, tiny drag, second finger up\n                this.kinetic_.begin();\n            }\n            this.lastCentroid = null;\n            return true;\n        }\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragPan.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            this.lastCentroid = null;\n            // stop any current animation\n            if (view.getAnimating()) {\n                view.cancelAnimations();\n            }\n            if (this.kinetic_) {\n                this.kinetic_.begin();\n            }\n            // No kinetic as soon as more than one pointer on the screen is\n            // detected. This is to prevent nasty pans after pinch.\n            this.noKinetic_ = this.targetPointers.length > 1;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragPan;\n}(PointerInteraction));\nexport default DragPan;\n//# sourceMappingURL=DragPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport { FALSE } from '../functions.js';\nimport { altShiftKeysOnly, mouseActionButton, mouseOnly, } from '../events/condition.js';\nimport { disable } from '../rotationconstraint.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = /** @class */ (function (_super) {\n    __extends(DragRotate, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function DragRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            stopDown: FALSE,\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    DragRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        var size = map.getSize();\n        var offset = mapBrowserEvent.pixel;\n        var theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n        if (this.lastAngle_ !== undefined) {\n            var delta = theta - this.lastAngle_;\n            view.adjustRotationInternal(-delta);\n        }\n        this.lastAngle_ = theta;\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return true;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        view.endInteraction(this.duration_);\n        return false;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return false;\n        }\n        if (mouseActionButton(mapBrowserEvent) &&\n            this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            map.getView().beginInteraction();\n            this.lastAngle_ = undefined;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragRotate;\n}(PointerInteraction));\nexport default DragRotate;\n//# sourceMappingURL=DragRotate.js.map","/**\n * @module ol/render/Box\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\nvar RenderBox = /** @class */ (function (_super) {\n    __extends(RenderBox, _super);\n    /**\n     * @param {string} className CSS class name.\n     */\n    function RenderBox(className) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {import(\"../geom/Polygon.js\").default}\n         * @private\n         */\n        _this.geometry_ = null;\n        /**\n         * @type {HTMLDivElement}\n         * @private\n         */\n        _this.element_ = document.createElement('div');\n        _this.element_.style.position = 'absolute';\n        _this.element_.style.pointerEvents = 'auto';\n        _this.element_.className = 'ol-box ' + className;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.endPixel_ = null;\n        return _this;\n    }\n    /**\n     * Clean up.\n     */\n    RenderBox.prototype.disposeInternal = function () {\n        this.setMap(null);\n    };\n    /**\n     * @private\n     */\n    RenderBox.prototype.render_ = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var px = 'px';\n        var style = this.element_.style;\n        style.left = Math.min(startPixel[0], endPixel[0]) + px;\n        style.top = Math.min(startPixel[1], endPixel[1]) + px;\n        style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n        style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    RenderBox.prototype.setMap = function (map) {\n        if (this.map_) {\n            this.map_.getOverlayContainer().removeChild(this.element_);\n            var style = this.element_.style;\n            style.left = 'inherit';\n            style.top = 'inherit';\n            style.width = 'inherit';\n            style.height = 'inherit';\n        }\n        this.map_ = map;\n        if (this.map_) {\n            this.map_.getOverlayContainer().appendChild(this.element_);\n        }\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n     * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n     */\n    RenderBox.prototype.setPixels = function (startPixel, endPixel) {\n        this.startPixel_ = startPixel;\n        this.endPixel_ = endPixel;\n        this.createOrUpdateGeometry();\n        this.render_();\n    };\n    /**\n     * Creates or updates the cached geometry.\n     */\n    RenderBox.prototype.createOrUpdateGeometry = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var pixels = [\n            startPixel,\n            [startPixel[0], endPixel[1]],\n            endPixel,\n            [endPixel[0], startPixel[1]],\n        ];\n        var coordinates = pixels.map(this.map_.getCoordinateFromPixelInternal, this.map_);\n        // close the polygon\n        coordinates[4] = coordinates[0].slice();\n        if (!this.geometry_) {\n            this.geometry_ = new Polygon([coordinates]);\n        }\n        else {\n            this.geometry_.setCoordinates([coordinates]);\n        }\n    };\n    /**\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     */\n    RenderBox.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    return RenderBox;\n}(Disposable));\nexport default RenderBox;\n//# sourceMappingURL=Box.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport { mouseActionButton } from '../events/condition.js';\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n    /**\n     * Triggered upon drag box start.\n     * @event DragBoxEvent#boxstart\n     * @api\n     */\n    BOXSTART: 'boxstart',\n    /**\n     * Triggered on drag when box is active.\n     * @event DragBoxEvent#boxdrag\n     * @api\n     */\n    BOXDRAG: 'boxdrag',\n    /**\n     * Triggered upon drag box end.\n     * @event DragBoxEvent#boxend\n     * @api\n     */\n    BOXEND: 'boxend',\n    /**\n     * Triggered upon drag box canceled.\n     * @event DragBoxEvent#boxcancel\n     * @api\n     */\n    BOXCANCEL: 'boxcancel',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = /** @class */ (function (_super) {\n    __extends(DragBoxEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n     */\n    function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The coordinate of the drag event.\n         * @const\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @api\n         */\n        _this.coordinate = coordinate;\n        /**\n         * @const\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = mapBrowserEvent;\n        return _this;\n    }\n    return DragBoxEvent;\n}(Event));\nexport { DragBoxEvent };\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nvar DragBox = /** @class */ (function (_super) {\n    __extends(DragBox, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function DragBox(opt_options) {\n        var _this = _super.call(this) || this;\n        /***\n         * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {DragBoxOnSignature<void>}\n         */\n        _this.un;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"../render/Box.js\").default}\n         * @private\n         */\n        _this.box_ = new RenderBox(options.className || 'ol-dragbox');\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n        if (options.onBoxEnd) {\n            _this.onBoxEnd = options.onBoxEnd;\n        }\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         * @private\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : mouseActionButton;\n        /**\n         * @private\n         * @type {EndCondition}\n         */\n        _this.boxEndCondition_ = options.boxEndCondition\n            ? options.boxEndCondition\n            : _this.defaultBoxEndCondition;\n        return _this;\n    }\n    /**\n     * The default condition for determining whether the boxend event\n     * should fire.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n     *     leading to the box end.\n     * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n     * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n     * @return {boolean} Whether or not the boxend condition should be fired.\n     */\n    DragBox.prototype.defaultBoxEndCondition = function (mapBrowserEvent, startPixel, endPixel) {\n        var width = endPixel[0] - startPixel[0];\n        var height = endPixel[1] - startPixel[1];\n        return width * width + height * height >= this.minArea_;\n    };\n    /**\n     * Returns geometry of last drawn box.\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     * @api\n     */\n    DragBox.prototype.getGeometry = function () {\n        return this.box_.getGeometry();\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    DragBox.prototype.handleDragEvent = function (mapBrowserEvent) {\n        this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n        this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG, mapBrowserEvent.coordinate, mapBrowserEvent));\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragBox.prototype.handleUpEvent = function (mapBrowserEvent) {\n        this.box_.setMap(null);\n        var completeBox = this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel);\n        if (completeBox) {\n            this.onBoxEnd(mapBrowserEvent);\n        }\n        this.dispatchEvent(new DragBoxEvent(completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL, mapBrowserEvent.coordinate, mapBrowserEvent));\n        return false;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragBox.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.condition_(mapBrowserEvent)) {\n            this.startPixel_ = mapBrowserEvent.pixel;\n            this.box_.setMap(mapBrowserEvent.map);\n            this.box_.setPixels(this.startPixel_, this.startPixel_);\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART, mapBrowserEvent.coordinate, mapBrowserEvent));\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     */\n    DragBox.prototype.onBoxEnd = function (event) { };\n    return DragBox;\n}(PointerInteraction));\nexport default DragBox;\n//# sourceMappingURL=DragBox.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport { easeOut } from '../easing.js';\nimport { shiftKeyOnly } from '../events/condition.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /** @class */ (function (_super) {\n    __extends(DragZoom, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function DragZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var condition = options.condition ? options.condition : shiftKeyOnly;\n        _this = _super.call(this, {\n            condition: condition,\n            className: options.className || 'ol-dragzoom',\n            minArea: options.minArea,\n        }) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 200;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.out_ = options.out !== undefined ? options.out : false;\n        return _this;\n    }\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     */\n    DragZoom.prototype.onBoxEnd = function (event) {\n        var map = this.getMap();\n        var view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n        var geometry = this.getGeometry();\n        if (this.out_) {\n            var rotatedExtent = view.rotatedExtentForGeometry(geometry);\n            var resolution = view.getResolutionForExtentInternal(rotatedExtent);\n            var factor = view.getResolution() / resolution;\n            geometry = geometry.clone();\n            geometry.scale(factor * factor);\n        }\n        view.fitInternal(geometry, {\n            duration: this.duration_,\n            easing: easeOut,\n        });\n    };\n    return DragZoom;\n}(DragBox));\nexport default DragZoom;\n//# sourceMappingURL=DragZoom.js.map","/**\n * @module ol/events/KeyCode\n */\n/**\n * @enum {number}\n * @const\n */\nexport default {\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40,\n};\n//# sourceMappingURL=KeyCode.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, { pan } from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport { noModifierKeys, targetNotEditable } from '../events/condition.js';\nimport { rotate as rotateCoordinate } from '../coordinate.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = /** @class */ (function (_super) {\n    __extends(KeyboardPan, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function KeyboardPan(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n         * @return {boolean} Combined condition result.\n         */\n        _this.defaultCondition_ = function (mapBrowserEvent) {\n            return (noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent));\n        };\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ =\n            options.condition !== undefined\n                ? options.condition\n                : _this.defaultCondition_;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelDelta_ =\n            options.pixelDelta !== undefined ? options.pixelDelta : 128;\n        return _this;\n    }\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n     * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n     * pressed).\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @this {KeyboardPan}\n     */\n    KeyboardPan.prototype.handleEvent = function (mapBrowserEvent) {\n        var stopEvent = false;\n        if (mapBrowserEvent.type == EventType.KEYDOWN) {\n            var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n            var keyCode = keyEvent.keyCode;\n            if (this.condition_(mapBrowserEvent) &&\n                (keyCode == KeyCode.DOWN ||\n                    keyCode == KeyCode.LEFT ||\n                    keyCode == KeyCode.RIGHT ||\n                    keyCode == KeyCode.UP)) {\n                var map = mapBrowserEvent.map;\n                var view = map.getView();\n                var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n                var deltaX = 0, deltaY = 0;\n                if (keyCode == KeyCode.DOWN) {\n                    deltaY = -mapUnitsDelta;\n                }\n                else if (keyCode == KeyCode.LEFT) {\n                    deltaX = -mapUnitsDelta;\n                }\n                else if (keyCode == KeyCode.RIGHT) {\n                    deltaX = mapUnitsDelta;\n                }\n                else {\n                    deltaY = mapUnitsDelta;\n                }\n                var delta = [deltaX, deltaY];\n                rotateCoordinate(delta, view.getRotation());\n                pan(view, delta, this.duration_);\n                keyEvent.preventDefault();\n                stopEvent = true;\n            }\n        }\n        return !stopEvent;\n    };\n    return KeyboardPan;\n}(Interaction));\nexport default KeyboardPan;\n//# sourceMappingURL=KeyboardPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport { targetNotEditable } from '../events/condition.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = /** @class */ (function (_super) {\n    __extends(KeyboardZoom, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function KeyboardZoom(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : targetNotEditable;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        return _this;\n    }\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n     * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n     * key pressed was '+' or '-').\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @this {KeyboardZoom}\n     */\n    KeyboardZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        var stopEvent = false;\n        if (mapBrowserEvent.type == EventType.KEYDOWN ||\n            mapBrowserEvent.type == EventType.KEYPRESS) {\n            var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n            var charCode = keyEvent.charCode;\n            if (this.condition_(mapBrowserEvent) &&\n                (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n                var map = mapBrowserEvent.map;\n                var delta = charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n                var view = map.getView();\n                zoomByDelta(view, delta, undefined, this.duration_);\n                keyEvent.preventDefault();\n                stopEvent = true;\n            }\n        }\n        return !stopEvent;\n    };\n    return KeyboardZoom;\n}(Interaction));\nexport default KeyboardZoom;\n//# sourceMappingURL=KeyboardZoom.js.map","/**\n * @module ol/Kinetic\n */\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = /** @class */ (function () {\n    /**\n     * @param {number} decay Rate of decay (must be negative).\n     * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n     * @param {number} delay Delay to consider to calculate the kinetic\n     *     initial values (milliseconds).\n     */\n    function Kinetic(decay, minVelocity, delay) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.decay_ = decay;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minVelocity_ = minVelocity;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.delay_ = delay;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.points_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        this.angle_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.initialVelocity_ = 0;\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    Kinetic.prototype.begin = function () {\n        this.points_.length = 0;\n        this.angle_ = 0;\n        this.initialVelocity_ = 0;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     */\n    Kinetic.prototype.update = function (x, y) {\n        this.points_.push(x, y, Date.now());\n    };\n    /**\n     * @return {boolean} Whether we should do kinetic animation.\n     */\n    Kinetic.prototype.end = function () {\n        if (this.points_.length < 6) {\n            // at least 2 points are required (i.e. there must be at least 6 elements\n            // in the array)\n            return false;\n        }\n        var delay = Date.now() - this.delay_;\n        var lastIndex = this.points_.length - 3;\n        if (this.points_[lastIndex + 2] < delay) {\n            // the last tracked point is too old, which means that the user stopped\n            // panning before releasing the map\n            return false;\n        }\n        // get the first point which still falls into the delay time\n        var firstIndex = lastIndex - 3;\n        while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n            firstIndex -= 3;\n        }\n        var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n        // we don't want a duration of 0 (divide by zero)\n        // we also make sure the user panned for a duration of at least one frame\n        // (1/60s) to compute sane displacement values\n        if (duration < 1000 / 60) {\n            return false;\n        }\n        var dx = this.points_[lastIndex] - this.points_[firstIndex];\n        var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n        this.angle_ = Math.atan2(dy, dx);\n        this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n        return this.initialVelocity_ > this.minVelocity_;\n    };\n    /**\n     * @return {number} Total distance travelled (pixels).\n     */\n    Kinetic.prototype.getDistance = function () {\n        return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n    };\n    /**\n     * @return {number} Angle of the kinetic panning animation (radians).\n     */\n    Kinetic.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    return Kinetic;\n}());\nexport default Kinetic;\n//# sourceMappingURL=Kinetic.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport { DEVICE_PIXEL_RATIO, FIREFOX } from '../has.js';\nimport { all, always, focusWithTabindex } from '../events/condition.js';\nimport { clamp } from '../math.js';\n/**\n * @enum {string}\n */\nexport var Mode = {\n    TRACKPAD: 'trackpad',\n    WHEEL: 'wheel',\n};\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = /** @class */ (function (_super) {\n    __extends(MouseWheelZoom, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function MouseWheelZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, \n        /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.totalDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.useAnchor_ =\n            options.useAnchor !== undefined ? options.useAnchor : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.constrainResolution_ =\n            options.constrainResolution !== undefined\n                ? options.constrainResolution\n                : false;\n        var condition = options.condition ? options.condition : always;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.onFocusOnly\n            ? all(focusWithTabindex, condition)\n            : condition;\n        /**\n         * @private\n         * @type {?import(\"../coordinate.js\").Coordinate}\n         */\n        _this.lastAnchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.startTime_ = undefined;\n        /**\n         * @private\n         * @type {?}\n         */\n        _this.timeoutId_;\n        /**\n         * @private\n         * @type {Mode|undefined}\n         */\n        _this.mode_ = undefined;\n        /**\n         * Trackpad events separated by this delay will be considered separate\n         * interactions.\n         * @type {number}\n         */\n        _this.trackpadEventGap_ = 400;\n        /**\n         * @type {?}\n         */\n        _this.trackpadTimeoutId_;\n        /**\n         * The number of delta values per zoom level\n         * @private\n         * @type {number}\n         */\n        _this.deltaPerZoom_ = 300;\n        return _this;\n    }\n    /**\n     * @private\n     */\n    MouseWheelZoom.prototype.endInteraction_ = function () {\n        this.trackpadTimeoutId_ = undefined;\n        var view = this.getMap().getView();\n        view.endInteraction(undefined, this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0, this.lastAnchor_);\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n     * zooms the map.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     */\n    MouseWheelZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!this.condition_(mapBrowserEvent)) {\n            return true;\n        }\n        var type = mapBrowserEvent.type;\n        if (type !== EventType.WHEEL) {\n            return true;\n        }\n        var map = mapBrowserEvent.map;\n        var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n        wheelEvent.preventDefault();\n        if (this.useAnchor_) {\n            this.lastAnchor_ = mapBrowserEvent.coordinate;\n        }\n        // Delta normalisation inspired by\n        // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n        var delta;\n        if (mapBrowserEvent.type == EventType.WHEEL) {\n            delta = wheelEvent.deltaY;\n            if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n                delta /= DEVICE_PIXEL_RATIO;\n            }\n            if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n                delta *= 40;\n            }\n        }\n        if (delta === 0) {\n            return false;\n        }\n        else {\n            this.lastDelta_ = delta;\n        }\n        var now = Date.now();\n        if (this.startTime_ === undefined) {\n            this.startTime_ = now;\n        }\n        if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n            this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n        }\n        var view = map.getView();\n        if (this.mode_ === Mode.TRACKPAD &&\n            !(view.getConstrainResolution() || this.constrainResolution_)) {\n            if (this.trackpadTimeoutId_) {\n                clearTimeout(this.trackpadTimeoutId_);\n            }\n            else {\n                if (view.getAnimating()) {\n                    view.cancelAnimations();\n                }\n                view.beginInteraction();\n            }\n            this.trackpadTimeoutId_ = setTimeout(this.endInteraction_.bind(this), this.timeout_);\n            view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n            this.startTime_ = now;\n            return false;\n        }\n        this.totalDelta_ += delta;\n        var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n        clearTimeout(this.timeoutId_);\n        this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n        return false;\n    };\n    /**\n     * @private\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    MouseWheelZoom.prototype.handleWheelZoom_ = function (map) {\n        var view = map.getView();\n        if (view.getAnimating()) {\n            view.cancelAnimations();\n        }\n        var delta = -clamp(this.totalDelta_, -this.maxDelta_ * this.deltaPerZoom_, this.maxDelta_ * this.deltaPerZoom_) / this.deltaPerZoom_;\n        if (view.getConstrainResolution() || this.constrainResolution_) {\n            // view has a zoom constraint, zoom by 1\n            delta = delta ? (delta > 0 ? 1 : -1) : 0;\n        }\n        zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n        this.mode_ = undefined;\n        this.totalDelta_ = 0;\n        this.lastAnchor_ = null;\n        this.startTime_ = undefined;\n        this.timeoutId_ = undefined;\n    };\n    /**\n     * Enable or disable using the mouse's location as an anchor when zooming\n     * @param {boolean} useAnchor true to zoom to the mouse's location, false\n     * to zoom to the center of the map\n     * @api\n     */\n    MouseWheelZoom.prototype.setMouseAnchor = function (useAnchor) {\n        this.useAnchor_ = useAnchor;\n        if (!useAnchor) {\n            this.lastAnchor_ = null;\n        }\n    };\n    return MouseWheelZoom;\n}(Interaction));\nexport default MouseWheelZoom;\n//# sourceMappingURL=MouseWheelZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, { centroid as centroidFromPointers, } from './Pointer.js';\nimport { FALSE } from '../functions.js';\nimport { disable } from '../rotationconstraint.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = /** @class */ (function (_super) {\n    __extends(PinchRotate, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function PinchRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.rotating_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.rotationDelta_ = 0.0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    PinchRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var rotationDelta = 0.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        // angle between touches\n        var angle = Math.atan2(touch1.clientY - touch0.clientY, touch1.clientX - touch0.clientX);\n        if (this.lastAngle_ !== undefined) {\n            var delta = angle - this.lastAngle_;\n            this.rotationDelta_ += delta;\n            if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n                this.rotating_ = true;\n            }\n            rotationDelta = delta;\n        }\n        this.lastAngle_ = angle;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        // rotate anchor point.\n        // FIXME: should be the intersection point between the lines:\n        //     touch0,touch1 and previousTouch0,previousTouch1\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n        // rotate\n        if (this.rotating_) {\n            map.render();\n            view.adjustRotationInternal(rotationDelta, this.anchor_);\n        }\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            view.endInteraction(this.duration_);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastAngle_ = undefined;\n            this.rotating_ = false;\n            this.rotationDelta_ = 0.0;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchRotate;\n}(PointerInteraction));\nexport default PinchRotate;\n//# sourceMappingURL=PinchRotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, { centroid as centroidFromPointers, } from './Pointer.js';\nimport { FALSE } from '../functions.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = /** @class */ (function (_super) {\n    __extends(PinchZoom, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function PinchZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 400;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastDistance_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastScaleDelta_ = 1;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    PinchZoom.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var scaleDelta = 1.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        var dx = touch0.clientX - touch1.clientX;\n        var dy = touch0.clientY - touch1.clientY;\n        // distance between touches\n        var distance = Math.sqrt(dx * dx + dy * dy);\n        if (this.lastDistance_ !== undefined) {\n            scaleDelta = this.lastDistance_ / distance;\n        }\n        this.lastDistance_ = distance;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (scaleDelta != 1.0) {\n            this.lastScaleDelta_ = scaleDelta;\n        }\n        // scale anchor point.\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n        // scale, bypass the resolution constraint\n        map.render();\n        view.adjustResolutionInternal(scaleDelta, this.anchor_);\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchZoom.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            var direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n            view.endInteraction(this.duration_, direction);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchZoom.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastDistance_ = undefined;\n            this.lastScaleDelta_ = 1;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchZoom;\n}(PointerInteraction));\nexport default PinchZoom;\n//# sourceMappingURL=PinchZoom.js.map","\nexport default function quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport { assign } from '../obj.js';\nimport { createDefaultStyle, toFunction as toStyleFunction, } from '../style/Style.js';\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style} for default style\n * which will be used if this is not set.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    RENDER_ORDER: 'renderOrder',\n};\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nvar BaseVectorLayer = /** @class */ (function (_super) {\n    __extends(BaseVectorLayer, _super);\n    /**\n     * @param {Options<VectorSourceType>} [opt_options] Options.\n     */\n    function BaseVectorLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({}, options);\n        delete baseOptions.style;\n        delete baseOptions.renderBuffer;\n        delete baseOptions.updateWhileAnimating;\n        delete baseOptions.updateWhileInteracting;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.declutter_ =\n            options.declutter !== undefined ? options.declutter : false;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.renderBuffer_ =\n            options.renderBuffer !== undefined ? options.renderBuffer : 100;\n        /**\n         * User provided style.\n         * @type {import(\"../style/Style.js\").StyleLike}\n         * @private\n         */\n        _this.style_ = null;\n        /**\n         * Style function for use within the library.\n         * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n         * @private\n         */\n        _this.styleFunction_ = undefined;\n        _this.setStyle(options.style);\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.updateWhileAnimating_ =\n            options.updateWhileAnimating !== undefined\n                ? options.updateWhileAnimating\n                : false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.updateWhileInteracting_ =\n            options.updateWhileInteracting !== undefined\n                ? options.updateWhileInteracting\n                : false;\n        return _this;\n    }\n    /**\n     * @return {boolean} Declutter.\n     */\n    BaseVectorLayer.prototype.getDeclutter = function () {\n        return this.declutter_;\n    };\n    /**\n     * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n     * that resolves with an array of features. The array will either contain the topmost feature\n     * when a hit was detected, or it will be empty.\n     *\n     * The hit detection algorithm used for this method is optimized for performance, but is less\n     * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel}: Text\n     * is not considered, and icons are only represented by their bounding box instead of the exact\n     * image.\n     *\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n     * @api\n     */\n    BaseVectorLayer.prototype.getFeatures = function (pixel) {\n        return _super.prototype.getFeatures.call(this, pixel);\n    };\n    /**\n     * @return {number|undefined} Render buffer.\n     */\n    BaseVectorLayer.prototype.getRenderBuffer = function () {\n        return this.renderBuffer_;\n    };\n    /**\n     * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n     *     order.\n     */\n    BaseVectorLayer.prototype.getRenderOrder = function () {\n        return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER));\n    };\n    /**\n     * Get the style for features.  This returns whatever was passed to the `style`\n     * option at construction or to the `setStyle` method.\n     * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n     * @api\n     */\n    BaseVectorLayer.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Get the style function.\n     * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n     * @api\n     */\n    BaseVectorLayer.prototype.getStyleFunction = function () {\n        return this.styleFunction_;\n    };\n    /**\n     * @return {boolean} Whether the rendered layer should be updated while\n     *     animating.\n     */\n    BaseVectorLayer.prototype.getUpdateWhileAnimating = function () {\n        return this.updateWhileAnimating_;\n    };\n    /**\n     * @return {boolean} Whether the rendered layer should be updated while\n     *     interacting.\n     */\n    BaseVectorLayer.prototype.getUpdateWhileInteracting = function () {\n        return this.updateWhileInteracting_;\n    };\n    /**\n     * Render declutter items for this layer\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    BaseVectorLayer.prototype.renderDeclutter = function (frameState) {\n        if (!frameState.declutterTree) {\n            frameState.declutterTree = new RBush(9);\n        }\n        /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n    };\n    /**\n     * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n     *     Render order.\n     */\n    BaseVectorLayer.prototype.setRenderOrder = function (renderOrder) {\n        this.set(Property.RENDER_ORDER, renderOrder);\n    };\n    /**\n     * Set the style for features.  This can be a single style object, an array\n     * of styles, or a function that takes a feature and resolution and returns\n     * an array of styles. If set to `null`, the layer has no style (a `null` style),\n     * so only features that have their own styles will be rendered in the layer. Call\n     * `setStyle()` without arguments to reset to the default style. See\n     * {@link module:ol/style} for information on the default style.\n     * @param {import(\"../style/Style.js\").StyleLike|null} [opt_style] Layer style.\n     * @api\n     */\n    BaseVectorLayer.prototype.setStyle = function (opt_style) {\n        this.style_ = opt_style !== undefined ? opt_style : createDefaultStyle;\n        this.styleFunction_ =\n            opt_style === null ? undefined : toStyleFunction(this.style_);\n        this.changed();\n    };\n    return BaseVectorLayer;\n}(Layer));\nexport default BaseVectorLayer;\n//# sourceMappingURL=BaseVector.js.map","/**\n * @module ol/render/canvas/Instruction\n */\n/**\n * @enum {number}\n */\nvar Instruction = {\n    BEGIN_GEOMETRY: 0,\n    BEGIN_PATH: 1,\n    CIRCLE: 2,\n    CLOSE_PATH: 3,\n    CUSTOM: 4,\n    DRAW_CHARS: 5,\n    DRAW_IMAGE: 6,\n    END_GEOMETRY: 7,\n    FILL: 8,\n    MOVE_TO_LINE_TO: 9,\n    SET_FILL_STYLE: 10,\n    SET_STROKE_STYLE: 11,\n    STROKE: 12,\n};\n/**\n * @type {Array<Instruction>}\n */\nexport var fillInstruction = [Instruction.FILL];\n/**\n * @type {Array<Instruction>}\n */\nexport var strokeInstruction = [Instruction.STROKE];\n/**\n * @type {Array<Instruction>}\n */\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\n/**\n * @type {Array<Instruction>}\n */\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\nexport default Instruction;\n//# sourceMappingURL=Instruction.js.map","/**\n * @module ol/render/VectorContext\n */\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = /** @class */ (function () {\n    function VectorContext() {\n    }\n    /**\n     * Render a geometry with a custom renderer.\n     *\n     * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {Function} renderer Renderer.\n     * @param {Function} hitDetectionRenderer Renderer.\n     */\n    VectorContext.prototype.drawCustom = function (geometry, feature, renderer, hitDetectionRenderer) { };\n    /**\n     * Render a geometry.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n     */\n    VectorContext.prototype.drawGeometry = function (geometry) { };\n    /**\n     * Set the rendering style.\n     *\n     * @param {import(\"../style/Style.js\").default} style The rendering style.\n     */\n    VectorContext.prototype.setStyle = function (style) { };\n    /**\n     * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawCircle = function (circleGeometry, feature) { };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"../style/Style.js\").default} style Style.\n     */\n    VectorContext.prototype.drawFeature = function (feature, style) { };\n    /**\n     * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawGeometryCollection = function (geometryCollectionGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawLineString = function (lineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPoint = function (multiPointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPoint = function (pointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPolygon = function (polygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawText = function (geometry, feature) { };\n    /**\n     * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    VectorContext.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) { };\n    /**\n     * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n     * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with a text style.\n     */\n    VectorContext.prototype.setImageStyle = function (imageStyle, opt_declutterImageWithText) { };\n    /**\n     * @param {import(\"../style/Text.js\").default} textStyle Text style.\n     * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with an image style.\n     */\n    VectorContext.prototype.setTextStyle = function (textStyle, opt_declutterImageWithText) { };\n    return VectorContext;\n}());\nexport default VectorContext;\n//# sourceMappingURL=VectorContext.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { buffer, clone, containsCoordinate, coordinateRelationship, } from '../../extent.js';\nimport { defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, } from '../canvas.js';\nimport { equals, reverseSubArray } from '../../array.js';\nimport { inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray, } from '../../geom/flat/inflate.js';\nvar CanvasBuilder = /** @class */ (function (_super) {\n    __extends(CanvasBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.tolerance = tolerance;\n        /**\n         * @protected\n         * @const\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.maxExtent = maxExtent;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.maxLineWidth = 0;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        _this.resolution = resolution;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction1_ = null;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction2_ = null;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.bufferedMaxExtent_ = null;\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.instructions = [];\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.coordinates = [];\n        /**\n         * @private\n         * @type {import(\"../../coordinate.js\").Coordinate}\n         */\n        _this.tmpCoordinate_ = [];\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.hitDetectionInstructions = [];\n        /**\n         * @protected\n         * @type {import(\"../canvas.js\").FillStrokeState}\n         */\n        _this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {Array<number>} dashArray Dash array.\n     * @return {Array<number>} Dash array with pixel ratio applied\n     */\n    CanvasBuilder.prototype.applyPixelRatio = function (dashArray) {\n        var pixelRatio = this.pixelRatio;\n        return pixelRatio == 1\n            ? dashArray\n            : dashArray.map(function (dash) {\n                return dash * pixelRatio;\n            });\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} stride Stride.\n     * @protected\n     * @return {number} My end\n     */\n    CanvasBuilder.prototype.appendFlatPointCoordinates = function (flatCoordinates, stride) {\n        var extent = this.getBufferedMaxExtent();\n        var tmpCoord = this.tmpCoordinate_;\n        var coordinates = this.coordinates;\n        var myEnd = coordinates.length;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            tmpCoord[0] = flatCoordinates[i];\n            tmpCoord[1] = flatCoordinates[i + 1];\n            if (containsCoordinate(extent, tmpCoord)) {\n                coordinates[myEnd++] = tmpCoord[0];\n                coordinates[myEnd++] = tmpCoord[1];\n            }\n        }\n        return myEnd;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} closed Last input coordinate equals first.\n     * @param {boolean} skipFirst Skip first coordinate.\n     * @protected\n     * @return {number} My end.\n     */\n    CanvasBuilder.prototype.appendFlatLineCoordinates = function (flatCoordinates, offset, end, stride, closed, skipFirst) {\n        var coordinates = this.coordinates;\n        var myEnd = coordinates.length;\n        var extent = this.getBufferedMaxExtent();\n        if (skipFirst) {\n            offset += stride;\n        }\n        var lastXCoord = flatCoordinates[offset];\n        var lastYCoord = flatCoordinates[offset + 1];\n        var nextCoord = this.tmpCoordinate_;\n        var skipped = true;\n        var i, lastRel, nextRel;\n        for (i = offset + stride; i < end; i += stride) {\n            nextCoord[0] = flatCoordinates[i];\n            nextCoord[1] = flatCoordinates[i + 1];\n            nextRel = coordinateRelationship(extent, nextCoord);\n            if (nextRel !== lastRel) {\n                if (skipped) {\n                    coordinates[myEnd++] = lastXCoord;\n                    coordinates[myEnd++] = lastYCoord;\n                    skipped = false;\n                }\n                coordinates[myEnd++] = nextCoord[0];\n                coordinates[myEnd++] = nextCoord[1];\n            }\n            else if (nextRel === Relationship.INTERSECTING) {\n                coordinates[myEnd++] = nextCoord[0];\n                coordinates[myEnd++] = nextCoord[1];\n                skipped = false;\n            }\n            else {\n                skipped = true;\n            }\n            lastXCoord = nextCoord[0];\n            lastYCoord = nextCoord[1];\n            lastRel = nextRel;\n        }\n        // Last coordinate equals first or only one point to append:\n        if ((closed && skipped) || i === offset + stride) {\n            coordinates[myEnd++] = lastXCoord;\n            coordinates[myEnd++] = lastYCoord;\n        }\n        return myEnd;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @param {Array<number>} builderEnds Builder ends.\n     * @return {number} Offset.\n     */\n    CanvasBuilder.prototype.drawCustomCoordinates_ = function (flatCoordinates, offset, ends, stride, builderEnds) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var builderEnd = this.appendFlatLineCoordinates(flatCoordinates, offset, end, stride, false, false);\n            builderEnds.push(builderEnd);\n            offset = end;\n        }\n        return offset;\n    };\n    /**\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {Function} renderer Renderer.\n     * @param {Function} hitDetectionRenderer Renderer.\n     */\n    CanvasBuilder.prototype.drawCustom = function (geometry, feature, renderer, hitDetectionRenderer) {\n        this.beginGeometry(geometry, feature);\n        var type = geometry.getType();\n        var stride = geometry.getStride();\n        var builderBegin = this.coordinates.length;\n        var flatCoordinates, builderEnd, builderEnds, builderEndss;\n        var offset;\n        switch (type) {\n            case GeometryType.MULTI_POLYGON:\n                flatCoordinates =\n                    /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getOrientedFlatCoordinates();\n                builderEndss = [];\n                var endss = \n                /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n                offset = 0;\n                for (var i = 0, ii = endss.length; i < ii; ++i) {\n                    var myEnds = [];\n                    offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n                    builderEndss.push(myEnds);\n                }\n                this.instructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEndss,\n                    geometry,\n                    renderer,\n                    inflateMultiCoordinatesArray,\n                ]);\n                this.hitDetectionInstructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEndss,\n                    geometry,\n                    hitDetectionRenderer || renderer,\n                    inflateMultiCoordinatesArray,\n                ]);\n                break;\n            case GeometryType.POLYGON:\n            case GeometryType.MULTI_LINE_STRING:\n                builderEnds = [];\n                flatCoordinates =\n                    type == GeometryType.POLYGON\n                        ? /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates()\n                        : geometry.getFlatCoordinates();\n                offset = this.drawCustomCoordinates_(flatCoordinates, 0, \n                /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(), stride, builderEnds);\n                this.instructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEnds,\n                    geometry,\n                    renderer,\n                    inflateCoordinatesArray,\n                ]);\n                this.hitDetectionInstructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEnds,\n                    geometry,\n                    hitDetectionRenderer || renderer,\n                    inflateCoordinatesArray,\n                ]);\n                break;\n            case GeometryType.LINE_STRING:\n            case GeometryType.CIRCLE:\n                flatCoordinates = geometry.getFlatCoordinates();\n                builderEnd = this.appendFlatLineCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n                this.instructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEnd,\n                    geometry,\n                    renderer,\n                    inflateCoordinates,\n                ]);\n                this.hitDetectionInstructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEnd,\n                    geometry,\n                    hitDetectionRenderer || renderer,\n                    inflateCoordinates,\n                ]);\n                break;\n            case GeometryType.MULTI_POINT:\n                flatCoordinates = geometry.getFlatCoordinates();\n                builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n                if (builderEnd > builderBegin) {\n                    this.instructions.push([\n                        CanvasInstruction.CUSTOM,\n                        builderBegin,\n                        builderEnd,\n                        geometry,\n                        renderer,\n                        inflateCoordinates,\n                    ]);\n                    this.hitDetectionInstructions.push([\n                        CanvasInstruction.CUSTOM,\n                        builderBegin,\n                        builderEnd,\n                        geometry,\n                        hitDetectionRenderer || renderer,\n                        inflateCoordinates,\n                    ]);\n                }\n                break;\n            case GeometryType.POINT:\n                flatCoordinates = geometry.getFlatCoordinates();\n                this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n                builderEnd = this.coordinates.length;\n                this.instructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEnd,\n                    geometry,\n                    renderer,\n                ]);\n                this.hitDetectionInstructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEnd,\n                    geometry,\n                    hitDetectionRenderer || renderer,\n                ]);\n                break;\n            default:\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @protected\n     * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.beginGeometry = function (geometry, feature) {\n        this.beginGeometryInstruction1_ = [\n            CanvasInstruction.BEGIN_GEOMETRY,\n            feature,\n            0,\n            geometry,\n        ];\n        this.instructions.push(this.beginGeometryInstruction1_);\n        this.beginGeometryInstruction2_ = [\n            CanvasInstruction.BEGIN_GEOMETRY,\n            feature,\n            0,\n            geometry,\n        ];\n        this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n    };\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasBuilder.prototype.finish = function () {\n        return {\n            instructions: this.instructions,\n            hitDetectionInstructions: this.hitDetectionInstructions,\n            coordinates: this.coordinates,\n        };\n    };\n    /**\n     * Reverse the hit detection instructions.\n     */\n    CanvasBuilder.prototype.reverseHitDetectionInstructions = function () {\n        var hitDetectionInstructions = this.hitDetectionInstructions;\n        // step 1 - reverse array\n        hitDetectionInstructions.reverse();\n        // step 2 - reverse instructions within geometry blocks\n        var i;\n        var n = hitDetectionInstructions.length;\n        var instruction;\n        var type;\n        var begin = -1;\n        for (i = 0; i < n; ++i) {\n            instruction = hitDetectionInstructions[i];\n            type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n            if (type == CanvasInstruction.END_GEOMETRY) {\n                begin = i;\n            }\n            else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n                instruction[2] = i;\n                reverseSubArray(this.hitDetectionInstructions, begin, i);\n                begin = -1;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    CanvasBuilder.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        var state = this.state;\n        if (fillStyle) {\n            var fillStyleColor = fillStyle.getColor();\n            state.fillStyle = asColorLike(fillStyleColor ? fillStyleColor : defaultFillStyle);\n        }\n        else {\n            state.fillStyle = undefined;\n        }\n        if (strokeStyle) {\n            var strokeStyleColor = strokeStyle.getColor();\n            state.strokeStyle = asColorLike(strokeStyleColor ? strokeStyleColor : defaultStrokeStyle);\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            state.lineCap =\n                strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            state.lineDash = strokeStyleLineDash\n                ? strokeStyleLineDash.slice()\n                : defaultLineDash;\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            state.lineDashOffset = strokeStyleLineDashOffset\n                ? strokeStyleLineDashOffset\n                : defaultLineDashOffset;\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            state.lineJoin =\n                strokeStyleLineJoin !== undefined\n                    ? strokeStyleLineJoin\n                    : defaultLineJoin;\n            var strokeStyleWidth = strokeStyle.getWidth();\n            state.lineWidth =\n                strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            state.miterLimit =\n                strokeStyleMiterLimit !== undefined\n                    ? strokeStyleMiterLimit\n                    : defaultMiterLimit;\n            if (state.lineWidth > this.maxLineWidth) {\n                this.maxLineWidth = state.lineWidth;\n                // invalidate the buffered max extent cache\n                this.bufferedMaxExtent_ = null;\n            }\n        }\n        else {\n            state.strokeStyle = undefined;\n            state.lineCap = undefined;\n            state.lineDash = null;\n            state.lineDashOffset = undefined;\n            state.lineJoin = undefined;\n            state.lineWidth = undefined;\n            state.miterLimit = undefined;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Fill instruction.\n     */\n    CanvasBuilder.prototype.createFill = function (state) {\n        var fillStyle = state.fillStyle;\n        /** @type {Array<*>} */\n        var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n        if (typeof fillStyle !== 'string') {\n            // Fill is a pattern or gradient - align it!\n            fillInstruction.push(true);\n        }\n        return fillInstruction;\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     */\n    CanvasBuilder.prototype.applyStroke = function (state) {\n        this.instructions.push(this.createStroke(state));\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Stroke instruction.\n     */\n    CanvasBuilder.prototype.createStroke = function (state) {\n        return [\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle,\n            state.lineWidth * this.pixelRatio,\n            state.lineCap,\n            state.lineJoin,\n            state.miterLimit,\n            this.applyPixelRatio(state.lineDash),\n            state.lineDashOffset * this.pixelRatio,\n        ];\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n     */\n    CanvasBuilder.prototype.updateFillStyle = function (state, createFill) {\n        var fillStyle = state.fillStyle;\n        if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n            if (fillStyle !== undefined) {\n                this.instructions.push(createFill.call(this, state));\n            }\n            state.currentFillStyle = fillStyle;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n     */\n    CanvasBuilder.prototype.updateStrokeStyle = function (state, applyStroke) {\n        var strokeStyle = state.strokeStyle;\n        var lineCap = state.lineCap;\n        var lineDash = state.lineDash;\n        var lineDashOffset = state.lineDashOffset;\n        var lineJoin = state.lineJoin;\n        var lineWidth = state.lineWidth;\n        var miterLimit = state.miterLimit;\n        if (state.currentStrokeStyle != strokeStyle ||\n            state.currentLineCap != lineCap ||\n            (lineDash != state.currentLineDash &&\n                !equals(state.currentLineDash, lineDash)) ||\n            state.currentLineDashOffset != lineDashOffset ||\n            state.currentLineJoin != lineJoin ||\n            state.currentLineWidth != lineWidth ||\n            state.currentMiterLimit != miterLimit) {\n            if (strokeStyle !== undefined) {\n                applyStroke.call(this, state);\n            }\n            state.currentStrokeStyle = strokeStyle;\n            state.currentLineCap = lineCap;\n            state.currentLineDash = lineDash;\n            state.currentLineDashOffset = lineDashOffset;\n            state.currentLineJoin = lineJoin;\n            state.currentLineWidth = lineWidth;\n            state.currentMiterLimit = miterLimit;\n        }\n    };\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.endGeometry = function (feature) {\n        this.beginGeometryInstruction1_[2] = this.instructions.length;\n        this.beginGeometryInstruction1_ = null;\n        this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n        this.beginGeometryInstruction2_ = null;\n        var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n        this.instructions.push(endGeometryInstruction);\n        this.hitDetectionInstructions.push(endGeometryInstruction);\n    };\n    /**\n     * Get the buffered rendering extent.  Rendering will be clipped to the extent\n     * provided to the constructor.  To account for symbolizers that may intersect\n     * this extent, we calculate a buffered extent (e.g. based on stroke width).\n     * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n     * @protected\n     */\n    CanvasBuilder.prototype.getBufferedMaxExtent = function () {\n        if (!this.bufferedMaxExtent_) {\n            this.bufferedMaxExtent_ = clone(this.maxExtent);\n            if (this.maxLineWidth > 0) {\n                var width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n                buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n            }\n        }\n        return this.bufferedMaxExtent_;\n    };\n    return CanvasBuilder;\n}(VectorContext));\nexport default CanvasBuilder;\n//# sourceMappingURL=Builder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nvar CanvasImageBuilder = /** @class */ (function (_super) {\n    __extends(CanvasImageBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasImageBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.hitDetectionImage_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.imagePixelRatio_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorY_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.height_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.opacity_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originY_ = undefined;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.rotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size|undefined}\n         */\n        _this.scale_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.width_ = undefined;\n        /**\n         * Data shared with a text builder for combined decluttering.\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterImageWithText}\n         */\n        _this.declutterImageWithText_ = undefined;\n        return _this;\n    }\n    /**\n     * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasImageBuilder.prototype.drawPoint = function (pointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(pointGeometry, feature);\n        var flatCoordinates = pointGeometry.getFlatCoordinates();\n        var stride = pointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_ * this.imagePixelRatio_,\n            this.anchorY_ * this.imagePixelRatio_,\n            Math.ceil(this.height_ * this.imagePixelRatio_),\n            this.opacity_,\n            this.originX_,\n            this.originY_,\n            this.rotateWithView_,\n            this.rotation_,\n            [\n                (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n                (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n            ],\n            Math.ceil(this.width_ * this.imagePixelRatio_),\n            this.declutterImageWithText_,\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_,\n            this.anchorY_,\n            this.height_,\n            this.opacity_,\n            this.originX_,\n            this.originY_,\n            this.rotateWithView_,\n            this.rotation_,\n            this.scale_,\n            this.width_,\n            this.declutterImageWithText_,\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasImageBuilder.prototype.drawMultiPoint = function (multiPointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(multiPointGeometry, feature);\n        var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n        var stride = multiPointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_ * this.imagePixelRatio_,\n            this.anchorY_ * this.imagePixelRatio_,\n            Math.ceil(this.height_ * this.imagePixelRatio_),\n            this.opacity_,\n            this.originX_,\n            this.originY_,\n            this.rotateWithView_,\n            this.rotation_,\n            [\n                (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n                (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n            ],\n            Math.ceil(this.width_ * this.imagePixelRatio_),\n            this.declutterImageWithText_,\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_,\n            this.anchorY_,\n            this.height_,\n            this.opacity_,\n            this.originX_,\n            this.originY_,\n            this.rotateWithView_,\n            this.rotation_,\n            this.scale_,\n            this.width_,\n            this.declutterImageWithText_,\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasImageBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        // FIXME this doesn't really protect us against further calls to draw*Geometry\n        this.anchorX_ = undefined;\n        this.anchorY_ = undefined;\n        this.hitDetectionImage_ = null;\n        this.image_ = null;\n        this.imagePixelRatio_ = undefined;\n        this.height_ = undefined;\n        this.scale_ = undefined;\n        this.opacity_ = undefined;\n        this.originX_ = undefined;\n        this.originY_ = undefined;\n        this.rotateWithView_ = undefined;\n        this.rotation_ = undefined;\n        this.width_ = undefined;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n     * @param {Object} [opt_sharedData] Shared data.\n     */\n    CanvasImageBuilder.prototype.setImageStyle = function (imageStyle, opt_sharedData) {\n        var anchor = imageStyle.getAnchor();\n        var size = imageStyle.getSize();\n        var hitDetectionImage = imageStyle.getHitDetectionImage();\n        var image = imageStyle.getImage(this.pixelRatio);\n        var origin = imageStyle.getOrigin();\n        this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n        this.anchorX_ = anchor[0];\n        this.anchorY_ = anchor[1];\n        this.hitDetectionImage_ = hitDetectionImage;\n        this.image_ = image;\n        this.height_ = size[1];\n        this.opacity_ = imageStyle.getOpacity();\n        this.originX_ = origin[0] * this.imagePixelRatio_;\n        this.originY_ = origin[1] * this.imagePixelRatio_;\n        this.rotateWithView_ = imageStyle.getRotateWithView();\n        this.rotation_ = imageStyle.getRotation();\n        this.scale_ = imageStyle.getScaleArray();\n        this.width_ = size[0];\n        this.declutterImageWithText_ = opt_sharedData;\n    };\n    return CanvasImageBuilder;\n}(CanvasBuilder));\nexport default CanvasImageBuilder;\n//# sourceMappingURL=ImageBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, { beginPathInstruction, strokeInstruction, } from './Instruction.js';\nimport { defaultLineDash, defaultLineDashOffset } from '../canvas.js';\nvar CanvasLineStringBuilder = /** @class */ (function (_super) {\n    __extends(CanvasLineStringBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasLineStringBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} end.\n     */\n    CanvasLineStringBuilder.prototype.drawFlatCoordinates_ = function (flatCoordinates, offset, end, stride) {\n        var myBegin = this.coordinates.length;\n        var myEnd = this.appendFlatLineCoordinates(flatCoordinates, offset, end, stride, false, false);\n        var moveToLineToInstruction = [\n            CanvasInstruction.MOVE_TO_LINE_TO,\n            myBegin,\n            myEnd,\n        ];\n        this.instructions.push(moveToLineToInstruction);\n        this.hitDetectionInstructions.push(moveToLineToInstruction);\n        return end;\n    };\n    /**\n     * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasLineStringBuilder.prototype.drawLineString = function (lineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(lineStringGeometry, feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle,\n            state.lineWidth,\n            state.lineCap,\n            state.lineJoin,\n            state.miterLimit,\n            defaultLineDash,\n            defaultLineDashOffset,\n        ], beginPathInstruction);\n        var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n        var stride = lineStringGeometry.getStride();\n        this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasLineStringBuilder.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(multiLineStringGeometry, feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle,\n            state.lineWidth,\n            state.lineCap,\n            state.lineJoin,\n            state.miterLimit,\n            state.lineDash,\n            state.lineDashOffset,\n        ], beginPathInstruction);\n        var ends = multiLineStringGeometry.getEnds();\n        var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n        var stride = multiLineStringGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinates_(flatCoordinates, offset, \n            /** @type {number} */ (ends[i]), stride);\n        }\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasLineStringBuilder.prototype.finish = function () {\n        var state = this.state;\n        if (state.lastStroke != undefined &&\n            state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n        }\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     */\n    CanvasLineStringBuilder.prototype.applyStroke = function (state) {\n        if (state.lastStroke != undefined &&\n            state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n            state.lastStroke = this.coordinates.length;\n        }\n        state.lastStroke = 0;\n        _super.prototype.applyStroke.call(this, state);\n        this.instructions.push(beginPathInstruction);\n    };\n    return CanvasLineStringBuilder;\n}(CanvasBuilder));\nexport default CanvasLineStringBuilder;\n//# sourceMappingURL=LineStringBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, { beginPathInstruction, closePathInstruction, fillInstruction, strokeInstruction, } from './Instruction.js';\nimport { defaultFillStyle } from '../canvas.js';\nimport { snap } from '../../geom/flat/simplify.js';\nvar CanvasPolygonBuilder = /** @class */ (function (_super) {\n    __extends(CanvasPolygonBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasPolygonBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasPolygonBuilder.prototype.drawFlatCoordinatess_ = function (flatCoordinates, offset, ends, stride) {\n        var state = this.state;\n        var fill = state.fillStyle !== undefined;\n        var stroke = state.strokeStyle !== undefined;\n        var numEnds = ends.length;\n        this.instructions.push(beginPathInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction);\n        for (var i = 0; i < numEnds; ++i) {\n            var end = ends[i];\n            var myBegin = this.coordinates.length;\n            var myEnd = this.appendFlatLineCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n            var moveToLineToInstruction = [\n                CanvasInstruction.MOVE_TO_LINE_TO,\n                myBegin,\n                myEnd,\n            ];\n            this.instructions.push(moveToLineToInstruction);\n            this.hitDetectionInstructions.push(moveToLineToInstruction);\n            if (stroke) {\n                // Performance optimization: only call closePath() when we have a stroke.\n                // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n                this.instructions.push(closePathInstruction);\n                this.hitDetectionInstructions.push(closePathInstruction);\n            }\n            offset = end;\n        }\n        if (fill) {\n            this.instructions.push(fillInstruction);\n            this.hitDetectionInstructions.push(fillInstruction);\n        }\n        if (stroke) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        return offset;\n    };\n    /**\n     * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     */\n    CanvasPolygonBuilder.prototype.drawCircle = function (circleGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(circleGeometry, feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle,\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle,\n                state.lineWidth,\n                state.lineCap,\n                state.lineJoin,\n                state.miterLimit,\n                state.lineDash,\n                state.lineDashOffset,\n            ]);\n        }\n        var flatCoordinates = circleGeometry.getFlatCoordinates();\n        var stride = circleGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        this.appendFlatLineCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n        var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n        this.instructions.push(beginPathInstruction, circleInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n        if (state.fillStyle !== undefined) {\n            this.instructions.push(fillInstruction);\n            this.hitDetectionInstructions.push(fillInstruction);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasPolygonBuilder.prototype.drawPolygon = function (polygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(polygonGeometry, feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle,\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle,\n                state.lineWidth,\n                state.lineCap,\n                state.lineJoin,\n                state.miterLimit,\n                state.lineDash,\n                state.lineDashOffset,\n            ]);\n        }\n        var ends = polygonGeometry.getEnds();\n        var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n        var stride = polygonGeometry.getStride();\n        this.drawFlatCoordinatess_(flatCoordinates, 0, \n        /** @type {Array<number>} */ (ends), stride);\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasPolygonBuilder.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(multiPolygonGeometry, feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle,\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle,\n                state.lineWidth,\n                state.lineCap,\n                state.lineJoin,\n                state.miterLimit,\n                state.lineDash,\n                state.lineDashOffset,\n            ]);\n        }\n        var endss = multiPolygonGeometry.getEndss();\n        var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n        var stride = multiPolygonGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasPolygonBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        // We want to preserve topology when drawing polygons.  Polygons are\n        // simplified using quantization and point elimination. However, we might\n        // have received a mix of quantized and non-quantized geometries, so ensure\n        // that all are quantized by quantizing all coordinates in the batch.\n        var tolerance = this.tolerance;\n        if (tolerance !== 0) {\n            var coordinates = this.coordinates;\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n                coordinates[i] = snap(coordinates[i], tolerance);\n            }\n        }\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @private\n     */\n    CanvasPolygonBuilder.prototype.setFillStrokeStyles_ = function () {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        if (fillStyle !== undefined) {\n            this.updateFillStyle(state, this.createFill);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.updateStrokeStyle(state, this.applyStroke);\n        }\n    };\n    return CanvasPolygonBuilder;\n}(CanvasBuilder));\nexport default CanvasPolygonBuilder;\n//# sourceMappingURL=PolygonBuilder.js.map","/**\n * @module ol/geom/flat/straightchunk\n */\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n    var chunkStart = offset;\n    var chunkEnd = offset;\n    var chunkM = 0;\n    var m = 0;\n    var start = offset;\n    var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n    for (i = offset; i < end; i += stride) {\n        var x2 = flatCoordinates[i];\n        var y2 = flatCoordinates[i + 1];\n        if (x1 !== undefined) {\n            x23 = x2 - x1;\n            y23 = y2 - y1;\n            m23 = Math.sqrt(x23 * x23 + y23 * y23);\n            if (x12 !== undefined) {\n                m += m12;\n                acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n                if (acos > maxAngle) {\n                    if (m > chunkM) {\n                        chunkM = m;\n                        chunkStart = start;\n                        chunkEnd = i;\n                    }\n                    m = 0;\n                    start = i - stride;\n                }\n            }\n            m12 = m23;\n            x12 = x23;\n            y12 = y23;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    m += m23;\n    return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n//# sourceMappingURL=straightchunk.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { defaultFillStyle, defaultFont, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultPadding, defaultStrokeStyle, defaultTextAlign, defaultTextBaseline, registerFont, } from '../canvas.js';\nimport { getUid } from '../../util.js';\nimport { intersects } from '../../extent.js';\nimport { matchingChunk } from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {\n    'left': 0,\n    'end': 0,\n    'center': 0.5,\n    'right': 1,\n    'start': 1,\n    'top': 0,\n    'middle': 0.5,\n    'hanging': 0.2,\n    'alphabetic': 0.8,\n    'ideographic': 0.8,\n    'bottom': 1,\n};\nvar CanvasTextBuilder = /** @class */ (function (_super) {\n    __extends(CanvasTextBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasTextBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {Array<HTMLCanvasElement>}\n         */\n        _this.labels_ = null;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.textRotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        _this.fillStates = {};\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        _this.strokeStates = {};\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        _this.textStates = {};\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.textKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.fillKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.strokeKey_ = '';\n        /**\n         * Data shared with an image builder for combined decluttering.\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterImageWithText}\n         */\n        _this.declutterImageWithText_ = undefined;\n        return _this;\n    }\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasTextBuilder.prototype.finish = function () {\n        var instructions = _super.prototype.finish.call(this);\n        instructions.textStates = this.textStates;\n        instructions.fillStates = this.fillStates;\n        instructions.strokeStates = this.strokeStates;\n        return instructions;\n    };\n    /**\n     * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasTextBuilder.prototype.drawText = function (geometry, feature) {\n        var fillState = this.textFillState_;\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n            return;\n        }\n        var coordinates = this.coordinates;\n        var begin = coordinates.length;\n        var geometryType = geometry.getType();\n        var flatCoordinates = null;\n        var stride = geometry.getStride();\n        if (textState.placement === TextPlacement.LINE &&\n            (geometryType == GeometryType.LINE_STRING ||\n                geometryType == GeometryType.MULTI_LINE_STRING ||\n                geometryType == GeometryType.POLYGON ||\n                geometryType == GeometryType.MULTI_POLYGON)) {\n            if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n                return;\n            }\n            var ends = void 0;\n            flatCoordinates = geometry.getFlatCoordinates();\n            if (geometryType == GeometryType.LINE_STRING) {\n                ends = [flatCoordinates.length];\n            }\n            else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n                ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds();\n            }\n            else if (geometryType == GeometryType.POLYGON) {\n                ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n                    .getEnds()\n                    .slice(0, 1);\n            }\n            else if (geometryType == GeometryType.MULTI_POLYGON) {\n                var endss = \n                /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n                ends = [];\n                for (var i = 0, ii = endss.length; i < ii; ++i) {\n                    ends.push(endss[i][0]);\n                }\n            }\n            this.beginGeometry(geometry, feature);\n            var textAlign = textState.textAlign;\n            var flatOffset = 0;\n            var flatEnd = void 0;\n            for (var o = 0, oo = ends.length; o < oo; ++o) {\n                if (textAlign == undefined) {\n                    var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n                    flatOffset = range[0];\n                    flatEnd = range[1];\n                }\n                else {\n                    flatEnd = ends[o];\n                }\n                for (var i = flatOffset; i < flatEnd; i += stride) {\n                    coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n                }\n                var end = coordinates.length;\n                flatOffset = ends[o];\n                this.drawChars_(begin, end);\n                begin = end;\n            }\n            this.endGeometry(feature);\n        }\n        else {\n            var geometryWidths = textState.overflow ? null : [];\n            switch (geometryType) {\n                case GeometryType.POINT:\n                case GeometryType.MULTI_POINT:\n                    flatCoordinates =\n                        /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry).getFlatCoordinates();\n                    break;\n                case GeometryType.LINE_STRING:\n                    flatCoordinates =\n                        /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n                    break;\n                case GeometryType.CIRCLE:\n                    flatCoordinates =\n                        /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n                    break;\n                case GeometryType.MULTI_LINE_STRING:\n                    flatCoordinates =\n                        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n                    stride = 2;\n                    break;\n                case GeometryType.POLYGON:\n                    flatCoordinates =\n                        /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n                    if (!textState.overflow) {\n                        geometryWidths.push(flatCoordinates[2] / this.resolution);\n                    }\n                    stride = 3;\n                    break;\n                case GeometryType.MULTI_POLYGON:\n                    var interiorPoints = \n                    /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n                    flatCoordinates = [];\n                    for (var i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n                        if (!textState.overflow) {\n                            geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n                        }\n                        flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n                    }\n                    if (flatCoordinates.length === 0) {\n                        return;\n                    }\n                    stride = 2;\n                    break;\n                default:\n            }\n            var end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n            if (end === begin) {\n                return;\n            }\n            if (geometryWidths &&\n                (end - begin) / 2 !== flatCoordinates.length / stride) {\n                var beg_1 = begin / 2;\n                geometryWidths = geometryWidths.filter(function (w, i) {\n                    var keep = coordinates[(beg_1 + i) * 2] === flatCoordinates[i * stride] &&\n                        coordinates[(beg_1 + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n                    if (!keep) {\n                        --beg_1;\n                    }\n                    return keep;\n                });\n            }\n            this.saveTextStates_();\n            if (textState.backgroundFill || textState.backgroundStroke) {\n                this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n                if (textState.backgroundFill) {\n                    this.updateFillStyle(this.state, this.createFill);\n                    this.hitDetectionInstructions.push(this.createFill(this.state));\n                }\n                if (textState.backgroundStroke) {\n                    this.updateStrokeStyle(this.state, this.applyStroke);\n                    this.hitDetectionInstructions.push(this.createStroke(this.state));\n                }\n            }\n            this.beginGeometry(geometry, feature);\n            // adjust padding for negative scale\n            var padding = textState.padding;\n            if (padding != defaultPadding &&\n                (textState.scale[0] < 0 || textState.scale[1] < 0)) {\n                var p0 = textState.padding[0];\n                var p1 = textState.padding[1];\n                var p2 = textState.padding[2];\n                var p3 = textState.padding[3];\n                if (textState.scale[0] < 0) {\n                    p1 = -p1;\n                    p3 = -p3;\n                }\n                if (textState.scale[1] < 0) {\n                    p0 = -p0;\n                    p2 = -p2;\n                }\n                padding = [p0, p1, p2, p3];\n            }\n            // The image is unknown at this stage so we pass null; it will be computed at render time.\n            // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n            // render time.\n            var pixelRatio_1 = this.pixelRatio;\n            this.instructions.push([\n                CanvasInstruction.DRAW_IMAGE,\n                begin,\n                end,\n                null,\n                NaN,\n                NaN,\n                NaN,\n                1,\n                0,\n                0,\n                this.textRotateWithView_,\n                this.textRotation_,\n                [1, 1],\n                NaN,\n                this.declutterImageWithText_,\n                padding == defaultPadding\n                    ? defaultPadding\n                    : padding.map(function (p) {\n                        return p * pixelRatio_1;\n                    }),\n                !!textState.backgroundFill,\n                !!textState.backgroundStroke,\n                this.text_,\n                this.textKey_,\n                this.strokeKey_,\n                this.fillKey_,\n                this.textOffsetX_,\n                this.textOffsetY_,\n                geometryWidths,\n            ]);\n            var scale = 1 / pixelRatio_1;\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.DRAW_IMAGE,\n                begin,\n                end,\n                null,\n                NaN,\n                NaN,\n                NaN,\n                1,\n                0,\n                0,\n                this.textRotateWithView_,\n                this.textRotation_,\n                [scale, scale],\n                NaN,\n                this.declutterImageWithText_,\n                padding,\n                !!textState.backgroundFill,\n                !!textState.backgroundStroke,\n                this.text_,\n                this.textKey_,\n                this.strokeKey_,\n                this.fillKey_,\n                this.textOffsetX_,\n                this.textOffsetY_,\n                geometryWidths,\n            ]);\n            this.endGeometry(feature);\n        }\n    };\n    /**\n     * @private\n     */\n    CanvasTextBuilder.prototype.saveTextStates_ = function () {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var fillState = this.textFillState_;\n        var strokeKey = this.strokeKey_;\n        if (strokeState) {\n            if (!(strokeKey in this.strokeStates)) {\n                this.strokeStates[strokeKey] = {\n                    strokeStyle: strokeState.strokeStyle,\n                    lineCap: strokeState.lineCap,\n                    lineDashOffset: strokeState.lineDashOffset,\n                    lineWidth: strokeState.lineWidth,\n                    lineJoin: strokeState.lineJoin,\n                    miterLimit: strokeState.miterLimit,\n                    lineDash: strokeState.lineDash,\n                };\n            }\n        }\n        var textKey = this.textKey_;\n        if (!(textKey in this.textStates)) {\n            this.textStates[textKey] = {\n                font: textState.font,\n                textAlign: textState.textAlign || defaultTextAlign,\n                textBaseline: textState.textBaseline || defaultTextBaseline,\n                scale: textState.scale,\n            };\n        }\n        var fillKey = this.fillKey_;\n        if (fillState) {\n            if (!(fillKey in this.fillStates)) {\n                this.fillStates[fillKey] = {\n                    fillStyle: fillState.fillStyle,\n                };\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {number} begin Begin.\n     * @param {number} end End.\n     */\n    CanvasTextBuilder.prototype.drawChars_ = function (begin, end) {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var strokeKey = this.strokeKey_;\n        var textKey = this.textKey_;\n        var fillKey = this.fillKey_;\n        this.saveTextStates_();\n        var pixelRatio = this.pixelRatio;\n        var baseline = TEXT_ALIGN[textState.textBaseline];\n        var offsetY = this.textOffsetY_ * pixelRatio;\n        var text = this.text_;\n        var strokeWidth = strokeState\n            ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n            : 0;\n        this.instructions.push([\n            CanvasInstruction.DRAW_CHARS,\n            begin,\n            end,\n            baseline,\n            textState.overflow,\n            fillKey,\n            textState.maxAngle,\n            pixelRatio,\n            offsetY,\n            strokeKey,\n            strokeWidth * pixelRatio,\n            text,\n            textKey,\n            1,\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_CHARS,\n            begin,\n            end,\n            baseline,\n            textState.overflow,\n            fillKey,\n            textState.maxAngle,\n            1,\n            offsetY,\n            strokeKey,\n            strokeWidth,\n            text,\n            textKey,\n            1 / pixelRatio,\n        ]);\n    };\n    /**\n     * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n     * @param {Object} [opt_sharedData] Shared data.\n     */\n    CanvasTextBuilder.prototype.setTextStyle = function (textStyle, opt_sharedData) {\n        var textState, fillState, strokeState;\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                fillState = null;\n                this.textFillState_ = fillState;\n            }\n            else {\n                fillState = this.textFillState_;\n                if (!fillState) {\n                    fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n                    this.textFillState_ = fillState;\n                }\n                fillState.fillStyle = asColorLike(textFillStyle.getColor() || defaultFillStyle);\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                strokeState = null;\n                this.textStrokeState_ = strokeState;\n            }\n            else {\n                strokeState = this.textStrokeState_;\n                if (!strokeState) {\n                    strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n                    this.textStrokeState_ = strokeState;\n                }\n                var lineDash = textStrokeStyle.getLineDash();\n                var lineDashOffset = textStrokeStyle.getLineDashOffset();\n                var lineWidth = textStrokeStyle.getWidth();\n                var miterLimit = textStrokeStyle.getMiterLimit();\n                strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n                strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n                strokeState.lineDashOffset =\n                    lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n                strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n                strokeState.lineWidth =\n                    lineWidth === undefined ? defaultLineWidth : lineWidth;\n                strokeState.miterLimit =\n                    miterLimit === undefined ? defaultMiterLimit : miterLimit;\n                strokeState.strokeStyle = asColorLike(textStrokeStyle.getColor() || defaultStrokeStyle);\n            }\n            textState = this.textState_;\n            var font = textStyle.getFont() || defaultFont;\n            registerFont(font);\n            var textScale = textStyle.getScaleArray();\n            textState.overflow = textStyle.getOverflow();\n            textState.font = font;\n            textState.maxAngle = textStyle.getMaxAngle();\n            textState.placement = textStyle.getPlacement();\n            textState.textAlign = textStyle.getTextAlign();\n            textState.textBaseline =\n                textStyle.getTextBaseline() || defaultTextBaseline;\n            textState.backgroundFill = textStyle.getBackgroundFill();\n            textState.backgroundStroke = textStyle.getBackgroundStroke();\n            textState.padding = textStyle.getPadding() || defaultPadding;\n            textState.scale = textScale === undefined ? [1, 1] : textScale;\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            this.text_ = textStyle.getText() || '';\n            this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n            this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n            this.textRotateWithView_ =\n                textRotateWithView === undefined ? false : textRotateWithView;\n            this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n            this.strokeKey_ = strokeState\n                ? (typeof strokeState.strokeStyle == 'string'\n                    ? strokeState.strokeStyle\n                    : getUid(strokeState.strokeStyle)) +\n                    strokeState.lineCap +\n                    strokeState.lineDashOffset +\n                    '|' +\n                    strokeState.lineWidth +\n                    strokeState.lineJoin +\n                    strokeState.miterLimit +\n                    '[' +\n                    strokeState.lineDash.join() +\n                    ']'\n                : '';\n            this.textKey_ =\n                textState.font +\n                    textState.scale +\n                    (textState.textAlign || '?') +\n                    (textState.textBaseline || '?');\n            this.fillKey_ = fillState\n                ? typeof fillState.fillStyle == 'string'\n                    ? fillState.fillStyle\n                    : '|' + getUid(fillState.fillStyle)\n                : '';\n        }\n        this.declutterImageWithText_ = opt_sharedData;\n    };\n    return CanvasTextBuilder;\n}(CanvasBuilder));\nexport default CanvasTextBuilder;\n//# sourceMappingURL=TextBuilder.js.map","/**\n * @module ol/render/canvas/BuilderGroup\n */\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nvar BATCH_CONSTRUCTORS = {\n    'Circle': PolygonBuilder,\n    'Default': Builder,\n    'Image': ImageBuilder,\n    'LineString': LineStringBuilder,\n    'Polygon': PolygonBuilder,\n    'Text': TextBuilder,\n};\nvar BuilderGroup = /** @class */ (function () {\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function BuilderGroup(tolerance, maxExtent, resolution, pixelRatio) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.tolerance_ = tolerance;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n         */\n        this.buildersByZIndex_ = {};\n    }\n    /**\n     * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n     */\n    BuilderGroup.prototype.finish = function () {\n        var builderInstructions = {};\n        for (var zKey in this.buildersByZIndex_) {\n            builderInstructions[zKey] = builderInstructions[zKey] || {};\n            var builders = this.buildersByZIndex_[zKey];\n            for (var builderKey in builders) {\n                var builderInstruction = builders[builderKey].finish();\n                builderInstructions[zKey][builderKey] = builderInstruction;\n            }\n        }\n        return builderInstructions;\n    };\n    /**\n     * @param {number|undefined} zIndex Z index.\n     * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n     * @return {import(\"../VectorContext.js\").default} Replay.\n     */\n    BuilderGroup.prototype.getBuilder = function (zIndex, builderType) {\n        var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n        var replays = this.buildersByZIndex_[zIndexKey];\n        if (replays === undefined) {\n            replays = {};\n            this.buildersByZIndex_[zIndexKey] = replays;\n        }\n        var replay = replays[builderType];\n        if (replay === undefined) {\n            var Constructor = BATCH_CONSTRUCTORS[builderType];\n            replay = new Constructor(this.tolerance_, this.maxExtent_, this.resolution_, this.pixelRatio_);\n            replays[builderType] = replay;\n        }\n        return replay;\n    };\n    return BuilderGroup;\n}());\nexport default BuilderGroup;\n//# sourceMappingURL=BuilderGroup.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport { abstract } from '../util.js';\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nvar LayerRenderer = /** @class */ (function (_super) {\n    __extends(LayerRenderer, _super);\n    /**\n     * @param {LayerType} layer Layer.\n     */\n    function LayerRenderer(layer) {\n        var _this = _super.call(this) || this;\n        /** @private */\n        _this.boundHandleImageChange_ = _this.handleImageChange_.bind(_this);\n        /**\n         * @protected\n         * @type {LayerType}\n         */\n        _this.layer_ = layer;\n        /**\n         * @type {import(\"../render/canvas/ExecutorGroup\").default}\n         */\n        _this.declutterExecutorGroup = null;\n        return _this;\n    }\n    /**\n     * Asynchronous layer level hit detection.\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n     * an array of features.\n     */\n    LayerRenderer.prototype.getFeatures = function (pixel) {\n        return abstract();\n    };\n    /**\n     * Determine whether render should be called.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    LayerRenderer.prototype.prepareFrame = function (frameState) {\n        return abstract();\n    };\n    /**\n     * Render the layer.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    LayerRenderer.prototype.renderFrame = function (frameState, target) {\n        return abstract();\n    };\n    /**\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @param {number} zoom Zoom level.\n     * @param {import(\"../Tile.js\").default} tile Tile.\n     * @return {boolean|void} If `false`, the tile will not be considered loaded.\n     */\n    LayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (!tiles[zoom]) {\n            tiles[zoom] = {};\n        }\n        tiles[zoom][tile.tileCoord.toString()] = tile;\n        return undefined;\n    };\n    /**\n     * Create a function that adds loaded tiles to the tile lookup.\n     * @param {import(\"../source/Tile.js\").default} source Tile source.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n     *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n     * @protected\n     */\n    LayerRenderer.prototype.createLoadedTileFinder = function (source, projection, tiles) {\n        return (\n        /**\n         * @param {number} zoom Zoom level.\n         * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n         * @return {boolean} The tile range is fully loaded.\n         * @this {LayerRenderer}\n         */\n        function (zoom, tileRange) {\n            var callback = this.loadedTileCallback.bind(this, tiles, zoom);\n            return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n        }.bind(this));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n     * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    LayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, matches) {\n        return undefined;\n    };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    LayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        return null;\n    };\n    /**\n     * @return {LayerType} Layer.\n     */\n    LayerRenderer.prototype.getLayer = function () {\n        return this.layer_;\n    };\n    /**\n     * Perform action necessary to get the layer rendered after new fonts have loaded\n     * @abstract\n     */\n    LayerRenderer.prototype.handleFontsChanged = function () { };\n    /**\n     * Handle changes in image state.\n     * @param {import(\"../events/Event.js\").default} event Image change event.\n     * @private\n     */\n    LayerRenderer.prototype.handleImageChange_ = function (event) {\n        var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n        if (image.getState() === ImageState.LOADED) {\n            this.renderIfReadyAndVisible();\n        }\n    };\n    /**\n     * Load the image if not already loaded, and register the image change\n     * listener if needed.\n     * @param {import(\"../ImageBase.js\").default} image Image.\n     * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n     * @protected\n     */\n    LayerRenderer.prototype.loadImage = function (image) {\n        var imageState = image.getState();\n        if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n            image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n        }\n        if (imageState == ImageState.IDLE) {\n            image.load();\n            imageState = image.getState();\n        }\n        return imageState == ImageState.LOADED;\n    };\n    /**\n     * @protected\n     */\n    LayerRenderer.prototype.renderIfReadyAndVisible = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n            layer.changed();\n        }\n    };\n    return LayerRenderer;\n}(Observable));\nexport default LayerRenderer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport { apply as applyTransform, compose as composeTransform, create as createTransform, } from '../../transform.js';\nimport { containsCoordinate, getBottomLeft, getBottomRight, getTopLeft, getTopRight, } from '../../extent.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { cssOpacity } from '../../css.js';\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nvar CanvasLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasLayerRenderer, _super);\n    /**\n     * @param {LayerType} layer Layer.\n     */\n    function CanvasLayerRenderer(layer) {\n        var _this = _super.call(this, layer) || this;\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.container = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedResolution;\n        /**\n         * A temporary transform.  The values in this transform should only be used in a\n         * function that sets the values.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tempTransform = createTransform();\n        /**\n         * The transform for rendered pixels to viewport CSS pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.pixelTransform = createTransform();\n        /**\n         * The transform for viewport CSS pixels to rendered pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.inversePixelTransform = createTransform();\n        /**\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context = null;\n        /**\n         * @type {boolean}\n         */\n        _this.containerReused = false;\n        return _this;\n    }\n    /**\n     * Get a rendering container from an existing target, if compatible.\n     * @param {HTMLElement} target Potential render target.\n     * @param {string} transform CSS Transform.\n     * @param {number} opacity Opacity.\n     */\n    CanvasLayerRenderer.prototype.useContainer = function (target, transform, opacity) {\n        var layerClassName = this.getLayer().getClassName();\n        var container, context;\n        if (target &&\n            target.style.opacity === cssOpacity(opacity) &&\n            target.className === layerClassName) {\n            var canvas = target.firstElementChild;\n            if (canvas instanceof HTMLCanvasElement) {\n                context = canvas.getContext('2d');\n            }\n        }\n        if (context && context.canvas.style.transform === transform) {\n            // Container of the previous layer renderer can be used.\n            this.container = target;\n            this.context = context;\n            this.containerReused = true;\n        }\n        else if (this.containerReused) {\n            // Previously reused container cannot be used any more.\n            this.container = null;\n            this.context = null;\n            this.containerReused = false;\n        }\n        if (!this.container) {\n            container = document.createElement('div');\n            container.className = layerClassName;\n            var style = container.style;\n            style.position = 'absolute';\n            style.width = '100%';\n            style.height = '100%';\n            context = createCanvasContext2D();\n            var canvas = context.canvas;\n            container.appendChild(canvas);\n            style = canvas.style;\n            style.position = 'absolute';\n            style.left = '0';\n            style.transformOrigin = 'top left';\n            this.container = container;\n            this.context = context;\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clipUnrotated = function (context, frameState, extent) {\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        var inverted = this.inversePixelTransform;\n        applyTransform(inverted, topLeft);\n        applyTransform(inverted, topRight);\n        applyTransform(inverted, bottomRight);\n        applyTransform(inverted, bottomLeft);\n        context.save();\n        context.beginPath();\n        context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n        context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n        context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n        context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n        context.clip();\n    };\n    /**\n     * @param {import(\"../../render/EventType.js\").default} type Event type.\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    CanvasLayerRenderer.prototype.dispatchRenderEvent_ = function (type, context, frameState) {\n        var layer = this.getLayer();\n        if (layer.hasListener(type)) {\n            var event_1 = new RenderEvent(type, this.inversePixelTransform, frameState, context);\n            layer.dispatchEvent(event_1);\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.preRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.postRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n    };\n    /**\n     * Creates a transform for rendering to an element that will be rotated after rendering.\n     * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {number} width Width of the rendered element (in pixels).\n     * @param {number} height Height of the rendered element (in pixels).\n     * @param {number} offsetX Offset on the x-axis in view coordinates.\n     * @protected\n     * @return {!import(\"../../transform.js\").Transform} Transform.\n     */\n    CanvasLayerRenderer.prototype.getRenderTransform = function (center, resolution, rotation, pixelRatio, width, height, offsetX) {\n        var dx1 = width / 2;\n        var dy1 = height / 2;\n        var sx = pixelRatio / resolution;\n        var sy = -sx;\n        var dx2 = -center[0] + offsetX;\n        var dy2 = -center[1];\n        return composeTransform(this.tempTransform, dx1, dy1, sx, sy, -rotation, dx2, dy2);\n    };\n    /**\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    CanvasLayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        var renderPixel = applyTransform(this.inversePixelTransform, pixel.slice());\n        var context = this.context;\n        var layer = this.getLayer();\n        var layerExtent = layer.getExtent();\n        if (layerExtent) {\n            var renderCoordinate = applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n            /** get only data inside of the layer extent */\n            if (!containsCoordinate(layerExtent, renderCoordinate)) {\n                return null;\n            }\n        }\n        var data;\n        try {\n            var x = Math.round(renderPixel[0]);\n            var y = Math.round(renderPixel[1]);\n            var newCanvas = document.createElement('canvas');\n            var newContext = newCanvas.getContext('2d');\n            newCanvas.width = 1;\n            newCanvas.height = 1;\n            newContext.clearRect(0, 0, 1, 1);\n            newContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n            data = newContext.getImageData(0, 0, 1, 1).data;\n        }\n        catch (err) {\n            if (err.name === 'SecurityError') {\n                // tainted canvas, we assume there is data at the given pixel (although there might not be)\n                return new Uint8Array();\n            }\n            return data;\n        }\n        if (data[3] === 0) {\n            return null;\n        }\n        return data;\n    };\n    return CanvasLayerRenderer;\n}(LayerRenderer));\nexport default CanvasLayerRenderer;\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/render/canvas/BuilderType\n */\n/**\n * @enum {string}\n */\nexport default {\n    CIRCLE: 'Circle',\n    DEFAULT: 'Default',\n    IMAGE: 'Image',\n    LINE_STRING: 'LineString',\n    POLYGON: 'Polygon',\n    TEXT: 'Text',\n};\n//# sourceMappingURL=BuilderType.js.map","/**\n * @module ol/geom/flat/textpath\n */\nimport { lerp } from '../../math.js';\nimport { rotate } from './transform.js';\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(flatCoordinates, offset, end, stride, text, startM, maxAngle, scale, measureAndCacheTextWidth, font, cache, rotation) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    var x1 = 0;\n    var y1 = 0;\n    var segmentLength = 0;\n    var segmentM = 0;\n    function advance() {\n        x1 = x2;\n        y1 = y2;\n        offset += stride;\n        x2 = flatCoordinates[offset];\n        y2 = flatCoordinates[offset + 1];\n        segmentM += segmentLength;\n        segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    }\n    do {\n        advance();\n    } while (offset < end - stride && segmentM + segmentLength < startM);\n    var interpolate = segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n    var beginX = lerp(x1, x2, interpolate);\n    var beginY = lerp(y1, y2, interpolate);\n    var startOffset = offset - stride;\n    var startLength = segmentM;\n    var endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n    while (offset < end - stride && segmentM + segmentLength < endM) {\n        advance();\n    }\n    interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n    var endX = lerp(x1, x2, interpolate);\n    var endY = lerp(y1, y2, interpolate);\n    // Keep text upright\n    var reverse;\n    if (rotation) {\n        var flat = [beginX, beginY, endX, endY];\n        rotate(flat, 0, 4, 2, rotation, flat, flat);\n        reverse = flat[0] > flat[2];\n    }\n    else {\n        reverse = beginX > endX;\n    }\n    var PI = Math.PI;\n    var result = [];\n    var singleSegment = startOffset + stride === offset;\n    offset = startOffset;\n    segmentLength = 0;\n    segmentM = startLength;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    var previousAngle;\n    // All on the same segment\n    if (singleSegment) {\n        advance();\n        previousAngle = Math.atan2(y2 - y1, x2 - x1);\n        if (reverse) {\n            previousAngle += previousAngle > 0 ? -PI : PI;\n        }\n        var x = (endX + beginX) / 2;\n        var y = (endY + beginY) / 2;\n        result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n        return result;\n    }\n    for (var i = 0, ii = text.length; i < ii;) {\n        advance();\n        var angle = Math.atan2(y2 - y1, x2 - x1);\n        if (reverse) {\n            angle += angle > 0 ? -PI : PI;\n        }\n        if (previousAngle !== undefined) {\n            var delta = angle - previousAngle;\n            delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n            if (Math.abs(delta) > maxAngle) {\n                return null;\n            }\n        }\n        previousAngle = angle;\n        var iStart = i;\n        var charLength = 0;\n        for (; i < ii; ++i) {\n            var index = reverse ? ii - i - 1 : i;\n            var len = scale * measureAndCacheTextWidth(font, text[index], cache);\n            if (offset + stride < end &&\n                segmentM + segmentLength < startM + charLength + len / 2) {\n                break;\n            }\n            charLength += len;\n        }\n        if (i === iStart) {\n            continue;\n        }\n        var chars = reverse\n            ? text.substring(ii - iStart, ii - i)\n            : text.substring(iStart, i);\n        interpolate =\n            segmentLength === 0\n                ? 0\n                : (startM + charLength / 2 - segmentM) / segmentLength;\n        var x = lerp(x1, x2, interpolate);\n        var y = lerp(y1, y2, interpolate);\n        result.push([x, y, charLength / 2, angle, chars]);\n        startM += charLength;\n    }\n    return result;\n}\n//# sourceMappingURL=textpath.js.map","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport { TEXT_ALIGN } from './TextBuilder.js';\nimport { WORKER_OFFSCREEN_CANVAS } from '../../has.js';\nimport { apply as applyTransform, compose as composeTransform, create as createTransform, setFromArray as transformSetFromArray, } from '../../transform.js';\nimport { createEmpty, createOrUpdate, intersects } from '../../extent.js';\nimport { defaultPadding, defaultTextBaseline, drawImageOrLabel, } from '../canvas.js';\nimport { defaultTextAlign, measureAndCacheTextWidth, measureTextHeight, measureTextWidths, } from '../canvas.js';\nimport { drawTextOnPath } from '../../geom/flat/textpath.js';\nimport { equals } from '../../array.js';\nimport { lineStringLength } from '../../geom/flat/length.js';\nimport { transform2D } from '../../geom/flat/transform.js';\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nvar tmpExtent = createEmpty();\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p4 = [];\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n    return replayImageOrLabelArgs[3].declutterBox;\n}\nvar rtlRegEx = new RegExp(\n/* eslint-disable prettier/prettier */\n'[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n    ']'\n/* eslint-enable prettier/prettier */\n);\n/**\n * @param {string} text Text.\n * @param {string} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n    if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n        align = align === 'start' ? 'left' : 'right';\n    }\n    return TEXT_ALIGN[align];\n}\nvar Executor = /** @class */ (function () {\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The replay can have overlapping geometries.\n     * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n     */\n    function Executor(resolution, pixelRatio, overlaps, instructions) {\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        this.overlaps = overlaps;\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        this.resolution = resolution;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.alignFill_;\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        this.instructions = instructions.instructions;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        this.coordinates = instructions.coordinates;\n        /**\n         * @private\n         * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n         */\n        this.coordinateCache_ = {};\n        /**\n         * @private\n         * @type {!import(\"../../transform.js\").Transform}\n         */\n        this.renderedTransform_ = createTransform();\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.pixelCoordinates_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.viewRotation_ = 0;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        this.fillStates = instructions.fillStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        this.strokeStates = instructions.strokeStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        this.textStates = instructions.textStates || {};\n        /**\n         * @private\n         * @type {Object<string, Object<string, number>>}\n         */\n        this.widths_ = {};\n        /**\n         * @private\n         * @type {Object<string, import(\"../canvas.js\").Label>}\n         */\n        this.labels_ = {};\n    }\n    /**\n     * @param {string} text Text.\n     * @param {string} textKey Text style key.\n     * @param {string} fillKey Fill style key.\n     * @param {string} strokeKey Stroke style key.\n     * @return {import(\"../canvas.js\").Label} Label.\n     */\n    Executor.prototype.createLabel = function (text, textKey, fillKey, strokeKey) {\n        var key = text + textKey + fillKey + strokeKey;\n        if (this.labels_[key]) {\n            return this.labels_[key];\n        }\n        var strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n        var fillState = fillKey ? this.fillStates[fillKey] : null;\n        var textState = this.textStates[textKey];\n        var pixelRatio = this.pixelRatio;\n        var scale = [\n            textState.scale[0] * pixelRatio,\n            textState.scale[1] * pixelRatio,\n        ];\n        var align = horizontalTextAlign(text, textState.textAlign || defaultTextAlign);\n        var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n        var lines = text.split('\\n');\n        var numLines = lines.length;\n        var widths = [];\n        var width = measureTextWidths(textState.font, lines, widths);\n        var lineHeight = measureTextHeight(textState.font);\n        var height = lineHeight * numLines;\n        var renderWidth = width + strokeWidth;\n        var contextInstructions = [];\n        // make canvas 2 pixels wider to account for italic text width measurement errors\n        var w = (renderWidth + 2) * scale[0];\n        var h = (height + strokeWidth) * scale[1];\n        /** @type {import(\"../canvas.js\").Label} */\n        var label = {\n            width: w < 0 ? Math.floor(w) : Math.ceil(w),\n            height: h < 0 ? Math.floor(h) : Math.ceil(h),\n            contextInstructions: contextInstructions,\n        };\n        if (scale[0] != 1 || scale[1] != 1) {\n            contextInstructions.push('scale', scale);\n        }\n        contextInstructions.push('font', textState.font);\n        if (strokeKey) {\n            contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n            contextInstructions.push('lineWidth', strokeWidth);\n            contextInstructions.push('lineCap', strokeState.lineCap);\n            contextInstructions.push('lineJoin', strokeState.lineJoin);\n            contextInstructions.push('miterLimit', strokeState.miterLimit);\n            // eslint-disable-next-line\n            var Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n            if (Context.prototype.setLineDash) {\n                contextInstructions.push('setLineDash', [strokeState.lineDash]);\n                contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n            }\n        }\n        if (fillKey) {\n            contextInstructions.push('fillStyle', fillState.fillStyle);\n        }\n        contextInstructions.push('textBaseline', 'middle');\n        contextInstructions.push('textAlign', 'center');\n        var leftRight = 0.5 - align;\n        var x = align * renderWidth + leftRight * strokeWidth;\n        var i;\n        if (strokeKey) {\n            for (i = 0; i < numLines; ++i) {\n                contextInstructions.push('strokeText', [\n                    lines[i],\n                    x + leftRight * widths[i],\n                    0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n                ]);\n            }\n        }\n        if (fillKey) {\n            for (i = 0; i < numLines; ++i) {\n                contextInstructions.push('fillText', [\n                    lines[i],\n                    x + leftRight * widths[i],\n                    0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n                ]);\n            }\n        }\n        this.labels_[key] = label;\n        return label;\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     */\n    Executor.prototype.replayTextBackground_ = function (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n        context.beginPath();\n        context.moveTo.apply(context, p1);\n        context.lineTo.apply(context, p2);\n        context.lineTo.apply(context, p3);\n        context.lineTo.apply(context, p4);\n        context.lineTo.apply(context, p1);\n        if (fillInstruction) {\n            this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n            this.fill_(context);\n        }\n        if (strokeInstruction) {\n            this.setStrokeStyle_(context, \n            /** @type {Array<*>} */ (strokeInstruction));\n            context.stroke();\n        }\n    };\n    /**\n     * @private\n     * @param {number} sheetWidth Width of the sprite sheet.\n     * @param {number} sheetHeight Height of the sprite sheet.\n     * @param {number} centerX X.\n     * @param {number} centerY Y.\n     * @param {number} width Width.\n     * @param {number} height Height.\n     * @param {number} anchorX Anchor X.\n     * @param {number} anchorY Anchor Y.\n     * @param {number} originX Origin X.\n     * @param {number} originY Origin Y.\n     * @param {number} rotation Rotation.\n     * @param {import(\"../../size.js\").Size} scale Scale.\n     * @param {boolean} snapToPixel Snap to pixel.\n     * @param {Array<number>} padding Padding.\n     * @param {boolean} fillStroke Background fill or stroke.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n     */\n    Executor.prototype.calculateImageOrLabelDimensions_ = function (sheetWidth, sheetHeight, centerX, centerY, width, height, anchorX, anchorY, originX, originY, rotation, scale, snapToPixel, padding, fillStroke, feature) {\n        anchorX *= scale[0];\n        anchorY *= scale[1];\n        var x = centerX - anchorX;\n        var y = centerY - anchorY;\n        var w = width + originX > sheetWidth ? sheetWidth - originX : width;\n        var h = height + originY > sheetHeight ? sheetHeight - originY : height;\n        var boxW = padding[3] + w * scale[0] + padding[1];\n        var boxH = padding[0] + h * scale[1] + padding[2];\n        var boxX = x - padding[3];\n        var boxY = y - padding[0];\n        if (fillStroke || rotation !== 0) {\n            p1[0] = boxX;\n            p4[0] = boxX;\n            p1[1] = boxY;\n            p2[1] = boxY;\n            p2[0] = boxX + boxW;\n            p3[0] = p2[0];\n            p3[1] = boxY + boxH;\n            p4[1] = p3[1];\n        }\n        var transform;\n        if (rotation !== 0) {\n            transform = composeTransform(createTransform(), centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n            applyTransform(transform, p1);\n            applyTransform(transform, p2);\n            applyTransform(transform, p3);\n            applyTransform(transform, p4);\n            createOrUpdate(Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1]), tmpExtent);\n        }\n        else {\n            createOrUpdate(Math.min(boxX, boxX + boxW), Math.min(boxY, boxY + boxH), Math.max(boxX, boxX + boxW), Math.max(boxY, boxY + boxH), tmpExtent);\n        }\n        if (snapToPixel) {\n            x = Math.round(x);\n            y = Math.round(y);\n        }\n        return {\n            drawImageX: x,\n            drawImageY: y,\n            drawImageW: w,\n            drawImageH: h,\n            originX: originX,\n            originY: originY,\n            declutterBox: {\n                minX: tmpExtent[0],\n                minY: tmpExtent[1],\n                maxX: tmpExtent[2],\n                maxY: tmpExtent[3],\n                value: feature,\n            },\n            canvasTransform: transform,\n            scale: scale,\n        };\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n     * @param {ImageOrLabelDimensions} dimensions Dimensions.\n     * @param {number} opacity Opacity.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     * @return {boolean} The image or label was rendered.\n     */\n    Executor.prototype.replayImageOrLabel_ = function (context, contextScale, imageOrLabel, dimensions, opacity, fillInstruction, strokeInstruction) {\n        var fillStroke = !!(fillInstruction || strokeInstruction);\n        var box = dimensions.declutterBox;\n        var canvas = context.canvas;\n        var strokePadding = strokeInstruction\n            ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n            : 0;\n        var intersects = box.minX - strokePadding <= canvas.width / contextScale &&\n            box.maxX + strokePadding >= 0 &&\n            box.minY - strokePadding <= canvas.height / contextScale &&\n            box.maxY + strokePadding >= 0;\n        if (intersects) {\n            if (fillStroke) {\n                this.replayTextBackground_(context, p1, p2, p3, p4, \n                /** @type {Array<*>} */ (fillInstruction), \n                /** @type {Array<*>} */ (strokeInstruction));\n            }\n            drawImageOrLabel(context, dimensions.canvasTransform, opacity, imageOrLabel, dimensions.originX, dimensions.originY, dimensions.drawImageW, dimensions.drawImageH, dimensions.drawImageX, dimensions.drawImageY, dimensions.scale);\n        }\n        return true;\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     */\n    Executor.prototype.fill_ = function (context) {\n        if (this.alignFill_) {\n            var origin_1 = applyTransform(this.renderedTransform_, [0, 0]);\n            var repeatSize = 512 * this.pixelRatio;\n            context.save();\n            context.translate(origin_1[0] % repeatSize, origin_1[1] % repeatSize);\n            context.rotate(this.viewRotation_);\n        }\n        context.fill();\n        if (this.alignFill_) {\n            context.restore();\n        }\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {Array<*>} instruction Instruction.\n     */\n    Executor.prototype.setStrokeStyle_ = function (context, instruction) {\n        context['strokeStyle'] =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n        context.lineWidth = /** @type {number} */ (instruction[2]);\n        context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n        context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n        context.miterLimit = /** @type {number} */ (instruction[5]);\n        if (context.setLineDash) {\n            context.lineDashOffset = /** @type {number} */ (instruction[7]);\n            context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n        }\n    };\n    /**\n     * @private\n     * @param {string} text The text to draw.\n     * @param {string} textKey The key of the text state.\n     * @param {string} strokeKey The key for the stroke state.\n     * @param {string} fillKey The key for the fill state.\n     * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n     */\n    Executor.prototype.drawLabelWithPointPlacement_ = function (text, textKey, strokeKey, fillKey) {\n        var textState = this.textStates[textKey];\n        var label = this.createLabel(text, textKey, fillKey, strokeKey);\n        var strokeState = this.strokeStates[strokeKey];\n        var pixelRatio = this.pixelRatio;\n        var align = horizontalTextAlign(text, textState.textAlign || defaultTextAlign);\n        var baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n        var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n        // Remove the 2 pixels we added in createLabel() for the anchor\n        var width = label.width / pixelRatio - 2 * textState.scale[0];\n        var anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n        var anchorY = (baseline * label.height) / pixelRatio +\n            2 * (0.5 - baseline) * strokeWidth;\n        return {\n            label: label,\n            anchorX: anchorX,\n            anchorY: anchorY,\n        };\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {Array<*>} instructions Instructions array.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n     * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n     *     features that intersect this extent.\n     * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.execute_ = function (context, contextScale, transform, instructions, snapToPixel, opt_featureCallback, opt_hitExtent, opt_declutterTree) {\n        /** @type {Array<number>} */\n        var pixelCoordinates;\n        if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n            pixelCoordinates = this.pixelCoordinates_;\n        }\n        else {\n            if (!this.pixelCoordinates_) {\n                this.pixelCoordinates_ = [];\n            }\n            pixelCoordinates = transform2D(this.coordinates, 0, this.coordinates.length, 2, transform, this.pixelCoordinates_);\n            transformSetFromArray(this.renderedTransform_, transform);\n        }\n        var i = 0; // instruction index\n        var ii = instructions.length; // end of instructions\n        var d = 0; // data index\n        var dd; // end of per-instruction data\n        var anchorX, anchorY, prevX, prevY, roundX, roundY, image, text, textKey, strokeKey, fillKey;\n        var pendingFill = 0;\n        var pendingStroke = 0;\n        var lastFillInstruction = null;\n        var lastStrokeInstruction = null;\n        var coordinateCache = this.coordinateCache_;\n        var viewRotation = this.viewRotation_;\n        var viewRotationFromTransform = Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n        var state = /** @type {import(\"../../render.js\").State} */ ({\n            context: context,\n            pixelRatio: this.pixelRatio,\n            resolution: this.resolution,\n            rotation: viewRotation,\n        });\n        // When the batch size gets too big, performance decreases. 200 is a good\n        // balance between batch size and number of fill/stroke instructions.\n        var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n        var /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n        var x, y, currentGeometry;\n        while (i < ii) {\n            var instruction = instructions[i];\n            var type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n            switch (type) {\n                case CanvasInstruction.BEGIN_GEOMETRY:\n                    feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                    currentGeometry = instruction[3];\n                    if (!feature.getGeometry()) {\n                        i = /** @type {number} */ (instruction[2]);\n                    }\n                    else if (opt_hitExtent !== undefined &&\n                        !intersects(opt_hitExtent, currentGeometry.getExtent())) {\n                        i = /** @type {number} */ (instruction[2]) + 1;\n                    }\n                    else {\n                        ++i;\n                    }\n                    break;\n                case CanvasInstruction.BEGIN_PATH:\n                    if (pendingFill > batchSize) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                    }\n                    if (pendingStroke > batchSize) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    if (!pendingFill && !pendingStroke) {\n                        context.beginPath();\n                        prevX = NaN;\n                        prevY = NaN;\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.CIRCLE:\n                    d = /** @type {number} */ (instruction[1]);\n                    var x1 = pixelCoordinates[d];\n                    var y1 = pixelCoordinates[d + 1];\n                    var x2 = pixelCoordinates[d + 2];\n                    var y2 = pixelCoordinates[d + 3];\n                    var dx = x2 - x1;\n                    var dy = y2 - y1;\n                    var r = Math.sqrt(dx * dx + dy * dy);\n                    context.moveTo(x1 + r, y1);\n                    context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n                    ++i;\n                    break;\n                case CanvasInstruction.CLOSE_PATH:\n                    context.closePath();\n                    ++i;\n                    break;\n                case CanvasInstruction.CUSTOM:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = instruction[2];\n                    var geometry = \n                    /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n                    var renderer = instruction[4];\n                    var fn = instruction.length == 6 ? instruction[5] : undefined;\n                    state.geometry = geometry;\n                    state.feature = feature;\n                    if (!(i in coordinateCache)) {\n                        coordinateCache[i] = [];\n                    }\n                    var coords = coordinateCache[i];\n                    if (fn) {\n                        fn(pixelCoordinates, d, dd, 2, coords);\n                    }\n                    else {\n                        coords[0] = pixelCoordinates[d];\n                        coords[1] = pixelCoordinates[d + 1];\n                        coords.length = 2;\n                    }\n                    renderer(coords, state);\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_IMAGE:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    image =\n                        /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (instruction[3]);\n                    // Remaining arguments in DRAW_IMAGE are in alphabetical order\n                    anchorX = /** @type {number} */ (instruction[4]);\n                    anchorY = /** @type {number} */ (instruction[5]);\n                    var height = /** @type {number} */ (instruction[6]);\n                    var opacity = /** @type {number} */ (instruction[7]);\n                    var originX = /** @type {number} */ (instruction[8]);\n                    var originY = /** @type {number} */ (instruction[9]);\n                    var rotateWithView = /** @type {boolean} */ (instruction[10]);\n                    var rotation = /** @type {number} */ (instruction[11]);\n                    var scale = /** @type {import(\"../../size.js\").Size} */ (instruction[12]);\n                    var width = /** @type {number} */ (instruction[13]);\n                    var declutterImageWithText = \n                    /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (instruction[14]);\n                    if (!image && instruction.length >= 19) {\n                        // create label images\n                        text = /** @type {string} */ (instruction[18]);\n                        textKey = /** @type {string} */ (instruction[19]);\n                        strokeKey = /** @type {string} */ (instruction[20]);\n                        fillKey = /** @type {string} */ (instruction[21]);\n                        var labelWithAnchor = this.drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey);\n                        image = labelWithAnchor.label;\n                        instruction[3] = image;\n                        var textOffsetX = /** @type {number} */ (instruction[22]);\n                        anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n                        instruction[4] = anchorX;\n                        var textOffsetY = /** @type {number} */ (instruction[23]);\n                        anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n                        instruction[5] = anchorY;\n                        height = image.height;\n                        instruction[6] = height;\n                        width = image.width;\n                        instruction[13] = width;\n                    }\n                    var geometryWidths = void 0;\n                    if (instruction.length > 24) {\n                        geometryWidths = /** @type {number} */ (instruction[24]);\n                    }\n                    var padding = void 0, backgroundFill = void 0, backgroundStroke = void 0;\n                    if (instruction.length > 16) {\n                        padding = /** @type {Array<number>} */ (instruction[15]);\n                        backgroundFill = /** @type {boolean} */ (instruction[16]);\n                        backgroundStroke = /** @type {boolean} */ (instruction[17]);\n                    }\n                    else {\n                        padding = defaultPadding;\n                        backgroundFill = false;\n                        backgroundStroke = false;\n                    }\n                    if (rotateWithView && viewRotationFromTransform) {\n                        // Canvas is expected to be rotated to reverse view rotation.\n                        rotation += viewRotation;\n                    }\n                    else if (!rotateWithView && !viewRotationFromTransform) {\n                        // Canvas is not rotated, images need to be rotated back to be north-up.\n                        rotation -= viewRotation;\n                    }\n                    var widthIndex = 0;\n                    for (; d < dd; d += 2) {\n                        if (geometryWidths &&\n                            geometryWidths[widthIndex++] < width / this.pixelRatio) {\n                            continue;\n                        }\n                        var dimensions = this.calculateImageOrLabelDimensions_(image.width, image.height, pixelCoordinates[d], pixelCoordinates[d + 1], width, height, anchorX, anchorY, originX, originY, rotation, scale, snapToPixel, padding, backgroundFill || backgroundStroke, feature);\n                        /** @type {ReplayImageOrLabelArgs} */\n                        var args = [\n                            context,\n                            contextScale,\n                            image,\n                            dimensions,\n                            opacity,\n                            backgroundFill\n                                ? /** @type {Array<*>} */ (lastFillInstruction)\n                                : null,\n                            backgroundStroke\n                                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                                : null,\n                        ];\n                        var imageArgs = void 0;\n                        var imageDeclutterBox = void 0;\n                        if (opt_declutterTree && declutterImageWithText) {\n                            var index = dd - d;\n                            if (!declutterImageWithText[index]) {\n                                // We now have the image for an image+text combination.\n                                declutterImageWithText[index] = args;\n                                // Don't render anything for now, wait for the text.\n                                continue;\n                            }\n                            imageArgs = declutterImageWithText[index];\n                            delete declutterImageWithText[index];\n                            imageDeclutterBox = getDeclutterBox(imageArgs);\n                            if (opt_declutterTree.collides(imageDeclutterBox)) {\n                                continue;\n                            }\n                        }\n                        if (opt_declutterTree &&\n                            opt_declutterTree.collides(dimensions.declutterBox)) {\n                            continue;\n                        }\n                        if (imageArgs) {\n                            // We now have image and text for an image+text combination.\n                            if (opt_declutterTree) {\n                                opt_declutterTree.insert(imageDeclutterBox);\n                            }\n                            // Render the image before we render the text.\n                            this.replayImageOrLabel_.apply(this, imageArgs);\n                        }\n                        if (opt_declutterTree) {\n                            opt_declutterTree.insert(dimensions.declutterBox);\n                        }\n                        this.replayImageOrLabel_.apply(this, args);\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_CHARS:\n                    var begin = /** @type {number} */ (instruction[1]);\n                    var end = /** @type {number} */ (instruction[2]);\n                    var baseline = /** @type {number} */ (instruction[3]);\n                    var overflow = /** @type {number} */ (instruction[4]);\n                    fillKey = /** @type {string} */ (instruction[5]);\n                    var maxAngle = /** @type {number} */ (instruction[6]);\n                    var measurePixelRatio = /** @type {number} */ (instruction[7]);\n                    var offsetY = /** @type {number} */ (instruction[8]);\n                    strokeKey = /** @type {string} */ (instruction[9]);\n                    var strokeWidth = /** @type {number} */ (instruction[10]);\n                    text = /** @type {string} */ (instruction[11]);\n                    textKey = /** @type {string} */ (instruction[12]);\n                    var pixelRatioScale = [\n                        /** @type {number} */ (instruction[13]),\n                        /** @type {number} */ (instruction[13]),\n                    ];\n                    var textState = this.textStates[textKey];\n                    var font = textState.font;\n                    var textScale = [\n                        textState.scale[0] * measurePixelRatio,\n                        textState.scale[1] * measurePixelRatio,\n                    ];\n                    var cachedWidths = void 0;\n                    if (font in this.widths_) {\n                        cachedWidths = this.widths_[font];\n                    }\n                    else {\n                        cachedWidths = {};\n                        this.widths_[font] = cachedWidths;\n                    }\n                    var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n                    var textLength = Math.abs(textScale[0]) *\n                        measureAndCacheTextWidth(font, text, cachedWidths);\n                    if (overflow || textLength <= pathLength) {\n                        var textAlign = this.textStates[textKey].textAlign;\n                        var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n                        var parts = drawTextOnPath(pixelCoordinates, begin, end, 2, text, startM, maxAngle, Math.abs(textScale[0]), measureAndCacheTextWidth, font, cachedWidths, viewRotationFromTransform ? 0 : this.viewRotation_);\n                        drawChars: if (parts) {\n                            /** @type {Array<ReplayImageOrLabelArgs>} */\n                            var replayImageOrLabelArgs = [];\n                            var c = void 0, cc = void 0, chars = void 0, label = void 0, part = void 0;\n                            if (strokeKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.createLabel(chars, textKey, '', strokeKey);\n                                    anchorX =\n                                        /** @type {number} */ (part[2]) +\n                                            (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                                    anchorY =\n                                        baseline * label.height +\n                                            ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                                                textScale[0] -\n                                            offsetY;\n                                    var dimensions = this.calculateImageOrLabelDimensions_(label.width, label.height, part[0], part[1], label.width, label.height, anchorX, anchorY, 0, 0, part[3], pixelRatioScale, false, defaultPadding, false, feature);\n                                    if (opt_declutterTree &&\n                                        opt_declutterTree.collides(dimensions.declutterBox)) {\n                                        break drawChars;\n                                    }\n                                    replayImageOrLabelArgs.push([\n                                        context,\n                                        contextScale,\n                                        label,\n                                        dimensions,\n                                        1,\n                                        null,\n                                        null,\n                                    ]);\n                                }\n                            }\n                            if (fillKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.createLabel(chars, textKey, fillKey, '');\n                                    anchorX = /** @type {number} */ (part[2]);\n                                    anchorY = baseline * label.height - offsetY;\n                                    var dimensions = this.calculateImageOrLabelDimensions_(label.width, label.height, part[0], part[1], label.width, label.height, anchorX, anchorY, 0, 0, part[3], pixelRatioScale, false, defaultPadding, false, feature);\n                                    if (opt_declutterTree &&\n                                        opt_declutterTree.collides(dimensions.declutterBox)) {\n                                        break drawChars;\n                                    }\n                                    replayImageOrLabelArgs.push([\n                                        context,\n                                        contextScale,\n                                        label,\n                                        dimensions,\n                                        1,\n                                        null,\n                                        null,\n                                    ]);\n                                }\n                            }\n                            if (opt_declutterTree) {\n                                opt_declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n                            }\n                            for (var i_1 = 0, ii_1 = replayImageOrLabelArgs.length; i_1 < ii_1; ++i_1) {\n                                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i_1]);\n                            }\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.END_GEOMETRY:\n                    if (opt_featureCallback !== undefined) {\n                        feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                        var result = opt_featureCallback(feature, currentGeometry);\n                        if (result) {\n                            return result;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.FILL:\n                    if (batchSize) {\n                        pendingFill++;\n                    }\n                    else {\n                        this.fill_(context);\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.MOVE_TO_LINE_TO:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    x = pixelCoordinates[d];\n                    y = pixelCoordinates[d + 1];\n                    roundX = (x + 0.5) | 0;\n                    roundY = (y + 0.5) | 0;\n                    if (roundX !== prevX || roundY !== prevY) {\n                        context.moveTo(x, y);\n                        prevX = roundX;\n                        prevY = roundY;\n                    }\n                    for (d += 2; d < dd; d += 2) {\n                        x = pixelCoordinates[d];\n                        y = pixelCoordinates[d + 1];\n                        roundX = (x + 0.5) | 0;\n                        roundY = (y + 0.5) | 0;\n                        if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n                            context.lineTo(x, y);\n                            prevX = roundX;\n                            prevY = roundY;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_FILL_STYLE:\n                    lastFillInstruction = instruction;\n                    this.alignFill_ = instruction[2];\n                    if (pendingFill) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                        if (pendingStroke) {\n                            context.stroke();\n                            pendingStroke = 0;\n                        }\n                    }\n                    context.fillStyle =\n                        /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_STROKE_STYLE:\n                    lastStrokeInstruction = instruction;\n                    if (pendingStroke) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n                    ++i;\n                    break;\n                case CanvasInstruction.STROKE:\n                    if (batchSize) {\n                        pendingStroke++;\n                    }\n                    else {\n                        context.stroke();\n                    }\n                    ++i;\n                    break;\n                default:\n                    ++i; // consume the instruction anyway, to avoid an infinite loop\n                    break;\n            }\n        }\n        if (pendingFill) {\n            this.fill_(context);\n        }\n        if (pendingStroke) {\n            context.stroke();\n        }\n        return undefined;\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n     */\n    Executor.prototype.execute = function (context, contextScale, transform, viewRotation, snapToPixel, opt_declutterTree) {\n        this.viewRotation_ = viewRotation;\n        this.execute_(context, contextScale, transform, this.instructions, snapToPixel, undefined, undefined, opt_declutterTree);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n     * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n     *     features that intersect this extent.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.executeHitDetection = function (context, transform, viewRotation, opt_featureCallback, opt_hitExtent) {\n        this.viewRotation_ = viewRotation;\n        return this.execute_(context, 1, transform, this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\n    };\n    return Executor;\n}());\nexport default Executor;\n//# sourceMappingURL=Executor.js.map","/**\n * @module ol/render/canvas/ExecutorGroup\n */\nimport BuilderType from './BuilderType.js';\nimport Executor from './Executor.js';\nimport { buffer, createEmpty, extendCoordinate } from '../../extent.js';\nimport { compose as composeTransform, create as createTransform, } from '../../transform.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { isEmpty } from '../../obj.js';\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { transform2D } from '../../geom/flat/transform.js';\n/**\n * @const\n * @type {Array<import(\"./BuilderType.js\").default>}\n */\nvar ORDER = [\n    BuilderType.POLYGON,\n    BuilderType.CIRCLE,\n    BuilderType.LINE_STRING,\n    BuilderType.IMAGE,\n    BuilderType.TEXT,\n    BuilderType.DEFAULT,\n];\nvar ExecutorGroup = /** @class */ (function () {\n    /**\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n     * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n     * should be set here, unless the target context does not exceed that extent (which\n     * can be the case when rendering to tiles).\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The executor group can have overlapping geometries.\n     * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n     * The serializable instructions.\n     * @param {number} [opt_renderBuffer] Optional rendering buffer.\n     */\n    function ExecutorGroup(maxExtent, resolution, pixelRatio, overlaps, allInstructions, opt_renderBuffer) {\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.overlaps_ = overlaps;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.renderBuffer_ = opt_renderBuffer;\n        /**\n         * @private\n         * @type {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Executor\").default>>}\n         */\n        this.executorsByZIndex_ = {};\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        this.hitDetectionContext_ = null;\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        this.hitDetectionTransform_ = createTransform();\n        this.createExecutors_(allInstructions);\n    }\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     */\n    ExecutorGroup.prototype.clip = function (context, transform) {\n        var flatClipCoords = this.getClipCoords(transform);\n        context.beginPath();\n        context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n        context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n        context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n        context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n        context.clip();\n    };\n    /**\n     * Create executors and populate them using the provided instructions.\n     * @private\n     * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n     */\n    ExecutorGroup.prototype.createExecutors_ = function (allInstructions) {\n        for (var zIndex in allInstructions) {\n            var executors = this.executorsByZIndex_[zIndex];\n            if (executors === undefined) {\n                executors = {};\n                this.executorsByZIndex_[zIndex] = executors;\n            }\n            var instructionByZindex = allInstructions[zIndex];\n            for (var builderType in instructionByZindex) {\n                var instructions = instructionByZindex[builderType];\n                executors[builderType] = new Executor(this.resolution_, this.pixelRatio_, this.overlaps_, instructions);\n            }\n        }\n    };\n    /**\n     * @param {Array<import(\"./BuilderType.js\").default>} executors Executors.\n     * @return {boolean} Has executors of the provided types.\n     */\n    ExecutorGroup.prototype.hasExecutors = function (executors) {\n        for (var zIndex in this.executorsByZIndex_) {\n            var candidates = this.executorsByZIndex_[zIndex];\n            for (var i = 0, ii = executors.length; i < ii; ++i) {\n                if (executors[i] in candidates) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n     * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    ExecutorGroup.prototype.forEachFeatureAtCoordinate = function (coordinate, resolution, rotation, hitTolerance, callback, declutteredFeatures) {\n        hitTolerance = Math.round(hitTolerance);\n        var contextSize = hitTolerance * 2 + 1;\n        var transform = composeTransform(this.hitDetectionTransform_, hitTolerance + 0.5, hitTolerance + 0.5, 1 / resolution, -1 / resolution, -rotation, -coordinate[0], -coordinate[1]);\n        var newContext = !this.hitDetectionContext_;\n        if (newContext) {\n            this.hitDetectionContext_ = createCanvasContext2D(contextSize, contextSize);\n        }\n        var context = this.hitDetectionContext_;\n        if (context.canvas.width !== contextSize ||\n            context.canvas.height !== contextSize) {\n            context.canvas.width = contextSize;\n            context.canvas.height = contextSize;\n        }\n        else if (!newContext) {\n            context.clearRect(0, 0, contextSize, contextSize);\n        }\n        /**\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        var hitExtent;\n        if (this.renderBuffer_ !== undefined) {\n            hitExtent = createEmpty();\n            extendCoordinate(hitExtent, coordinate);\n            buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n        }\n        var indexes = getPixelIndexArray(hitTolerance);\n        var builderType;\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n         * @return {T|undefined} Callback result.\n         */\n        function featureCallback(feature, geometry) {\n            var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n            for (var i_1 = 0, ii = indexes.length; i_1 < ii; i_1++) {\n                if (imageData[indexes[i_1]] > 0) {\n                    if (!declutteredFeatures ||\n                        (builderType !== BuilderType.IMAGE &&\n                            builderType !== BuilderType.TEXT) ||\n                        declutteredFeatures.indexOf(feature) !== -1) {\n                        var idx = (indexes[i_1] - 3) / 4;\n                        var x = hitTolerance - (idx % contextSize);\n                        var y = hitTolerance - ((idx / contextSize) | 0);\n                        var result_1 = callback(feature, geometry, x * x + y * y);\n                        if (result_1) {\n                            return result_1;\n                        }\n                    }\n                    context.clearRect(0, 0, contextSize, contextSize);\n                    break;\n                }\n            }\n            return undefined;\n        }\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        var i, j, executors, executor, result;\n        for (i = zs.length - 1; i >= 0; --i) {\n            var zIndexKey = zs[i].toString();\n            executors = this.executorsByZIndex_[zIndexKey];\n            for (j = ORDER.length - 1; j >= 0; --j) {\n                builderType = ORDER[j];\n                executor = executors[builderType];\n                if (executor !== undefined) {\n                    result = executor.executeHitDetection(context, transform, rotation, featureCallback, hitExtent);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @return {Array<number>} Clip coordinates.\n     */\n    ExecutorGroup.prototype.getClipCoords = function (transform) {\n        var maxExtent = this.maxExtent_;\n        if (!maxExtent) {\n            return null;\n        }\n        var minX = maxExtent[0];\n        var minY = maxExtent[1];\n        var maxX = maxExtent[2];\n        var maxY = maxExtent[3];\n        var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n        transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n        return flatClipCoords;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    ExecutorGroup.prototype.isEmpty = function () {\n        return isEmpty(this.executorsByZIndex_);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n     * @param {Array<import(\"./BuilderType.js\").default>} [opt_builderTypes] Ordered replay types to replay.\n     *     Default is {@link module:ol/render/replay~ORDER}\n     * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n     */\n    ExecutorGroup.prototype.execute = function (context, contextScale, transform, viewRotation, snapToPixel, opt_builderTypes, opt_declutterTree) {\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        // setup clipping so that the parts of over-simplified geometries are not\n        // visible outside the current extent when panning\n        if (this.maxExtent_) {\n            context.save();\n            this.clip(context, transform);\n        }\n        var builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n        var i, ii, j, jj, replays, replay;\n        if (opt_declutterTree) {\n            zs.reverse();\n        }\n        for (i = 0, ii = zs.length; i < ii; ++i) {\n            var zIndexKey = zs[i].toString();\n            replays = this.executorsByZIndex_[zIndexKey];\n            for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n                var builderType = builderTypes[j];\n                replay = replays[builderType];\n                if (replay !== undefined) {\n                    replay.execute(context, contextScale, transform, viewRotation, snapToPixel, opt_declutterTree);\n                }\n            }\n        }\n        if (this.maxExtent_) {\n            context.restore();\n        }\n    };\n    return ExecutorGroup;\n}());\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nvar circlePixelIndexArrayCache = {};\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n    if (circlePixelIndexArrayCache[radius] !== undefined) {\n        return circlePixelIndexArrayCache[radius];\n    }\n    var size = radius * 2 + 1;\n    var maxDistanceSq = radius * radius;\n    var distances = new Array(maxDistanceSq + 1);\n    for (var i = 0; i <= radius; ++i) {\n        for (var j = 0; j <= radius; ++j) {\n            var distanceSq = i * i + j * j;\n            if (distanceSq > maxDistanceSq) {\n                break;\n            }\n            var distance = distances[distanceSq];\n            if (!distance) {\n                distance = [];\n                distances[distanceSq] = distance;\n            }\n            distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n            if (i > 0) {\n                distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n            }\n            if (j > 0) {\n                distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n                if (i > 0) {\n                    distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n                }\n            }\n        }\n    }\n    var pixelIndex = [];\n    for (var i = 0, ii = distances.length; i < ii; ++i) {\n        if (distances[i]) {\n            pixelIndex.push.apply(pixelIndex, distances[i]);\n        }\n    }\n    circlePixelIndexArrayCache[radius] = pixelIndex;\n    return pixelIndex;\n}\nexport default ExecutorGroup;\n//# sourceMappingURL=ExecutorGroup.js.map","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorContext from '../VectorContext.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { compose as composeTransform, create as createTransform, } from '../../transform.js';\nimport { defaultFillStyle, defaultFont, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextAlign, defaultTextBaseline, } from '../canvas.js';\nimport { equals } from '../../array.js';\nimport { intersects } from '../../extent.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport { transformGeom2D } from '../../geom/SimpleGeometry.js';\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nvar CanvasImmediateRenderer = /** @class */ (function (_super) {\n    __extends(CanvasImmediateRenderer, _super);\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {number} [opt_squaredTolerance] Optional squared tolerance for simplification.\n     * @param {import(\"../../proj.js\").TransformFunction} [opt_userTransform] Transform from user to view projection.\n     */\n    function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation, opt_squaredTolerance, opt_userTransform) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context_ = context;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.extent_ = extent;\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.transform_ = transform;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.viewRotation_ = viewRotation;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.squaredTolerance_ = opt_squaredTolerance;\n        /**\n         * @private\n         * @type {import(\"../../proj.js\").TransformFunction}\n         */\n        _this.userTransform_ = opt_userTransform;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.contextFillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.contextStrokeState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").TextState}\n         */\n        _this.contextTextState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.fillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.strokeState_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageAnchorX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageAnchorY_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageHeight_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOpacity_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOriginX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOriginY_ = 0;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.imageRotateWithView_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageRotation_ = 0;\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size}\n         */\n        _this.imageScale_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageWidth_ = 0;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.textRotateWithView_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size}\n         */\n        _this.textScale_ = [0, 0];\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.pixelCoordinates_ = [];\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tmpLocalTransform_ = createTransform();\n        return _this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.drawImages_ = function (flatCoordinates, offset, end, stride) {\n        if (!this.image_) {\n            return;\n        }\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        var context = this.context_;\n        var localTransform = this.tmpLocalTransform_;\n        var alpha = context.globalAlpha;\n        if (this.imageOpacity_ != 1) {\n            context.globalAlpha = alpha * this.imageOpacity_;\n        }\n        var rotation = this.imageRotation_;\n        if (this.imageRotateWithView_) {\n            rotation += this.viewRotation_;\n        }\n        for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n            var x = pixelCoordinates[i] - this.imageAnchorX_;\n            var y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n            if (rotation !== 0 ||\n                this.imageScale_[0] != 1 ||\n                this.imageScale_[1] != 1) {\n                var centerX = x + this.imageAnchorX_;\n                var centerY = y + this.imageAnchorY_;\n                composeTransform(localTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n                context.setTransform.apply(context, localTransform);\n                context.translate(centerX, centerY);\n                context.scale(this.imageScale_[0], this.imageScale_[1]);\n                context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, -this.imageAnchorX_, -this.imageAnchorY_, this.imageWidth_, this.imageHeight_);\n                context.setTransform(1, 0, 0, 1, 0, 0);\n            }\n            else {\n                context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, x, y, this.imageWidth_, this.imageHeight_);\n            }\n        }\n        if (this.imageOpacity_ != 1) {\n            context.globalAlpha = alpha;\n        }\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.drawText_ = function (flatCoordinates, offset, end, stride) {\n        if (!this.textState_ || this.text_ === '') {\n            return;\n        }\n        if (this.textFillState_) {\n            this.setContextFillState_(this.textFillState_);\n        }\n        if (this.textStrokeState_) {\n            this.setContextStrokeState_(this.textStrokeState_);\n        }\n        this.setContextTextState_(this.textState_);\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        var context = this.context_;\n        var rotation = this.textRotation_;\n        if (this.textRotateWithView_) {\n            rotation += this.viewRotation_;\n        }\n        for (; offset < end; offset += stride) {\n            var x = pixelCoordinates[offset] + this.textOffsetX_;\n            var y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n            if (rotation !== 0 ||\n                this.textScale_[0] != 1 ||\n                this.textScale_[1] != 1) {\n                var localTransform = composeTransform(this.tmpLocalTransform_, x, y, 1, 1, rotation, -x, -y);\n                context.setTransform.apply(context, localTransform);\n                context.translate(x, y);\n                context.scale(this.textScale_[0], this.textScale_[1]);\n                if (this.textStrokeState_) {\n                    context.strokeText(this.text_, 0, 0);\n                }\n                if (this.textFillState_) {\n                    context.fillText(this.text_, 0, 0);\n                }\n                context.setTransform(1, 0, 0, 1, 0, 0);\n            }\n            else {\n                if (this.textStrokeState_) {\n                    context.strokeText(this.text_, x, y);\n                }\n                if (this.textFillState_) {\n                    context.fillText(this.text_, x, y);\n                }\n            }\n        }\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} close Close.\n     * @private\n     * @return {number} end End.\n     */\n    CanvasImmediateRenderer.prototype.moveToLineTo_ = function (flatCoordinates, offset, end, stride, close) {\n        var context = this.context_;\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n        var length = pixelCoordinates.length;\n        if (close) {\n            length -= 2;\n        }\n        for (var i = 2; i < length; i += 2) {\n            context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n        }\n        if (close) {\n            context.closePath();\n        }\n        return end;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasImmediateRenderer.prototype.drawRings_ = function (flatCoordinates, offset, ends, stride) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n        }\n        return offset;\n    };\n    /**\n     * Render a circle geometry into the canvas.  Rendering is immediate and uses\n     * the current fill and stroke styles.\n     *\n     * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawCircle = function (geometry) {\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.fillState_ || this.strokeState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var pixelCoordinates = transformGeom2D(geometry, this.transform_, this.pixelCoordinates_);\n            var dx = pixelCoordinates[2] - pixelCoordinates[0];\n            var dy = pixelCoordinates[3] - pixelCoordinates[1];\n            var radius = Math.sqrt(dx * dx + dy * dy);\n            var context = this.context_;\n            context.beginPath();\n            context.arc(pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            this.drawText_(geometry.getCenter(), 0, 2, 2);\n        }\n    };\n    /**\n     * Set the rendering style.  Note that since this is an immediate rendering API,\n     * any `zIndex` on the provided style will be ignored.\n     *\n     * @param {import(\"../../style/Style.js\").default} style The rendering style.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.setStyle = function (style) {\n        this.setFillStrokeStyle(style.getFill(), style.getStroke());\n        this.setImageStyle(style.getImage());\n        this.setTextStyle(style.getText());\n    };\n    /**\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     */\n    CanvasImmediateRenderer.prototype.setTransform = function (transform) {\n        this.transform_ = transform;\n    };\n    /**\n     * Render a geometry into the canvas.  Call\n     * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n     *\n     * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawGeometry = function (geometry) {\n        var type = geometry.getType();\n        switch (type) {\n            case GeometryType.POINT:\n                this.drawPoint(\n                /** @type {import(\"../../geom/Point.js\").default} */ (geometry));\n                break;\n            case GeometryType.LINE_STRING:\n                this.drawLineString(\n                /** @type {import(\"../../geom/LineString.js\").default} */ (geometry));\n                break;\n            case GeometryType.POLYGON:\n                this.drawPolygon(\n                /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_POINT:\n                this.drawMultiPoint(\n                /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_LINE_STRING:\n                this.drawMultiLineString(\n                /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_POLYGON:\n                this.drawMultiPolygon(\n                /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry));\n                break;\n            case GeometryType.GEOMETRY_COLLECTION:\n                this.drawGeometryCollection(\n                /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry));\n                break;\n            case GeometryType.CIRCLE:\n                this.drawCircle(\n                /** @type {import(\"../../geom/Circle.js\").default} */ (geometry));\n                break;\n            default:\n        }\n    };\n    /**\n     * Render a feature into the canvas.  Note that any `zIndex` on the provided\n     * style will be ignored - features are rendered immediately in the order that\n     * this method is called.  If you need `zIndex` support, you should be using an\n     * {@link module:ol/layer/Vector~VectorLayer VectorLayer} instead.\n     *\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {import(\"../../style/Style.js\").default} style Style.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawFeature = function (feature, style) {\n        var geometry = style.getGeometryFunction()(feature);\n        if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        this.setStyle(style);\n        this.drawGeometry(geometry);\n    };\n    /**\n     * Render a GeometryCollection to the canvas.  Rendering is immediate and\n     * uses the current styles appropriate for each geometry in the collection.\n     *\n     * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n     */\n    CanvasImmediateRenderer.prototype.drawGeometryCollection = function (geometry) {\n        var geometries = geometry.getGeometriesArray();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            this.drawGeometry(geometries[i]);\n        }\n    };\n    /**\n     * Render a Point geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawPoint = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/Point.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        if (this.image_) {\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n        if (this.text_ !== '') {\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n    };\n    /**\n     * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n     * uses the current style.\n     *\n     * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawMultiPoint = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        if (this.image_) {\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n        if (this.text_ !== '') {\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n    };\n    /**\n     * Render a LineString into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawLineString = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_) {\n            this.setContextStrokeState_(this.strokeState_);\n            var context = this.context_;\n            var flatCoordinates = geometry.getFlatCoordinates();\n            context.beginPath();\n            this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length, geometry.getStride(), false);\n            context.stroke();\n        }\n        if (this.text_ !== '') {\n            var flatMidpoint = geometry.getFlatMidpoint();\n            this.drawText_(flatMidpoint, 0, 2, 2);\n        }\n    };\n    /**\n     * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n     * and uses the current style.\n     *\n     * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawMultiLineString = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry =\n                /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var geometryExtent = geometry.getExtent();\n        if (!intersects(this.extent_, geometryExtent)) {\n            return;\n        }\n        if (this.strokeState_) {\n            this.setContextStrokeState_(this.strokeState_);\n            var context = this.context_;\n            var flatCoordinates = geometry.getFlatCoordinates();\n            var offset = 0;\n            var ends = /** @type {Array<number>} */ (geometry.getEnds());\n            var stride = geometry.getStride();\n            context.beginPath();\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n            }\n            context.stroke();\n        }\n        if (this.text_ !== '') {\n            var flatMidpoints = geometry.getFlatMidpoints();\n            this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n        }\n    };\n    /**\n     * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawPolygon = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_ || this.fillState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var context = this.context_;\n            context.beginPath();\n            this.drawRings_(geometry.getOrientedFlatCoordinates(), 0, \n            /** @type {Array<number>} */ (geometry.getEnds()), geometry.getStride());\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            var flatInteriorPoint = geometry.getFlatInteriorPoint();\n            this.drawText_(flatInteriorPoint, 0, 2, 2);\n        }\n    };\n    /**\n     * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n     * uses the current style.\n     * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawMultiPolygon = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_ || this.fillState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var context = this.context_;\n            var flatCoordinates = geometry.getOrientedFlatCoordinates();\n            var offset = 0;\n            var endss = geometry.getEndss();\n            var stride = geometry.getStride();\n            context.beginPath();\n            for (var i = 0, ii = endss.length; i < ii; ++i) {\n                var ends = endss[i];\n                offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n            }\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            var flatInteriorPoints = geometry.getFlatInteriorPoints();\n            this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextFillState_ = function (fillState) {\n        var context = this.context_;\n        var contextFillState = this.contextFillState_;\n        if (!contextFillState) {\n            context.fillStyle = fillState.fillStyle;\n            this.contextFillState_ = {\n                fillStyle: fillState.fillStyle,\n            };\n        }\n        else {\n            if (contextFillState.fillStyle != fillState.fillStyle) {\n                contextFillState.fillStyle = fillState.fillStyle;\n                context.fillStyle = fillState.fillStyle;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextStrokeState_ = function (strokeState) {\n        var context = this.context_;\n        var contextStrokeState = this.contextStrokeState_;\n        if (!contextStrokeState) {\n            context.lineCap = strokeState.lineCap;\n            if (context.setLineDash) {\n                context.setLineDash(strokeState.lineDash);\n                context.lineDashOffset = strokeState.lineDashOffset;\n            }\n            context.lineJoin = strokeState.lineJoin;\n            context.lineWidth = strokeState.lineWidth;\n            context.miterLimit = strokeState.miterLimit;\n            context.strokeStyle = strokeState.strokeStyle;\n            this.contextStrokeState_ = {\n                lineCap: strokeState.lineCap,\n                lineDash: strokeState.lineDash,\n                lineDashOffset: strokeState.lineDashOffset,\n                lineJoin: strokeState.lineJoin,\n                lineWidth: strokeState.lineWidth,\n                miterLimit: strokeState.miterLimit,\n                strokeStyle: strokeState.strokeStyle,\n            };\n        }\n        else {\n            if (contextStrokeState.lineCap != strokeState.lineCap) {\n                contextStrokeState.lineCap = strokeState.lineCap;\n                context.lineCap = strokeState.lineCap;\n            }\n            if (context.setLineDash) {\n                if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n                    context.setLineDash((contextStrokeState.lineDash = strokeState.lineDash));\n                }\n                if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n                    contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n                    context.lineDashOffset = strokeState.lineDashOffset;\n                }\n            }\n            if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n                contextStrokeState.lineJoin = strokeState.lineJoin;\n                context.lineJoin = strokeState.lineJoin;\n            }\n            if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n                contextStrokeState.lineWidth = strokeState.lineWidth;\n                context.lineWidth = strokeState.lineWidth;\n            }\n            if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n                contextStrokeState.miterLimit = strokeState.miterLimit;\n                context.miterLimit = strokeState.miterLimit;\n            }\n            if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n                contextStrokeState.strokeStyle = strokeState.strokeStyle;\n                context.strokeStyle = strokeState.strokeStyle;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").TextState} textState Text state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextTextState_ = function (textState) {\n        var context = this.context_;\n        var contextTextState = this.contextTextState_;\n        var textAlign = textState.textAlign\n            ? textState.textAlign\n            : defaultTextAlign;\n        if (!contextTextState) {\n            context.font = textState.font;\n            context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n            context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n            this.contextTextState_ = {\n                font: textState.font,\n                textAlign: textAlign,\n                textBaseline: textState.textBaseline,\n            };\n        }\n        else {\n            if (contextTextState.font != textState.font) {\n                contextTextState.font = textState.font;\n                context.font = textState.font;\n            }\n            if (contextTextState.textAlign != textAlign) {\n                contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n                context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n            }\n            if (contextTextState.textBaseline != textState.textBaseline) {\n                contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n                context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n            }\n        }\n    };\n    /**\n     * Set the fill and stroke style for subsequent draw operations.  To clear\n     * either fill or stroke styles, pass null for the appropriate parameter.\n     *\n     * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    CanvasImmediateRenderer.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        var _this = this;\n        if (!fillStyle) {\n            this.fillState_ = null;\n        }\n        else {\n            var fillStyleColor = fillStyle.getColor();\n            this.fillState_ = {\n                fillStyle: asColorLike(fillStyleColor ? fillStyleColor : defaultFillStyle),\n            };\n        }\n        if (!strokeStyle) {\n            this.strokeState_ = null;\n        }\n        else {\n            var strokeStyleColor = strokeStyle.getColor();\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            var strokeStyleWidth = strokeStyle.getWidth();\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            var lineDash = strokeStyleLineDash\n                ? strokeStyleLineDash\n                : defaultLineDash;\n            this.strokeState_ = {\n                lineCap: strokeStyleLineCap !== undefined\n                    ? strokeStyleLineCap\n                    : defaultLineCap,\n                lineDash: this.pixelRatio_ === 1\n                    ? lineDash\n                    : lineDash.map(function (n) { return n * _this.pixelRatio_; }),\n                lineDashOffset: (strokeStyleLineDashOffset\n                    ? strokeStyleLineDashOffset\n                    : defaultLineDashOffset) * this.pixelRatio_,\n                lineJoin: strokeStyleLineJoin !== undefined\n                    ? strokeStyleLineJoin\n                    : defaultLineJoin,\n                lineWidth: (strokeStyleWidth !== undefined\n                    ? strokeStyleWidth\n                    : defaultLineWidth) * this.pixelRatio_,\n                miterLimit: strokeStyleMiterLimit !== undefined\n                    ? strokeStyleMiterLimit\n                    : defaultMiterLimit,\n                strokeStyle: asColorLike(strokeStyleColor ? strokeStyleColor : defaultStrokeStyle),\n            };\n        }\n    };\n    /**\n     * Set the image style for subsequent draw operations.  Pass null to remove\n     * the image style.\n     *\n     * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n     */\n    CanvasImmediateRenderer.prototype.setImageStyle = function (imageStyle) {\n        var imageSize;\n        if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n            this.image_ = null;\n            return;\n        }\n        var imageAnchor = imageStyle.getAnchor();\n        var imageOrigin = imageStyle.getOrigin();\n        this.image_ = imageStyle.getImage(this.pixelRatio_);\n        this.imageAnchorX_ = imageAnchor[0] * this.pixelRatio_;\n        this.imageAnchorY_ = imageAnchor[1] * this.pixelRatio_;\n        this.imageHeight_ = imageSize[1] * this.pixelRatio_;\n        this.imageOpacity_ = imageStyle.getOpacity();\n        this.imageOriginX_ = imageOrigin[0];\n        this.imageOriginY_ = imageOrigin[1];\n        this.imageRotateWithView_ = imageStyle.getRotateWithView();\n        this.imageRotation_ = imageStyle.getRotation();\n        this.imageScale_ = imageStyle.getScaleArray();\n        this.imageWidth_ = imageSize[0] * this.pixelRatio_;\n    };\n    /**\n     * Set the text style for subsequent draw operations.  Pass null to\n     * remove the text style.\n     *\n     * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n     */\n    CanvasImmediateRenderer.prototype.setTextStyle = function (textStyle) {\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                this.textFillState_ = null;\n            }\n            else {\n                var textFillStyleColor = textFillStyle.getColor();\n                this.textFillState_ = {\n                    fillStyle: asColorLike(textFillStyleColor ? textFillStyleColor : defaultFillStyle),\n                };\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                this.textStrokeState_ = null;\n            }\n            else {\n                var textStrokeStyleColor = textStrokeStyle.getColor();\n                var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n                var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n                var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n                var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n                var textStrokeStyleWidth = textStrokeStyle.getWidth();\n                var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n                this.textStrokeState_ = {\n                    lineCap: textStrokeStyleLineCap !== undefined\n                        ? textStrokeStyleLineCap\n                        : defaultLineCap,\n                    lineDash: textStrokeStyleLineDash\n                        ? textStrokeStyleLineDash\n                        : defaultLineDash,\n                    lineDashOffset: textStrokeStyleLineDashOffset\n                        ? textStrokeStyleLineDashOffset\n                        : defaultLineDashOffset,\n                    lineJoin: textStrokeStyleLineJoin !== undefined\n                        ? textStrokeStyleLineJoin\n                        : defaultLineJoin,\n                    lineWidth: textStrokeStyleWidth !== undefined\n                        ? textStrokeStyleWidth\n                        : defaultLineWidth,\n                    miterLimit: textStrokeStyleMiterLimit !== undefined\n                        ? textStrokeStyleMiterLimit\n                        : defaultMiterLimit,\n                    strokeStyle: asColorLike(textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle),\n                };\n            }\n            var textFont = textStyle.getFont();\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            var textScale = textStyle.getScaleArray();\n            var textText = textStyle.getText();\n            var textTextAlign = textStyle.getTextAlign();\n            var textTextBaseline = textStyle.getTextBaseline();\n            this.textState_ = {\n                font: textFont !== undefined ? textFont : defaultFont,\n                textAlign: textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n                textBaseline: textTextBaseline !== undefined\n                    ? textTextBaseline\n                    : defaultTextBaseline,\n            };\n            this.text_ = textText !== undefined ? textText : '';\n            this.textOffsetX_ =\n                textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n            this.textOffsetY_ =\n                textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n            this.textRotateWithView_ =\n                textRotateWithView !== undefined ? textRotateWithView : false;\n            this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n            this.textScale_ = [\n                this.pixelRatio_ * textScale[0],\n                this.pixelRatio_ * textScale[1],\n            ];\n        }\n    };\n    return CanvasImmediateRenderer;\n}(VectorContext));\nexport default CanvasImmediateRenderer;\n//# sourceMappingURL=Immediate.js.map","/**\n * @module ol/render/canvas/hitdetect\n */\nimport CanvasImmediateRenderer from './Immediate.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport { Icon } from '../../style.js';\nimport { clamp } from '../../math.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { intersects } from '../../extent.js';\nimport { numberSafeCompareFunction } from '../../array.js';\nexport var HIT_DETECT_RESOLUTION = 0.5;\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(size, transforms, features, styleFunction, extent, resolution, rotation) {\n    var width = size[0] * HIT_DETECT_RESOLUTION;\n    var height = size[1] * HIT_DETECT_RESOLUTION;\n    var context = createCanvasContext2D(width, height);\n    context.imageSmoothingEnabled = false;\n    var canvas = context.canvas;\n    var renderer = new CanvasImmediateRenderer(context, HIT_DETECT_RESOLUTION, extent, null, rotation);\n    var featureCount = features.length;\n    // Stretch hit detection index to use the whole available color range\n    var indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n    var featuresByZIndex = {};\n    for (var i = 1; i <= featureCount; ++i) {\n        var feature = features[i - 1];\n        var featureStyleFunction = feature.getStyleFunction() || styleFunction;\n        if (!styleFunction) {\n            continue;\n        }\n        var styles = featureStyleFunction(feature, resolution);\n        if (!styles) {\n            continue;\n        }\n        if (!Array.isArray(styles)) {\n            styles = [styles];\n        }\n        var index = i * indexFactor;\n        var color = '#' + ('000000' + index.toString(16)).slice(-6);\n        for (var j = 0, jj = styles.length; j < jj; ++j) {\n            var originalStyle = styles[j];\n            var geometry = originalStyle.getGeometryFunction()(feature);\n            if (!geometry || !intersects(extent, geometry.getExtent())) {\n                continue;\n            }\n            var style = originalStyle.clone();\n            var fill = style.getFill();\n            if (fill) {\n                fill.setColor(color);\n            }\n            var stroke = style.getStroke();\n            if (stroke) {\n                stroke.setColor(color);\n                stroke.setLineDash(null);\n            }\n            style.setText(undefined);\n            var image = originalStyle.getImage();\n            if (image && image.getOpacity() !== 0) {\n                var imgSize = image.getImageSize();\n                if (!imgSize) {\n                    continue;\n                }\n                var imgContext = createCanvasContext2D(imgSize[0], imgSize[1], undefined, { alpha: false });\n                var img = imgContext.canvas;\n                imgContext.fillStyle = color;\n                imgContext.fillRect(0, 0, img.width, img.height);\n                style.setImage(new Icon({\n                    img: img,\n                    imgSize: imgSize,\n                    anchor: image.getAnchor(),\n                    anchorXUnits: IconAnchorUnits.PIXELS,\n                    anchorYUnits: IconAnchorUnits.PIXELS,\n                    offset: image.getOrigin(),\n                    opacity: 1,\n                    size: image.getSize(),\n                    scale: image.getScale(),\n                    rotation: image.getRotation(),\n                    rotateWithView: image.getRotateWithView(),\n                }));\n            }\n            var zIndex = style.getZIndex() || 0;\n            var byGeometryType = featuresByZIndex[zIndex];\n            if (!byGeometryType) {\n                byGeometryType = {};\n                featuresByZIndex[zIndex] = byGeometryType;\n                byGeometryType[GeometryType.POLYGON] = [];\n                byGeometryType[GeometryType.CIRCLE] = [];\n                byGeometryType[GeometryType.LINE_STRING] = [];\n                byGeometryType[GeometryType.POINT] = [];\n            }\n            byGeometryType[geometry.getType().replace('Multi', '')].push(geometry, style);\n        }\n    }\n    var zIndexKeys = Object.keys(featuresByZIndex)\n        .map(Number)\n        .sort(numberSafeCompareFunction);\n    for (var i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n        var byGeometryType = featuresByZIndex[zIndexKeys[i]];\n        for (var type in byGeometryType) {\n            var geomAndStyle = byGeometryType[type];\n            for (var j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n                renderer.setStyle(geomAndStyle[j + 1]);\n                for (var k = 0, kk = transforms.length; k < kk; ++k) {\n                    renderer.setTransform(transforms[k]);\n                    renderer.drawGeometry(geomAndStyle[j]);\n                }\n            }\n        }\n    }\n    return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n    var resultFeatures = [];\n    if (imageData) {\n        var x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n        var y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n        // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n        // for browsers returning coordinates slightly larger than the actual canvas size\n        // due to a non-integer pixel ratio.\n        var index = (clamp(x, 0, imageData.width - 1) +\n            clamp(y, 0, imageData.height - 1) * imageData.width) *\n            4;\n        var r = imageData.data[index];\n        var g = imageData.data[index + 1];\n        var b = imageData.data[index + 2];\n        var i = b + 256 * (g + 256 * r);\n        var indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n        if (i && i % indexFactor === 0) {\n            resultFeatures.push(features[i / indexFactor - 1]);\n        }\n    }\n    return resultFeatures;\n}\n//# sourceMappingURL=hitdetect.js.map","/**\n * @module ol/renderer/vector\n */\nimport BuilderType from '../render/canvas/BuilderType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ImageState from '../ImageState.js';\nimport { getUid } from '../util.js';\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature feature} or {@link module:ol/render/Feature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nvar GEOMETRY_RENDERERS = {\n    'Point': renderPointGeometry,\n    'LineString': renderLineStringGeometry,\n    'Polygon': renderPolygonGeometry,\n    'MultiPoint': renderMultiPointGeometry,\n    'MultiLineString': renderMultiLineStringGeometry,\n    'MultiPolygon': renderMultiPolygonGeometry,\n    'GeometryCollection': renderGeometryCollectionGeometry,\n    'Circle': renderCircleGeometry,\n};\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n    return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n    var tolerance = getTolerance(resolution, pixelRatio);\n    return tolerance * tolerance;\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n    return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var circleReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.CIRCLE);\n        circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        circleReplay.drawCircle(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, opt_transform, opt_declutterBuilderGroup) {\n    var loading = false;\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        var imageState = imageStyle.getImageState();\n        if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n            imageStyle.unlistenImageChange(listener);\n        }\n        else {\n            if (imageState == ImageState.IDLE) {\n                imageStyle.load();\n            }\n            imageState = imageStyle.getImageState();\n            imageStyle.listenImageChange(listener);\n            loading = true;\n        }\n    }\n    renderFeatureInternal(replayGroup, feature, style, squaredTolerance, opt_transform, opt_declutterBuilderGroup);\n    return loading;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance, opt_transform, opt_declutterBuilderGroup) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n        return;\n    }\n    var simplifiedGeometry = geometry.simplifyTransformed(squaredTolerance, opt_transform);\n    var renderer = style.getRenderer();\n    if (renderer) {\n        renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n    }\n    else {\n        var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n        geometryRenderer(replayGroup, simplifiedGeometry, style, feature, opt_declutterBuilderGroup);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n    if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n        var geometries = \n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            renderGeometry(replayGroup, geometries[i], style, feature);\n        }\n        return;\n    }\n    var replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n    replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry), feature, style.getRenderer(), style.getHitDetectionRenderer());\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var geometries = geometry.getGeometriesArray();\n    var i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n        var geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n        geometryRenderer(replayGroup, geometries[i], style, feature, opt_declutterBuilderGroup);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawMultiLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (strokeStyle || fillStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawMultiPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var imageStyle = style.getImage();\n    var textStyle = style.getText();\n    /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n    var declutterImageWithText;\n    if (opt_declutterBuilderGroup) {\n        builderGroup = opt_declutterBuilderGroup;\n        declutterImageWithText =\n            imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n    }\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n        imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n        imageReplay.drawPoint(geometry, feature);\n    }\n    if (textStyle && textStyle.getText()) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, declutterImageWithText);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var imageStyle = style.getImage();\n    var textStyle = style.getText();\n    /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n    var declutterImageWithText;\n    if (opt_declutterBuilderGroup) {\n        builderGroup = opt_declutterBuilderGroup;\n        declutterImageWithText =\n            imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n    }\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n        imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n        imageReplay.drawMultiPoint(geometry, feature);\n    }\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, declutterImageWithText);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle);\n        textReplay.drawText(geometry, feature);\n    }\n}\n//# sourceMappingURL=vector.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport { HIT_DETECT_RESOLUTION, createHitDetectionImageData, hitDetect, } from '../../render/canvas/hitdetect.js';\nimport { apply, makeInverse, makeScale, toString as transformToString, } from '../../transform.js';\nimport { buffer, containsExtent, createEmpty, getWidth, intersects as intersectsExtent, wrapX as wrapExtentX, } from '../../extent.js';\nimport { cssOpacity } from '../../css.js';\nimport { defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature, } from '../vector.js';\nimport { equals } from '../../array.js';\nimport { fromUserExtent, getTransformFromProjections, getUserProjection, toUserExtent, toUserResolution, } from '../../proj.js';\nimport { getUid } from '../../util.js';\nimport { wrapX as wrapCoordinateX } from '../../coordinate.js';\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nvar CanvasVectorLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasVectorLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n     */\n    function CanvasVectorLayerRenderer(vectorLayer) {\n        var _this = _super.call(this, vectorLayer) || this;\n        /** @private */\n        _this.boundHandleStyleImageChange_ = _this.handleStyleImageChange_.bind(_this);\n        /**\n         * @type {boolean}\n         */\n        _this.animatingOrInteracting_;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.dirty_ = false;\n        /**\n         * @type {ImageData}\n         */\n        _this.hitDetectionImageData_ = null;\n        /**\n         * @type {Array<import(\"../../Feature.js\").default>}\n         */\n        _this.renderedFeatures_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedResolution_ = NaN;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = createEmpty();\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.wrappedRenderedExtent_ = createEmpty();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRotation_;\n        /**\n         * @private\n         * @type {import(\"../../coordinate\").Coordinate}\n         */\n        _this.renderedCenter_ = null;\n        /**\n         * @private\n         * @type {import(\"../../proj/Projection\").default}\n         */\n        _this.renderedProjection_ = null;\n        /**\n         * @private\n         * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n         */\n        _this.renderedRenderOrder_ = null;\n        /**\n         * @private\n         * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n         */\n        _this.replayGroup_ = null;\n        /**\n         * A new replay group had to be created by `prepareFrame()`\n         * @type {boolean}\n         */\n        _this.replayGroupChanged = true;\n        /**\n         * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n         */\n        _this.declutterExecutorGroup = null;\n        /**\n         * Clipping to be performed by `renderFrame()`\n         * @type {boolean}\n         */\n        _this.clipping = true;\n        return _this;\n    }\n    /**\n     * Get a rendering container from an existing target, if compatible.\n     * @param {HTMLElement} target Potential render target.\n     * @param {string} transform CSS Transform.\n     * @param {number} opacity Opacity.\n     */\n    CanvasVectorLayerRenderer.prototype.useContainer = function (target, transform, opacity) {\n        if (opacity < 1) {\n            target = null;\n        }\n        _super.prototype.useContainer.call(this, target, transform, opacity);\n    };\n    /**\n     * @param {ExecutorGroup} executorGroup Executor group.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n     */\n    CanvasVectorLayerRenderer.prototype.renderWorlds = function (executorGroup, frameState, opt_declutterTree) {\n        var extent = frameState.extent;\n        var viewState = frameState.viewState;\n        var center = viewState.center;\n        var resolution = viewState.resolution;\n        var projection = viewState.projection;\n        var rotation = viewState.rotation;\n        var projectionExtent = projection.getExtent();\n        var vectorSource = this.getLayer().getSource();\n        var pixelRatio = frameState.pixelRatio;\n        var viewHints = frameState.viewHints;\n        var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n        var context = this.context;\n        var width = Math.round(frameState.size[0] * pixelRatio);\n        var height = Math.round(frameState.size[1] * pixelRatio);\n        var multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n        var worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n        var endWorld = multiWorld\n            ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n            : 1;\n        var world = multiWorld\n            ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n            : 0;\n        do {\n            var transform = this.getRenderTransform(center, resolution, rotation, pixelRatio, width, height, world * worldWidth);\n            executorGroup.execute(context, 1, transform, rotation, snapToPixel, undefined, opt_declutterTree);\n        } while (++world < endWorld);\n    };\n    /**\n     * Render declutter items for this layer\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CanvasVectorLayerRenderer.prototype.renderDeclutter = function (frameState) {\n        if (this.declutterExecutorGroup) {\n            this.renderWorlds(this.declutterExecutorGroup, frameState, frameState.declutterTree);\n        }\n    };\n    /**\n     * Render the layer.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    CanvasVectorLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var pixelRatio = frameState.pixelRatio;\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        // set forward and inverse pixel transforms\n        makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n        makeInverse(this.inversePixelTransform, this.pixelTransform);\n        var canvasTransform = transformToString(this.pixelTransform);\n        this.useContainer(target, canvasTransform, layerState.opacity);\n        var context = this.context;\n        var canvas = context.canvas;\n        var replayGroup = this.replayGroup_;\n        var declutterExecutorGroup = this.declutterExecutorGroup;\n        if ((!replayGroup || replayGroup.isEmpty()) &&\n            (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())) {\n            return null;\n        }\n        // resize and clear\n        var width = Math.round(frameState.size[0] * pixelRatio);\n        var height = Math.round(frameState.size[1] * pixelRatio);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n            if (canvas.style.transform !== canvasTransform) {\n                canvas.style.transform = canvasTransform;\n            }\n        }\n        else if (!this.containerReused) {\n            context.clearRect(0, 0, width, height);\n        }\n        this.preRender(context, frameState);\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        // clipped rendering if layer extent is set\n        var clipped = false;\n        var render = true;\n        if (layerState.extent && this.clipping) {\n            var layerExtent = fromUserExtent(layerState.extent, projection);\n            render = intersectsExtent(layerExtent, frameState.extent);\n            clipped = render && !containsExtent(layerExtent, frameState.extent);\n            if (clipped) {\n                this.clipUnrotated(context, frameState, layerExtent);\n            }\n        }\n        if (render) {\n            this.renderWorlds(replayGroup, frameState);\n        }\n        if (clipped) {\n            context.restore();\n        }\n        this.postRender(context, frameState);\n        var opacity = cssOpacity(layerState.opacity);\n        var container = this.container;\n        if (opacity !== container.style.opacity) {\n            container.style.opacity = opacity;\n        }\n        if (this.renderedRotation_ !== viewState.rotation) {\n            this.renderedRotation_ = viewState.rotation;\n            this.hitDetectionImageData_ = null;\n        }\n        return this.container;\n    };\n    /**\n     * Asynchronous layer level hit detection.\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n     */\n    CanvasVectorLayerRenderer.prototype.getFeatures = function (pixel) {\n        return new Promise(\n        /**\n         * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n         * @this {CanvasVectorLayerRenderer}\n         */\n        function (resolve) {\n            if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n                var size = [this.context.canvas.width, this.context.canvas.height];\n                apply(this.pixelTransform, size);\n                var center = this.renderedCenter_;\n                var resolution = this.renderedResolution_;\n                var rotation = this.renderedRotation_;\n                var projection = this.renderedProjection_;\n                var extent = this.wrappedRenderedExtent_;\n                var layer = this.getLayer();\n                var transforms = [];\n                var width = size[0] * HIT_DETECT_RESOLUTION;\n                var height = size[1] * HIT_DETECT_RESOLUTION;\n                transforms.push(this.getRenderTransform(center, resolution, rotation, HIT_DETECT_RESOLUTION, width, height, 0).slice());\n                var source = layer.getSource();\n                var projectionExtent = projection.getExtent();\n                if (source.getWrapX() &&\n                    projection.canWrapX() &&\n                    !containsExtent(projectionExtent, extent)) {\n                    var startX = extent[0];\n                    var worldWidth = getWidth(projectionExtent);\n                    var world = 0;\n                    var offsetX = void 0;\n                    while (startX < projectionExtent[0]) {\n                        --world;\n                        offsetX = worldWidth * world;\n                        transforms.push(this.getRenderTransform(center, resolution, rotation, HIT_DETECT_RESOLUTION, width, height, offsetX).slice());\n                        startX += worldWidth;\n                    }\n                    world = 0;\n                    startX = extent[2];\n                    while (startX > projectionExtent[2]) {\n                        ++world;\n                        offsetX = worldWidth * world;\n                        transforms.push(this.getRenderTransform(center, resolution, rotation, HIT_DETECT_RESOLUTION, width, height, offsetX).slice());\n                        startX -= worldWidth;\n                    }\n                }\n                this.hitDetectionImageData_ = createHitDetectionImageData(size, transforms, this.renderedFeatures_, layer.getStyleFunction(), extent, resolution, rotation);\n            }\n            resolve(hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_));\n        }.bind(this));\n    };\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n     * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, matches) {\n        var _this = this;\n        if (!this.replayGroup_) {\n            return undefined;\n        }\n        var resolution = frameState.viewState.resolution;\n        var rotation = frameState.viewState.rotation;\n        var layer = this.getLayer();\n        /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n        var features = {};\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n         * @param {number} distanceSq The squared distance to the click position\n         * @return {T|undefined} Callback result.\n         */\n        var featureCallback = function (feature, geometry, distanceSq) {\n            var key = getUid(feature);\n            var match = features[key];\n            if (!match) {\n                if (distanceSq === 0) {\n                    features[key] = true;\n                    return callback(feature, layer, geometry);\n                }\n                matches.push((features[key] = {\n                    feature: feature,\n                    layer: layer,\n                    geometry: geometry,\n                    distanceSq: distanceSq,\n                    callback: callback,\n                }));\n            }\n            else if (match !== true && distanceSq < match.distanceSq) {\n                if (distanceSq === 0) {\n                    features[key] = true;\n                    matches.splice(matches.lastIndexOf(match), 1);\n                    return callback(feature, layer, geometry);\n                }\n                match.geometry = geometry;\n                match.distanceSq = distanceSq;\n            }\n            return undefined;\n        };\n        var result;\n        var executorGroups = [this.replayGroup_];\n        if (this.declutterExecutorGroup) {\n            executorGroups.push(this.declutterExecutorGroup);\n        }\n        executorGroups.some(function (executorGroup) {\n            return (result = executorGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, featureCallback, executorGroup === _this.declutterExecutorGroup\n                ? frameState.declutterTree.all().map(function (item) { return item.value; })\n                : null));\n        });\n        return result;\n    };\n    /**\n     * Perform action necessary to get the layer rendered after new fonts have loaded\n     */\n    CanvasVectorLayerRenderer.prototype.handleFontsChanged = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && this.replayGroup_) {\n            layer.changed();\n        }\n    };\n    /**\n     * Handle changes in image style state.\n     * @param {import(\"../../events/Event.js\").default} event Image style change event.\n     * @private\n     */\n    CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function (event) {\n        this.renderIfReadyAndVisible();\n    };\n    /**\n     * Determine whether render should be called.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    CanvasVectorLayerRenderer.prototype.prepareFrame = function (frameState) {\n        var vectorLayer = this.getLayer();\n        var vectorSource = vectorLayer.getSource();\n        if (!vectorSource) {\n            return false;\n        }\n        var animating = frameState.viewHints[ViewHint.ANIMATING];\n        var interacting = frameState.viewHints[ViewHint.INTERACTING];\n        var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n        var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n        if ((!this.dirty_ && !updateWhileAnimating && animating) ||\n            (!updateWhileInteracting && interacting)) {\n            this.animatingOrInteracting_ = true;\n            return true;\n        }\n        this.animatingOrInteracting_ = false;\n        var frameStateExtent = frameState.extent;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var resolution = viewState.resolution;\n        var pixelRatio = frameState.pixelRatio;\n        var vectorLayerRevision = vectorLayer.getRevision();\n        var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n        var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n        if (vectorLayerRenderOrder === undefined) {\n            vectorLayerRenderOrder = defaultRenderOrder;\n        }\n        var center = viewState.center.slice();\n        var extent = buffer(frameStateExtent, vectorLayerRenderBuffer * resolution);\n        var renderedExtent = extent.slice();\n        var loadExtents = [extent.slice()];\n        var projectionExtent = projection.getExtent();\n        if (vectorSource.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, frameState.extent)) {\n            // For the replay group, we need an extent that intersects the real world\n            // (-180° to +180°). To support geometries in a coordinate range from -540°\n            // to +540°, we add at least 1 world width on each side of the projection\n            // extent. If the viewport is wider than the world, we need to add half of\n            // the viewport width to make sure we cover the whole viewport.\n            var worldWidth = getWidth(projectionExtent);\n            var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n            extent[0] = projectionExtent[0] - gutter;\n            extent[2] = projectionExtent[2] + gutter;\n            wrapCoordinateX(center, projection);\n            var loadExtent = wrapExtentX(loadExtents[0], projection);\n            // If the extent crosses the date line, we load data for both edges of the worlds\n            if (loadExtent[0] < projectionExtent[0] &&\n                loadExtent[2] < projectionExtent[2]) {\n                loadExtents.push([\n                    loadExtent[0] + worldWidth,\n                    loadExtent[1],\n                    loadExtent[2] + worldWidth,\n                    loadExtent[3],\n                ]);\n            }\n            else if (loadExtent[0] > projectionExtent[0] &&\n                loadExtent[2] > projectionExtent[2]) {\n                loadExtents.push([\n                    loadExtent[0] - worldWidth,\n                    loadExtent[1],\n                    loadExtent[2] - worldWidth,\n                    loadExtent[3],\n                ]);\n            }\n        }\n        if (!this.dirty_ &&\n            this.renderedResolution_ == resolution &&\n            this.renderedRevision_ == vectorLayerRevision &&\n            this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n            containsExtent(this.wrappedRenderedExtent_, extent)) {\n            if (!equals(this.renderedExtent_, renderedExtent)) {\n                this.hitDetectionImageData_ = null;\n                this.renderedExtent_ = renderedExtent;\n            }\n            this.renderedCenter_ = center;\n            this.replayGroupChanged = false;\n            return true;\n        }\n        this.replayGroup_ = null;\n        this.dirty_ = false;\n        var replayGroup = new CanvasBuilderGroup(getRenderTolerance(resolution, pixelRatio), extent, resolution, pixelRatio);\n        var declutterBuilderGroup;\n        if (this.getLayer().getDeclutter()) {\n            declutterBuilderGroup = new CanvasBuilderGroup(getRenderTolerance(resolution, pixelRatio), extent, resolution, pixelRatio);\n        }\n        var userProjection = getUserProjection();\n        var userTransform;\n        if (userProjection) {\n            for (var i = 0, ii = loadExtents.length; i < ii; ++i) {\n                var extent_1 = loadExtents[i];\n                var userExtent_1 = toUserExtent(extent_1, projection);\n                vectorSource.loadFeatures(userExtent_1, toUserResolution(resolution, projection), userProjection);\n            }\n            userTransform = getTransformFromProjections(userProjection, projection);\n        }\n        else {\n            for (var i = 0, ii = loadExtents.length; i < ii; ++i) {\n                vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n            }\n        }\n        var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n        var render = \n        /**\n         * @param {import(\"../../Feature.js\").default} feature Feature.\n         * @this {CanvasVectorLayerRenderer}\n         */\n        function (feature) {\n            var styles;\n            var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n            if (styleFunction) {\n                styles = styleFunction(feature, resolution);\n            }\n            if (styles) {\n                var dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup, userTransform, declutterBuilderGroup);\n                this.dirty_ = this.dirty_ || dirty;\n            }\n        }.bind(this);\n        var userExtent = toUserExtent(extent, projection);\n        /** @type {Array<import(\"../../Feature.js\").default>} */\n        var features = vectorSource.getFeaturesInExtent(userExtent);\n        if (vectorLayerRenderOrder) {\n            features.sort(vectorLayerRenderOrder);\n        }\n        for (var i = 0, ii = features.length; i < ii; ++i) {\n            render(features[i]);\n        }\n        this.renderedFeatures_ = features;\n        var replayGroupInstructions = replayGroup.finish();\n        var executorGroup = new ExecutorGroup(extent, resolution, pixelRatio, vectorSource.getOverlaps(), replayGroupInstructions, vectorLayer.getRenderBuffer());\n        if (declutterBuilderGroup) {\n            this.declutterExecutorGroup = new ExecutorGroup(extent, resolution, pixelRatio, vectorSource.getOverlaps(), declutterBuilderGroup.finish(), vectorLayer.getRenderBuffer());\n        }\n        this.renderedResolution_ = resolution;\n        this.renderedRevision_ = vectorLayerRevision;\n        this.renderedRenderOrder_ = vectorLayerRenderOrder;\n        this.renderedExtent_ = renderedExtent;\n        this.wrappedRenderedExtent_ = extent;\n        this.renderedCenter_ = center;\n        this.renderedProjection_ = projection;\n        this.replayGroup_ = executorGroup;\n        this.hitDetectionImageData_ = null;\n        this.replayGroupChanged = true;\n        return true;\n    };\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {number} squaredTolerance Squared render tolerance.\n     * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n     * @param {import(\"../../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n     * @return {boolean} `true` if an image is loading.\n     */\n    CanvasVectorLayerRenderer.prototype.renderFeature = function (feature, squaredTolerance, styles, builderGroup, opt_transform, opt_declutterBuilderGroup) {\n        if (!styles) {\n            return false;\n        }\n        var loading = false;\n        if (Array.isArray(styles)) {\n            for (var i = 0, ii = styles.length; i < ii; ++i) {\n                loading =\n                    renderFeature(builderGroup, feature, styles[i], squaredTolerance, this.boundHandleStyleImageChange_, opt_transform, opt_declutterBuilderGroup) || loading;\n            }\n        }\n        else {\n            loading = renderFeature(builderGroup, feature, styles, squaredTolerance, this.boundHandleStyleImageChange_, opt_transform, opt_declutterBuilderGroup);\n        }\n        return loading;\n    };\n    return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer));\nexport default CanvasVectorLayerRenderer;\n//# sourceMappingURL=VectorLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType>}\n * @api\n */\nvar VectorLayer = /** @class */ (function (_super) {\n    __extends(VectorLayer, _super);\n    /**\n     * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [opt_options] Options.\n     */\n    function VectorLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     */\n    VectorLayer.prototype.createRenderer = function () {\n        return new CanvasVectorLayerRenderer(this);\n    };\n    return VectorLayer;\n}(BaseVectorLayer));\nexport default VectorLayer;\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport { createOrUpdate, equals } from '../extent.js';\nimport { getUid } from '../util.js';\nimport { isEmpty } from '../obj.js';\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nvar RBush = /** @class */ (function () {\n    /**\n     * @param {number} [opt_maxEntries] Max entries.\n     */\n    function RBush(opt_maxEntries) {\n        /**\n         * @private\n         */\n        this.rbush_ = new RBush_(opt_maxEntries);\n        /**\n         * A mapping between the objects added to this rbush wrapper\n         * and the objects that are actually added to the internal rbush.\n         * @private\n         * @type {Object<string, Entry>}\n         */\n        this.items_ = {};\n    }\n    /**\n     * Insert a value into the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.insert = function (extent, value) {\n        /** @type {Entry} */\n        var item = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3],\n            value: value,\n        };\n        this.rbush_.insert(item);\n        this.items_[getUid(value)] = item;\n    };\n    /**\n     * Bulk-insert values into the RBush.\n     * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n     * @param {Array<T>} values Values.\n     */\n    RBush.prototype.load = function (extents, values) {\n        var items = new Array(values.length);\n        for (var i = 0, l = values.length; i < l; i++) {\n            var extent = extents[i];\n            var value = values[i];\n            /** @type {Entry} */\n            var item = {\n                minX: extent[0],\n                minY: extent[1],\n                maxX: extent[2],\n                maxY: extent[3],\n                value: value,\n            };\n            items[i] = item;\n            this.items_[getUid(value)] = item;\n        }\n        this.rbush_.load(items);\n    };\n    /**\n     * Remove a value from the RBush.\n     * @param {T} value Value.\n     * @return {boolean} Removed.\n     */\n    RBush.prototype.remove = function (value) {\n        var uid = getUid(value);\n        // get the object in which the value was wrapped when adding to the\n        // internal rbush. then use that object to do the removal.\n        var item = this.items_[uid];\n        delete this.items_[uid];\n        return this.rbush_.remove(item) !== null;\n    };\n    /**\n     * Update the extent of a value in the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.update = function (extent, value) {\n        var item = this.items_[getUid(value)];\n        var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n        if (!equals(bbox, extent)) {\n            this.remove(value);\n            this.insert(extent, value);\n        }\n    };\n    /**\n     * Return all values in the RBush.\n     * @return {Array<T>} All.\n     */\n    RBush.prototype.getAll = function () {\n        var items = this.rbush_.all();\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Return all values in the given extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<T>} All in extent.\n     */\n    RBush.prototype.getInExtent = function (extent) {\n        /** @type {Entry} */\n        var bbox = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3],\n        };\n        var items = this.rbush_.search(bbox);\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Calls a callback function with each value in the tree.\n     * If the callback returns a truthy value, this value is returned without\n     * checking the rest of the tree.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach = function (callback) {\n        return this.forEach_(this.getAll(), callback);\n    };\n    /**\n     * Calls a callback function with each value in the provided extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEachInExtent = function (extent, callback) {\n        return this.forEach_(this.getInExtent(extent), callback);\n    };\n    /**\n     * @param {Array<T>} values Values.\n     * @param {function(T): *} callback Callback.\n     * @private\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach_ = function (values, callback) {\n        var result;\n        for (var i = 0, l = values.length; i < l; i++) {\n            result = callback(values[i]);\n            if (result) {\n                return result;\n            }\n        }\n        return result;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    RBush.prototype.isEmpty = function () {\n        return isEmpty(this.items_);\n    };\n    /**\n     * Remove all values from the RBush.\n     */\n    RBush.prototype.clear = function () {\n        this.rbush_.clear();\n        this.items_ = {};\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    RBush.prototype.getExtent = function (opt_extent) {\n        var data = this.rbush_.toJSON();\n        return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n    };\n    /**\n     * @param {RBush} rbush R-Tree.\n     */\n    RBush.prototype.concat = function (rbush) {\n        this.rbush_.load(rbush.rbush_.all());\n        for (var i in rbush.items_) {\n            this.items_[i] = rbush.items_[i];\n        }\n    };\n    return RBush;\n}());\nexport default RBush;\n//# sourceMappingURL=RBush.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport { abstract } from '../util.js';\nimport { get as getProjection } from '../proj.js';\n/**\n * A function that takes a {@link module:ol/PluggableMap~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /** @class */ (function (_super) {\n    __extends(Source, _super);\n    /**\n     * @param {Options} options Source options.\n     */\n    function Source(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.projection = getProjection(options.projection);\n        /**\n         * @private\n         * @type {?Attribution}\n         */\n        _this.attributions_ = adaptAttributions(options.attributions);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.attributionsCollapsible_ =\n            options.attributionsCollapsible !== undefined\n                ? options.attributionsCollapsible\n                : true;\n        /**\n         * This source is currently loading data. Sources that defer loading to the\n         * map's tile queue never set this to `true`.\n         * @type {boolean}\n         */\n        _this.loading = false;\n        /**\n         * @private\n         * @type {import(\"./State.js\").default}\n         */\n        _this.state_ =\n            options.state !== undefined ? options.state : SourceState.READY;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n        /**\n         * @protected\n         * @type {function(import(\"../View.js\").ViewOptions):void}\n         */\n        _this.viewResolver = null;\n        /**\n         * @protected\n         * @type {function(Error):void}\n         */\n        _this.viewRejector = null;\n        var self = _this;\n        /**\n         * @private\n         * @type {Promise<import(\"../View.js\").ViewOptions>}\n         */\n        _this.viewPromise_ = new Promise(function (resolve, reject) {\n            self.viewResolver = resolve;\n            self.viewRejector = reject;\n        });\n        return _this;\n    }\n    /**\n     * Get the attribution function for the source.\n     * @return {?Attribution} Attribution function.\n     * @api\n     */\n    Source.prototype.getAttributions = function () {\n        return this.attributions_;\n    };\n    /**\n     * @return {boolean} Attributions are collapsible.\n     * @api\n     */\n    Source.prototype.getAttributionsCollapsible = function () {\n        return this.attributionsCollapsible_;\n    };\n    /**\n     * Get the projection of the source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    Source.prototype.getProjection = function () {\n        return this.projection;\n    };\n    /**\n     * @abstract\n     * @return {Array<number>|undefined} Resolutions.\n     */\n    Source.prototype.getResolutions = function () {\n        return abstract();\n    };\n    /**\n     * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n     */\n    Source.prototype.getView = function () {\n        return this.viewPromise_;\n    };\n    /**\n     * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n     * @return {import(\"./State.js\").default} State.\n     * @api\n     */\n    Source.prototype.getState = function () {\n        return this.state_;\n    };\n    /**\n     * @return {boolean|undefined} Wrap X.\n     */\n    Source.prototype.getWrapX = function () {\n        return this.wrapX_;\n    };\n    /**\n     * @return {Object|undefined} Context options.\n     */\n    Source.prototype.getContextOptions = function () {\n        return undefined;\n    };\n    /**\n     * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n     * @api\n     */\n    Source.prototype.refresh = function () {\n        this.changed();\n    };\n    /**\n     * Set the attributions of the source.\n     * @param {AttributionLike|undefined} attributions Attributions.\n     *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n     *     or `undefined`.\n     * @api\n     */\n    Source.prototype.setAttributions = function (attributions) {\n        this.attributions_ = adaptAttributions(attributions);\n        this.changed();\n    };\n    /**\n     * Set the state of the source.\n     * @param {import(\"./State.js\").default} state State.\n     */\n    Source.prototype.setState = function (state) {\n        this.state_ = state;\n        this.changed();\n    };\n    return Source;\n}(BaseObject));\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n    if (!attributionLike) {\n        return null;\n    }\n    if (Array.isArray(attributionLike)) {\n        return function (frameState) {\n            return attributionLike;\n        };\n    }\n    if (typeof attributionLike === 'function') {\n        return attributionLike;\n    }\n    return function (frameState) {\n        return [attributionLike];\n    };\n}\nexport default Source;\n//# sourceMappingURL=Source.js.map","/**\n * @module ol/source/VectorEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a feature is added to the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n     * @api\n     */\n    ADDFEATURE: 'addfeature',\n    /**\n     * Triggered when a feature is updated.\n     * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n     * @api\n     */\n    CHANGEFEATURE: 'changefeature',\n    /**\n     * Triggered when the clear method is called on the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#clear\n     * @api\n     */\n    CLEAR: 'clear',\n    /**\n     * Triggered when a feature is removed from the source.\n     * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n     * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n     * @api\n     */\n    REMOVEFEATURE: 'removefeature',\n    /**\n     * Triggered when features starts loading.\n     * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n     * @api\n     */\n    FEATURESLOADSTART: 'featuresloadstart',\n    /**\n     * Triggered when features finishes loading.\n     * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n     * @api\n     */\n    FEATURESLOADEND: 'featuresloadend',\n    /**\n     * Triggered if feature loading results in an error.\n     * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n     * @api\n     */\n    FEATURESLOADERROR: 'featuresloaderror',\n};\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n//# sourceMappingURL=VectorEventType.js.map","/**\n * @module ol/loadingstrategy\n */\nimport { fromUserExtent, fromUserResolution, toUserExtent } from './proj.js';\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n    return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n    return [extent];\n}\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n    return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n        var z = tileGrid.getZForResolution(fromUserResolution(resolution, projection));\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(fromUserExtent(extent, projection), z);\n        /** @type {Array<import(\"./extent.js\").Extent>} */\n        var extents = [];\n        /** @type {import(\"./tilecoord.js\").TileCoord} */\n        var tileCoord = [z, 0, 0];\n        for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n            for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n                extents.push(toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection));\n            }\n        }\n        return extents;\n    });\n}\n//# sourceMappingURL=loadingstrategy.js.map","/**\n * @module ol/featureloader\n */\nimport FormatType from './format/FormatType.js';\nimport { VOID } from './functions.js';\n/**\n *\n * @type {boolean}\n * @private\n */\nvar withCredentials = false;\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(url, format, extent, resolution, projection, success, failure) {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', typeof url === 'function' ? url(extent, resolution, projection) : url, true);\n    if (format.getType() == FormatType.ARRAY_BUFFER) {\n        xhr.responseType = 'arraybuffer';\n    }\n    xhr.withCredentials = withCredentials;\n    /**\n     * @param {Event} event Event.\n     * @private\n     */\n    xhr.onload = function (event) {\n        // status will be 0 for file:// urls\n        if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n            var type = format.getType();\n            /** @type {Document|Node|Object|string|undefined} */\n            var source = void 0;\n            if (type == FormatType.JSON || type == FormatType.TEXT) {\n                source = xhr.responseText;\n            }\n            else if (type == FormatType.XML) {\n                source = xhr.responseXML;\n                if (!source) {\n                    source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n                }\n            }\n            else if (type == FormatType.ARRAY_BUFFER) {\n                source = /** @type {ArrayBuffer} */ (xhr.response);\n            }\n            if (source) {\n                success(\n                /** @type {Array<import(\"./Feature.js\").default>} */\n                (format.readFeatures(source, {\n                    extent: extent,\n                    featureProjection: projection,\n                })), format.readProjection(source));\n            }\n            else {\n                failure();\n            }\n        }\n        else {\n            failure();\n        }\n    };\n    /**\n     * @private\n     */\n    xhr.onerror = failure;\n    xhr.send();\n}\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n     *      Function called when loading succeeded.\n     * @param {function(): void} [failure] Failure\n     *      Function called when loading failed.\n     * @this {import(\"./source/Vector\").default}\n     */\n    return function (extent, resolution, projection, success, failure) {\n        var source = /** @type {import(\"./source/Vector\").default} */ (this);\n        loadFeaturesXhr(url, format, extent, resolution, projection, \n        /**\n         * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n         * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n         * projection.\n         */\n        function (features, dataProjection) {\n            source.addFeatures(features);\n            if (success !== undefined) {\n                success(features);\n            }\n        }, \n        /* FIXME handle error */ failure ? failure : VOID);\n    };\n}\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n    withCredentials = xhrWithCredentials;\n}\n//# sourceMappingURL=featureloader.js.map","/**\n * @module ol/source/Vector\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport { TRUE, VOID } from '../functions.js';\nimport { all as allStrategy } from '../loadingstrategy.js';\nimport { assert } from '../asserts.js';\nimport { containsExtent, equals } from '../extent.js';\nimport { extend } from '../array.js';\nimport { getUid } from '../util.js';\nimport { getValues, isEmpty } from '../obj.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { xhr } from '../featureloader.js';\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nvar VectorSourceEvent = /** @class */ (function (_super) {\n    __extends(VectorSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Feature.js\").default<Geometry>} [opt_feature] Feature.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>} [opt_features] Features.\n     */\n    function VectorSourceEvent(type, opt_feature, opt_features) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n         * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n         * @api\n         */\n        _this.feature = opt_feature;\n        /**\n         * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n         * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n         * @api\n         */\n        _this.features = opt_features;\n        return _this;\n    }\n    return VectorSourceEvent;\n}(Event));\nexport { VectorSourceEvent };\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          var features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nvar VectorSource = /** @class */ (function (_super) {\n    __extends(VectorSource, _super);\n    /**\n     * @param {Options} [opt_options] Vector source options.\n     */\n    function VectorSource(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: undefined,\n            state: SourceState.READY,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n        }) || this;\n        /***\n         * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {VectorSourceOnSignature<void>}\n         */\n        _this.un;\n        /**\n         * @private\n         * @type {import(\"../featureloader.js\").FeatureLoader}\n         */\n        _this.loader_ = VOID;\n        /**\n         * @private\n         * @type {import(\"../format/Feature.js\").default|undefined}\n         */\n        _this.format_ = options.format;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n        /**\n         * @private\n         * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n         */\n        _this.url_ = options.url;\n        if (options.loader !== undefined) {\n            _this.loader_ = options.loader;\n        }\n        else if (_this.url_ !== undefined) {\n            assert(_this.format_, 7); // `format` must be set when `url` is set\n            // create a XHR feature loader for \"url\" and \"format\"\n            _this.loader_ = xhr(_this.url_, \n            /** @type {import(\"../format/Feature.js\").default} */ (_this.format_));\n        }\n        /**\n         * @private\n         * @type {LoadingStrategy}\n         */\n        _this.strategy_ =\n            options.strategy !== undefined ? options.strategy : allStrategy;\n        var useSpatialIndex = options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n        /**\n         * @private\n         * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n        /**\n         * @private\n         * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n         */\n        _this.loadedExtentsRtree_ = new RBush();\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.loadingExtentsCount_ = 0;\n        /**\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.nullGeometryFeatures_ = {};\n        /**\n         * A lookup of features by id (the return from feature.getId()).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.idIndex_ = {};\n        /**\n         * A lookup of features by uid (using getUid(feature)).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.uidIndex_ = {};\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.featureChangeKeys_ = {};\n        /**\n         * @private\n         * @type {Collection<import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.featuresCollection_ = null;\n        var collection, features;\n        if (Array.isArray(options.features)) {\n            features = options.features;\n        }\n        else if (options.features) {\n            collection = options.features;\n            features = collection.getArray();\n        }\n        if (!useSpatialIndex && collection === undefined) {\n            collection = new Collection(features);\n        }\n        if (features !== undefined) {\n            _this.addFeaturesInternal(features);\n        }\n        if (collection !== undefined) {\n            _this.bindFeaturesCollection_(collection);\n        }\n        return _this;\n    }\n    /**\n     * Add a single feature to the source.  If you want to add a batch of features\n     * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n     * instead. A feature will not be added to the source if feature with\n     * the same id is already there. The reason for this behavior is to avoid\n     * feature duplication when using bbox or tile loading strategies.\n     * Note: this also applies if an {@link module:ol/Collection} is used for features,\n     * meaning that if a feature with a duplicate id is added in the collection, it will\n     * be removed from it right away.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n     * @api\n     */\n    VectorSource.prototype.addFeature = function (feature) {\n        this.addFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Add a feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.addFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        if (!this.addToIndex_(featureKey, feature)) {\n            if (this.featuresCollection_) {\n                this.featuresCollection_.remove(feature);\n            }\n            return;\n        }\n        this.setupChangeEvents_(featureKey, feature);\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            var extent = geometry.getExtent();\n            if (this.featuresRtree_) {\n                this.featuresRtree_.insert(extent, feature);\n            }\n        }\n        else {\n            this.nullGeometryFeatures_[featureKey] = feature;\n        }\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @private\n     */\n    VectorSource.prototype.setupChangeEvents_ = function (featureKey, feature) {\n        this.featureChangeKeys_[featureKey] = [\n            listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n            listen(feature, ObjectEventType.PROPERTYCHANGE, this.handleFeatureChange_, this),\n        ];\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @return {boolean} The feature is \"valid\", in the sense that it is also a\n     *     candidate for insertion into the Rtree.\n     * @private\n     */\n    VectorSource.prototype.addToIndex_ = function (featureKey, feature) {\n        var valid = true;\n        var id = feature.getId();\n        if (id !== undefined) {\n            if (!(id.toString() in this.idIndex_)) {\n                this.idIndex_[id.toString()] = feature;\n            }\n            else {\n                valid = false;\n            }\n        }\n        if (valid) {\n            assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n            this.uidIndex_[featureKey] = feature;\n        }\n        return valid;\n    };\n    /**\n     * Add a batch of features to the source.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n     * @api\n     */\n    VectorSource.prototype.addFeatures = function (features) {\n        this.addFeaturesInternal(features);\n        this.changed();\n    };\n    /**\n     * Add features without firing a `change` event.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n     * @protected\n     */\n    VectorSource.prototype.addFeaturesInternal = function (features) {\n        var extents = [];\n        var newFeatures = [];\n        var geometryFeatures = [];\n        for (var i = 0, length_1 = features.length; i < length_1; i++) {\n            var feature = features[i];\n            var featureKey = getUid(feature);\n            if (this.addToIndex_(featureKey, feature)) {\n                newFeatures.push(feature);\n            }\n        }\n        for (var i = 0, length_2 = newFeatures.length; i < length_2; i++) {\n            var feature = newFeatures[i];\n            var featureKey = getUid(feature);\n            this.setupChangeEvents_(featureKey, feature);\n            var geometry = feature.getGeometry();\n            if (geometry) {\n                var extent = geometry.getExtent();\n                extents.push(extent);\n                geometryFeatures.push(feature);\n            }\n            else {\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.load(extents, geometryFeatures);\n        }\n        for (var i = 0, length_3 = newFeatures.length; i < length_3; i++) {\n            this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]));\n        }\n    };\n    /**\n     * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n     * @private\n     */\n    VectorSource.prototype.bindFeaturesCollection_ = function (collection) {\n        var modifyingCollection = false;\n        this.addEventListener(VectorEventType.ADDFEATURE, \n        /**\n         * @param {VectorSourceEvent<Geometry>} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.push(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        this.addEventListener(VectorEventType.REMOVEFEATURE, \n        /**\n         * @param {VectorSourceEvent<Geometry>} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.remove(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        collection.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.addFeature(\n                /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }.bind(this));\n        collection.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.removeFeature(\n                /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }.bind(this));\n        this.featuresCollection_ = collection;\n    };\n    /**\n     * Remove all features from the source.\n     * @param {boolean} [opt_fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature removefeature} events.\n     * @api\n     */\n    VectorSource.prototype.clear = function (opt_fast) {\n        if (opt_fast) {\n            for (var featureId in this.featureChangeKeys_) {\n                var keys = this.featureChangeKeys_[featureId];\n                keys.forEach(unlistenByKey);\n            }\n            if (!this.featuresCollection_) {\n                this.featureChangeKeys_ = {};\n                this.idIndex_ = {};\n                this.uidIndex_ = {};\n            }\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\n                for (var id in this.nullGeometryFeatures_) {\n                    this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n                }\n            }\n        }\n        if (this.featuresCollection_) {\n            this.featuresCollection_.clear();\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.clear();\n        }\n        this.nullGeometryFeatures_ = {};\n        var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n        this.dispatchEvent(clearEvent);\n        this.changed();\n    };\n    /**\n     * Iterate through all features on the source, calling the provided callback\n     * with each one.  If the callback returns any \"truthy\" value, iteration will\n     * stop and the function will return the same value.\n     * Note: this function only iterate through the feature that have a defined geometry.\n     *\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     on the source.  Return a truthy value to stop iteration.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeature = function (callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEach(callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometries contain the provided\n     * coordinate, calling the callback with each feature.  If the callback returns\n     * a \"truthy\" value, iteration will stop and the function will return the same\n     * value.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose goemetry contains the provided coordinate.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     */\n    VectorSource.prototype.forEachFeatureAtCoordinateDirect = function (coordinate, callback) {\n        var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n        return this.forEachFeatureInExtent(extent, function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsCoordinate(coordinate)) {\n                return callback(feature);\n            }\n            else {\n                return undefined;\n            }\n        });\n    };\n    /**\n     * Iterate through all features whose bounding box intersects the provided\n     * extent (note that the feature's geometry may not intersect the extent),\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you are interested in features whose geometry intersects an extent, call\n     * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n     *\n     * When `useSpatialIndex` is set to false, this method will loop through all\n     * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose bounding box intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureInExtent = function (extent, callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEachInExtent(extent, callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometry intersects the provided extent,\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you only want to test for bounding box intersection, call the\n     * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose geometry intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureIntersectingExtent = function (extent, callback) {\n        return this.forEachFeatureInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n         * @return {T|undefined} The return value from the last call to the callback.\n         */\n        function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsExtent(extent)) {\n                var result = callback(feature);\n                if (result) {\n                    return result;\n                }\n            }\n        });\n    };\n    /**\n     * Get the features collection associated with this source. Will be `null`\n     * unless the source was configured with `useSpatialIndex` set to `false`, or\n     * with an {@link module:ol/Collection} as `features`.\n     * @return {Collection<import(\"../Feature.js\").default<Geometry>>} The collection of features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesCollection = function () {\n        return this.featuresCollection_;\n    };\n    /**\n     * Get a snapshot of the features currently on the source in random order. The returned array\n     * is a copy, the features are references to the features in the source.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeatures = function () {\n        var features;\n        if (this.featuresCollection_) {\n            features = this.featuresCollection_.getArray().slice(0);\n        }\n        else if (this.featuresRtree_) {\n            features = this.featuresRtree_.getAll();\n            if (!isEmpty(this.nullGeometryFeatures_)) {\n                extend(features, getValues(this.nullGeometryFeatures_));\n            }\n        }\n        return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (features);\n    };\n    /**\n     * Get all features whose geometry intersects the provided coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesAtCoordinate = function (coordinate) {\n        var features = [];\n        this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n            features.push(feature);\n        });\n        return features;\n    };\n    /**\n     * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n     * all features intersecting the given extent in random order (so it may include\n     * features whose geometries do not intersect the extent).\n     *\n     * When `useSpatialIndex` is set to false, this method will return all\n     * features.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesInExtent = function (extent) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.getInExtent(extent);\n        }\n        else if (this.featuresCollection_) {\n            return this.featuresCollection_.getArray().slice(0);\n        }\n        else {\n            return [];\n        }\n    };\n    /**\n     * Get the closest feature to the provided coordinate.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [opt_filter] Feature filter function.\n     *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n     *     and it should return a boolean value. By default, no filtering is made.\n     * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n     * @api\n     */\n    VectorSource.prototype.getClosestFeatureToCoordinate = function (coordinate, opt_filter) {\n        // Find the closest feature using branch and bound.  We start searching an\n        // infinite extent, and find the distance from the first feature found.  This\n        // becomes the closest feature.  We then compute a smaller extent which any\n        // closer feature must intersect.  We continue searching with this smaller\n        // extent, trying to find a closer feature.  Every time we find a closer\n        // feature, we update the extent being searched so that any even closer\n        // feature must intersect it.  We continue until we run out of features.\n        var x = coordinate[0];\n        var y = coordinate[1];\n        var closestFeature = null;\n        var closestPoint = [NaN, NaN];\n        var minSquaredDistance = Infinity;\n        var extent = [-Infinity, -Infinity, Infinity, Infinity];\n        var filter = opt_filter ? opt_filter : TRUE;\n        this.featuresRtree_.forEachInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n         */\n        function (feature) {\n            if (filter(feature)) {\n                var geometry = feature.getGeometry();\n                var previousMinSquaredDistance = minSquaredDistance;\n                minSquaredDistance = geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n                if (minSquaredDistance < previousMinSquaredDistance) {\n                    closestFeature = feature;\n                    // This is sneaky.  Reduce the extent that it is currently being\n                    // searched while the R-Tree traversal using this same extent object\n                    // is still in progress.  This is safe because the new extent is\n                    // strictly contained by the old extent.\n                    var minDistance = Math.sqrt(minSquaredDistance);\n                    extent[0] = x - minDistance;\n                    extent[1] = y - minDistance;\n                    extent[2] = x + minDistance;\n                    extent[3] = y + minDistance;\n                }\n            }\n        });\n        return closestFeature;\n    };\n    /**\n     * Get the extent of the features currently in the source.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../extent.js\").Extent} [opt_extent] Destination extent. If provided, no new extent\n     *     will be created. Instead, that extent's coordinates will be overwritten.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    VectorSource.prototype.getExtent = function (opt_extent) {\n        return this.featuresRtree_.getExtent(opt_extent);\n    };\n    /**\n     * Get a feature by its identifier (the value returned by feature.getId()).\n     * Note that the index treats string and numeric identifiers as the same.  So\n     * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n     *\n     * @param {string|number} id Feature identifier.\n     * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n     * @api\n     */\n    VectorSource.prototype.getFeatureById = function (id) {\n        var feature = this.idIndex_[id.toString()];\n        return feature !== undefined ? feature : null;\n    };\n    /**\n     * Get a feature by its internal unique identifier (using `getUid`).\n     *\n     * @param {string} uid Feature identifier.\n     * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n     */\n    VectorSource.prototype.getFeatureByUid = function (uid) {\n        var feature = this.uidIndex_[uid];\n        return feature !== undefined ? feature : null;\n    };\n    /**\n     * Get the format associated with this source.\n     *\n     * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n     * @api\n     */\n    VectorSource.prototype.getFormat = function () {\n        return this.format_;\n    };\n    /**\n     * @return {boolean} The source can have overlapping geometries.\n     */\n    VectorSource.prototype.getOverlaps = function () {\n        return this.overlaps_;\n    };\n    /**\n     * Get the url associated with this source.\n     *\n     * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n     * @api\n     */\n    VectorSource.prototype.getUrl = function () {\n        return this.url_;\n    };\n    /**\n     * @param {Event} event Event.\n     * @private\n     */\n    VectorSource.prototype.handleFeatureChange_ = function (event) {\n        var feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (event.target);\n        var featureKey = getUid(feature);\n        var geometry = feature.getGeometry();\n        if (!geometry) {\n            if (!(featureKey in this.nullGeometryFeatures_)) {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.remove(feature);\n                }\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        else {\n            var extent = geometry.getExtent();\n            if (featureKey in this.nullGeometryFeatures_) {\n                delete this.nullGeometryFeatures_[featureKey];\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.insert(extent, feature);\n                }\n            }\n            else {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.update(extent, feature);\n                }\n            }\n        }\n        var id = feature.getId();\n        if (id !== undefined) {\n            var sid = id.toString();\n            if (this.idIndex_[sid] !== feature) {\n                this.removeFromIdIndex_(feature);\n                this.idIndex_[sid] = feature;\n            }\n        }\n        else {\n            this.removeFromIdIndex_(feature);\n            this.uidIndex_[featureKey] = feature;\n        }\n        this.changed();\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature));\n    };\n    /**\n     * Returns true if the feature is contained within the source.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @return {boolean} Has feature.\n     * @api\n     */\n    VectorSource.prototype.hasFeature = function (feature) {\n        var id = feature.getId();\n        if (id !== undefined) {\n            return id in this.idIndex_;\n        }\n        else {\n            return getUid(feature) in this.uidIndex_;\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    VectorSource.prototype.isEmpty = function () {\n        return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    VectorSource.prototype.loadFeatures = function (extent, resolution, projection) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var extentsToLoad = this.strategy_(extent, resolution, projection);\n        var _loop_1 = function (i, ii) {\n            var extentToLoad = extentsToLoad[i];\n            var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad, \n            /**\n             * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n             * @return {boolean} Contains.\n             */\n            function (object) {\n                return containsExtent(object.extent, extentToLoad);\n            });\n            if (!alreadyLoaded) {\n                ++this_1.loadingExtentsCount_;\n                this_1.dispatchEvent(new VectorSourceEvent(VectorEventType.FEATURESLOADSTART));\n                this_1.loader_.call(this_1, extentToLoad, resolution, projection, function (features) {\n                    --this.loadingExtentsCount_;\n                    this.dispatchEvent(new VectorSourceEvent(VectorEventType.FEATURESLOADEND, undefined, features));\n                }.bind(this_1), function () {\n                    --this.loadingExtentsCount_;\n                    this.dispatchEvent(new VectorSourceEvent(VectorEventType.FEATURESLOADERROR));\n                }.bind(this_1));\n                loadedExtentsRtree.insert(extentToLoad, { extent: extentToLoad.slice() });\n            }\n        };\n        var this_1 = this;\n        for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n            _loop_1(i, ii);\n        }\n        this.loading =\n            this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n    };\n    VectorSource.prototype.refresh = function () {\n        this.clear(true);\n        this.loadedExtentsRtree_.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Remove an extent from the list of loaded extents.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    VectorSource.prototype.removeLoadedExtent = function (extent) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var obj;\n        loadedExtentsRtree.forEachInExtent(extent, function (object) {\n            if (equals(object.extent, extent)) {\n                obj = object;\n                return true;\n            }\n        });\n        if (obj) {\n            loadedExtentsRtree.remove(obj);\n        }\n    };\n    /**\n     * Remove a single feature from the source.  If you want to remove all features\n     * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n     * instead.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n     * @api\n     */\n    VectorSource.prototype.removeFeature = function (feature) {\n        var featureKey = getUid(feature);\n        if (featureKey in this.nullGeometryFeatures_) {\n            delete this.nullGeometryFeatures_[featureKey];\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.remove(feature);\n            }\n        }\n        this.removeFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Remove feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.removeFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n        delete this.featureChangeKeys_[featureKey];\n        var id = feature.getId();\n        if (id !== undefined) {\n            delete this.idIndex_[id.toString()];\n        }\n        delete this.uidIndex_[featureKey];\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature));\n    };\n    /**\n     * Remove a feature from the id index.  Called internally when the feature id\n     * may have changed.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @return {boolean} Removed the feature from the index.\n     * @private\n     */\n    VectorSource.prototype.removeFromIdIndex_ = function (feature) {\n        var removed = false;\n        for (var id in this.idIndex_) {\n            if (this.idIndex_[id] === feature) {\n                delete this.idIndex_[id];\n                removed = true;\n                break;\n            }\n        }\n        return removed;\n    };\n    /**\n     * Set the new loader of the source. The next render cycle will use the\n     * new loader.\n     * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n     * @api\n     */\n    VectorSource.prototype.setLoader = function (loader) {\n        this.loader_ = loader;\n    };\n    /**\n     * Points the source to a new url. The next render cycle will use the new url.\n     * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n     * @api\n     */\n    VectorSource.prototype.setUrl = function (url) {\n        assert(this.format_, 7); // `format` must be set when `url` is set\n        this.url_ = url;\n        this.setLoader(xhr(url, this.format_));\n    };\n    return VectorSource;\n}(Source));\nexport default VectorSource;\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nexport { default as DoubleClickZoom } from './interaction/DoubleClickZoom.js';\nexport { default as DragAndDrop } from './interaction/DragAndDrop.js';\nexport { default as DragBox } from './interaction/DragBox.js';\nexport { default as DragPan } from './interaction/DragPan.js';\nexport { default as DragRotate } from './interaction/DragRotate.js';\nexport { default as DragRotateAndZoom } from './interaction/DragRotateAndZoom.js';\nexport { default as DragZoom } from './interaction/DragZoom.js';\nexport { default as Draw } from './interaction/Draw.js';\nexport { default as Extent } from './interaction/Extent.js';\nexport { default as Interaction } from './interaction/Interaction.js';\nexport { default as KeyboardPan } from './interaction/KeyboardPan.js';\nexport { default as KeyboardZoom } from './interaction/KeyboardZoom.js';\nexport { default as Modify } from './interaction/Modify.js';\nexport { default as MouseWheelZoom } from './interaction/MouseWheelZoom.js';\nexport { default as PinchRotate } from './interaction/PinchRotate.js';\nexport { default as PinchZoom } from './interaction/PinchZoom.js';\nexport { default as Pointer } from './interaction/Pointer.js';\nexport { default as Select } from './interaction/Select.js';\nexport { default as Snap } from './interaction/Snap.js';\nexport { default as Translate } from './interaction/Translate.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [opt_options] Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var interactions = new Collection();\n    var kinetic = new Kinetic(-0.005, 0.05, 100);\n    var altShiftDragRotate = options.altShiftDragRotate !== undefined\n        ? options.altShiftDragRotate\n        : true;\n    if (altShiftDragRotate) {\n        interactions.push(new DragRotate());\n    }\n    var doubleClickZoom = options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n    if (doubleClickZoom) {\n        interactions.push(new DoubleClickZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration,\n        }));\n    }\n    var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n    if (dragPan) {\n        interactions.push(new DragPan({\n            onFocusOnly: options.onFocusOnly,\n            kinetic: kinetic,\n        }));\n    }\n    var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate : true;\n    if (pinchRotate) {\n        interactions.push(new PinchRotate());\n    }\n    var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n    if (pinchZoom) {\n        interactions.push(new PinchZoom({\n            duration: options.zoomDuration,\n        }));\n    }\n    var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n    if (keyboard) {\n        interactions.push(new KeyboardPan());\n        interactions.push(new KeyboardZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration,\n        }));\n    }\n    var mouseWheelZoom = options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n    if (mouseWheelZoom) {\n        interactions.push(new MouseWheelZoom({\n            onFocusOnly: options.onFocusOnly,\n            duration: options.zoomDuration,\n        }));\n    }\n    var shiftDragZoom = options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n    if (shiftDragZoom) {\n        interactions.push(new DragZoom({\n            duration: options.zoomDuration,\n        }));\n    }\n    return interactions;\n}\n//# sourceMappingURL=interaction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport { assign } from './obj.js';\nimport { defaults as defaultControls } from './control.js';\nimport { defaults as defaultInteractions } from './interaction.js';\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nvar Map = /** @class */ (function (_super) {\n    __extends(Map, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n     */\n    function Map(options) {\n        var _this = this;\n        options = assign({}, options);\n        if (!options.controls) {\n            options.controls = defaultControls();\n        }\n        if (!options.interactions) {\n            options.interactions = defaultInteractions({\n                onFocusOnly: true,\n            });\n        }\n        _this = _super.call(this, options) || this;\n        return _this;\n    }\n    Map.prototype.createRenderer = function () {\n        return new CompositeMapRenderer(this);\n    };\n    return Map;\n}(PluggableMap));\nexport default Map;\n//# sourceMappingURL=Map.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport { abstract } from './util.js';\nimport { easeIn } from './easing.js';\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nvar Tile = /** @class */ (function (_super) {\n    __extends(Tile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"./TileState.js\").default} state State.\n     * @param {Options} [opt_options] Tile options.\n     */\n    function Tile(tileCoord, state, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"./tilecoord.js\").TileCoord}\n         */\n        _this.tileCoord = tileCoord;\n        /**\n         * @protected\n         * @type {import(\"./TileState.js\").default}\n         */\n        _this.state = state;\n        /**\n         * An \"interim\" tile for this tile. The interim tile may be used while this\n         * one is loading, for \"smooth\" transitions when changing params/dimensions\n         * on the source.\n         * @type {Tile}\n         */\n        _this.interimTile = null;\n        /**\n         * A key assigned to the tile. This is used by the tile source to determine\n         * if this tile can effectively be used, or if a new tile should be created\n         * and this one be used as an interim tile for this new tile.\n         * @type {string}\n         */\n        _this.key = '';\n        /**\n         * The duration for the opacity transition.\n         * @type {number}\n         */\n        _this.transition_ =\n            options.transition === undefined ? 250 : options.transition;\n        /**\n         * Lookup of start times for rendering transitions.  If the start time is\n         * equal to -1, the transition is complete.\n         * @type {Object<string, number>}\n         */\n        _this.transitionStarts_ = {};\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    Tile.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * Called by the tile cache when the tile is removed from the cache due to expiry\n     */\n    Tile.prototype.release = function () { };\n    /**\n     * @return {string} Key.\n     */\n    Tile.prototype.getKey = function () {\n        return this.key + '/' + this.tileCoord;\n    };\n    /**\n     * Get the interim tile most suitable for rendering using the chain of interim\n     * tiles. This corresponds to the  most recent tile that has been loaded, if no\n     * such tile exists, the original tile is returned.\n     * @return {!Tile} Best tile for rendering.\n     */\n    Tile.prototype.getInterimTile = function () {\n        if (!this.interimTile) {\n            //empty chain\n            return this;\n        }\n        var tile = this.interimTile;\n        // find the first loaded tile and return it. Since the chain is sorted in\n        // decreasing order of creation time, there is no need to search the remainder\n        // of the list (all those tiles correspond to older requests and will be\n        // cleaned up by refreshInterimChain)\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                // Show tile immediately instead of fading it in after loading, because\n                // the interim tile is in place already\n                this.transition_ = 0;\n                return tile;\n            }\n            tile = tile.interimTile;\n        } while (tile);\n        // we can not find a better tile\n        return this;\n    };\n    /**\n     * Goes through the chain of interim tiles and discards sections of the chain\n     * that are no longer relevant.\n     */\n    Tile.prototype.refreshInterimChain = function () {\n        if (!this.interimTile) {\n            return;\n        }\n        var tile = this.interimTile;\n        var prev = /** @type {Tile} */ (this);\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                //we have a loaded tile, we can discard the rest of the list\n                //we would could abort any LOADING tile request\n                //older than this tile (i.e. any LOADING tile following this entry in the chain)\n                tile.interimTile = null;\n                break;\n            }\n            else if (tile.getState() == TileState.LOADING) {\n                //keep this LOADING tile any loaded tiles later in the chain are\n                //older than this tile, so we're still interested in the request\n                prev = tile;\n            }\n            else if (tile.getState() == TileState.IDLE) {\n                //the head of the list is the most current tile, we don't need\n                //to start any other requests for this chain\n                prev.interimTile = tile.interimTile;\n            }\n            else {\n                prev = tile;\n            }\n            tile = prev.interimTile;\n        } while (tile);\n    };\n    /**\n     * Get the tile coordinate for this tile.\n     * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n     * @api\n     */\n    Tile.prototype.getTileCoord = function () {\n        return this.tileCoord;\n    };\n    /**\n     * @return {import(\"./TileState.js\").default} State.\n     */\n    Tile.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n     * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n     * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n     * the tile queue and will block other requests.\n     * @param {import(\"./TileState.js\").default} state State.\n     * @api\n     */\n    Tile.prototype.setState = function (state) {\n        if (this.state !== TileState.ERROR && this.state > state) {\n            throw new Error('Tile load sequence violation');\n        }\n        this.state = state;\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @abstract\n     * @api\n     */\n    Tile.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * Get the alpha value for rendering.\n     * @param {string} id An id for the renderer.\n     * @param {number} time The render frame time.\n     * @return {number} A number between 0 and 1.\n     */\n    Tile.prototype.getAlpha = function (id, time) {\n        if (!this.transition_) {\n            return 1;\n        }\n        var start = this.transitionStarts_[id];\n        if (!start) {\n            start = time;\n            this.transitionStarts_[id] = start;\n        }\n        else if (start === -1) {\n            return 1;\n        }\n        var delta = time - start + 1000 / 60; // avoid rendering at 0\n        if (delta >= this.transition_) {\n            return 1;\n        }\n        return easeIn(delta / this.transition_);\n    };\n    /**\n     * Determine if a tile is in an alpha transition.  A tile is considered in\n     * transition if tile.getAlpha() has not yet been called or has been called\n     * and returned 1.\n     * @param {string} id An id for the renderer.\n     * @return {boolean} The tile is in transition.\n     */\n    Tile.prototype.inTransition = function (id) {\n        if (!this.transition_) {\n            return false;\n        }\n        return this.transitionStarts_[id] !== -1;\n    };\n    /**\n     * Mark a transition as complete.\n     * @param {string} id An id for the renderer.\n     */\n    Tile.prototype.endTransition = function (id) {\n        if (this.transition_) {\n            this.transitionStarts_[id] = -1;\n        }\n    };\n    return Tile;\n}(EventTarget));\nexport default Tile;\n//# sourceMappingURL=Tile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { listenImage } from './Image.js';\nvar ImageTile = /** @class */ (function (_super) {\n    __extends(ImageTile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"./TileState.js\").default} state State.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @param {import(\"./Tile.js\").Options} [opt_options] Tile options.\n     */\n    function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n        var _this = _super.call(this, tileCoord, state, opt_options) || this;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ = crossOrigin;\n        /**\n         * Image URI\n         *\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        _this.key = src;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @private\n         * @type {import(\"./Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction_ = tileLoadFunction;\n        return _this;\n    }\n    /**\n     * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @api\n     */\n    ImageTile.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n     * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n     */\n    ImageTile.prototype.setImage = function (element) {\n        this.image_ = element;\n        this.state = TileState.LOADED;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageError_ = function () {\n        this.state = TileState.ERROR;\n        this.unlistenImage_();\n        this.image_ = getBlankImage();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageLoad_ = function () {\n        var image = /** @type {HTMLImageElement} */ (this.image_);\n        if (image.naturalWidth && image.naturalHeight) {\n            this.state = TileState.LOADED;\n        }\n        else {\n            this.state = TileState.EMPTY;\n        }\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Load not yet loaded URI.\n     * @api\n     */\n    ImageTile.prototype.load = function () {\n        if (this.state == TileState.ERROR) {\n            this.state = TileState.IDLE;\n            this.image_ = new Image();\n            if (this.crossOrigin_ !== null) {\n                this.image_.crossOrigin = this.crossOrigin_;\n            }\n        }\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            this.tileLoadFunction_(this, this.src_);\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return ImageTile;\n}(Tile));\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n    var ctx = createCanvasContext2D(1, 1);\n    ctx.fillStyle = 'rgba(0,0,0,0)';\n    ctx.fillRect(0, 0, 1, 1);\n    return ctx.canvas;\n}\nexport default ImageTile;\n//# sourceMappingURL=ImageTile.js.map","/**\n * @module ol/reproj/common\n */\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport var ENABLE_RASTER_REPROJECTION = true;\n//# sourceMappingURL=common.js.map","/**\n * @module ol/reproj/Triangulation\n */\nimport { boundingExtent, createEmpty, extendCoordinate, getArea, getBottomLeft, getBottomRight, getTopLeft, getTopRight, getWidth, intersects, } from '../extent.js';\nimport { getTransform } from '../proj.js';\nimport { log2, modulo } from '../math.js';\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nvar MAX_SUBDIVISION = 10;\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nvar MAX_TRIANGLE_WIDTH = 0.25;\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nvar Triangulation = /** @class */ (function () {\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n     * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n     * @param {number} errorThreshold Acceptable error (in source units).\n     * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n     */\n    function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold, opt_destinationResolution) {\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.sourceProj_ = sourceProj;\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.targetProj_ = targetProj;\n        /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n        var transformInvCache = {};\n        var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n        /**\n         * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n         * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n         * @private\n         */\n        this.transformInv_ = function (c) {\n            var key = c[0] + '/' + c[1];\n            if (!transformInvCache[key]) {\n                transformInvCache[key] = transformInv(c);\n            }\n            return transformInvCache[key];\n        };\n        /**\n         * @type {import(\"../extent.js\").Extent}\n         * @private\n         */\n        this.maxSourceExtent_ = maxSourceExtent;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n        /**\n         * @type {Array<Triangle>}\n         * @private\n         */\n        this.triangles_ = [];\n        /**\n         * Indicates that the triangulation crosses edge of the source projection.\n         * @type {boolean}\n         * @private\n         */\n        this.wrapsXInSource_ = false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.canWrapXInSource_ =\n            this.sourceProj_.canWrapX() &&\n                !!maxSourceExtent &&\n                !!this.sourceProj_.getExtent() &&\n                getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n            ? getWidth(this.sourceProj_.getExtent())\n            : null;\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.targetWorldWidth_ = this.targetProj_.getExtent()\n            ? getWidth(this.targetProj_.getExtent())\n            : null;\n        var destinationTopLeft = getTopLeft(targetExtent);\n        var destinationTopRight = getTopRight(targetExtent);\n        var destinationBottomRight = getBottomRight(targetExtent);\n        var destinationBottomLeft = getBottomLeft(targetExtent);\n        var sourceTopLeft = this.transformInv_(destinationTopLeft);\n        var sourceTopRight = this.transformInv_(destinationTopRight);\n        var sourceBottomRight = this.transformInv_(destinationBottomRight);\n        var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n        /*\n         * The maxSubdivision controls how many splittings of the target area can\n         * be done. The idea here is to do a linear mapping of the target areas\n         * but the actual overal reprojection (can be) extremely non-linear. The\n         * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n         * tile size. However this function is also called to remap canvas rendered\n         * layers which can be much larger. This calculation increases the maxSubdivision\n         * value by the right factor so that each 256x256 pixel area has\n         * MAX_SUBDIVISION divisions.\n         */\n        var maxSubdivision = MAX_SUBDIVISION +\n            (opt_destinationResolution\n                ? Math.max(0, Math.ceil(log2(getArea(targetExtent) /\n                    (opt_destinationResolution *\n                        opt_destinationResolution *\n                        256 *\n                        256))))\n                : 0);\n        this.addQuad_(destinationTopLeft, destinationTopRight, destinationBottomRight, destinationBottomLeft, sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft, maxSubdivision);\n        if (this.wrapsXInSource_) {\n            var leftBound_1 = Infinity;\n            this.triangles_.forEach(function (triangle, i, arr) {\n                leftBound_1 = Math.min(leftBound_1, triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n            });\n            // Shift triangles to be as close to `leftBound` as possible\n            // (if the distance is more than `worldWidth / 2` it can be closer.\n            this.triangles_.forEach(function (triangle) {\n                if (Math.max(triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]) -\n                    leftBound_1 >\n                    this.sourceWorldWidth_ / 2) {\n                    var newTriangle = [\n                        [triangle.source[0][0], triangle.source[0][1]],\n                        [triangle.source[1][0], triangle.source[1][1]],\n                        [triangle.source[2][0], triangle.source[2][1]],\n                    ];\n                    if (newTriangle[0][0] - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                        newTriangle[0][0] -= this.sourceWorldWidth_;\n                    }\n                    if (newTriangle[1][0] - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                        newTriangle[1][0] -= this.sourceWorldWidth_;\n                    }\n                    if (newTriangle[2][0] - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                        newTriangle[2][0] -= this.sourceWorldWidth_;\n                    }\n                    // Rarely (if the extent contains both the dateline and prime meridian)\n                    // the shift can in turn break some triangles.\n                    // Detect this here and don't shift in such cases.\n                    var minX = Math.min(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    var maxX = Math.max(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    if (maxX - minX < this.sourceWorldWidth_ / 2) {\n                        triangle.source = newTriangle;\n                    }\n                }\n            }.bind(this));\n        }\n        transformInvCache = {};\n    }\n    /**\n     * Adds triangle to the triangulation.\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @private\n     */\n    Triangulation.prototype.addTriangle_ = function (a, b, c, aSrc, bSrc, cSrc) {\n        this.triangles_.push({\n            source: [aSrc, bSrc, cSrc],\n            target: [a, b, c],\n        });\n    };\n    /**\n     * Adds quad (points in clock-wise order) to the triangulation\n     * (and reprojects the vertices) if valid.\n     * Performs quad subdivision if needed to increase precision.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n     * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n     * @private\n     */\n    Triangulation.prototype.addQuad_ = function (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n        var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n        var sourceCoverageX = this.sourceWorldWidth_\n            ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n            : null;\n        var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n        // when the quad is wrapped in the source projection\n        // it covers most of the projection extent, but not fully\n        var wrapsX = this.sourceProj_.canWrapX() &&\n            sourceCoverageX > 0.5 &&\n            sourceCoverageX < 1;\n        var needsSubdivision = false;\n        if (maxSubdivision > 0) {\n            if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n                var targetQuadExtent = boundingExtent([a, b, c, d]);\n                var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n                needsSubdivision =\n                    targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n            }\n            if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n                needsSubdivision =\n                    sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n            }\n        }\n        if (!needsSubdivision && this.maxSourceExtent_) {\n            if (isFinite(sourceQuadExtent[0]) &&\n                isFinite(sourceQuadExtent[1]) &&\n                isFinite(sourceQuadExtent[2]) &&\n                isFinite(sourceQuadExtent[3])) {\n                if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n                    // whole quad outside source projection extent -> ignore\n                    return;\n                }\n            }\n        }\n        var isNotFinite = 0;\n        if (!needsSubdivision) {\n            if (!isFinite(aSrc[0]) ||\n                !isFinite(aSrc[1]) ||\n                !isFinite(bSrc[0]) ||\n                !isFinite(bSrc[1]) ||\n                !isFinite(cSrc[0]) ||\n                !isFinite(cSrc[1]) ||\n                !isFinite(dSrc[0]) ||\n                !isFinite(dSrc[1])) {\n                if (maxSubdivision > 0) {\n                    needsSubdivision = true;\n                }\n                else {\n                    // It might be the case that only 1 of the points is infinite. In this case\n                    // we can draw a single triangle with the other three points\n                    isNotFinite =\n                        (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n                            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n                            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n                            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n                    if (isNotFinite != 1 &&\n                        isNotFinite != 2 &&\n                        isNotFinite != 4 &&\n                        isNotFinite != 8) {\n                        return;\n                    }\n                }\n            }\n        }\n        if (maxSubdivision > 0) {\n            if (!needsSubdivision) {\n                var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n                var centerSrc = this.transformInv_(center);\n                var dx = void 0;\n                if (wrapsX) {\n                    var centerSrcEstimX = (modulo(aSrc[0], sourceWorldWidth) +\n                        modulo(cSrc[0], sourceWorldWidth)) /\n                        2;\n                    dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n                }\n                else {\n                    dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n                }\n                var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n                var centerSrcErrorSquared = dx * dx + dy * dy;\n                needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n            }\n            if (needsSubdivision) {\n                if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n                    // split horizontally (top & bottom)\n                    var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n                    var bcSrc = this.transformInv_(bc);\n                    var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n                    var daSrc = this.transformInv_(da);\n                    this.addQuad_(a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n                    this.addQuad_(da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n                }\n                else {\n                    // split vertically (left & right)\n                    var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n                    var abSrc = this.transformInv_(ab);\n                    var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n                    var cdSrc = this.transformInv_(cd);\n                    this.addQuad_(a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n                    this.addQuad_(ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n                }\n                return;\n            }\n        }\n        if (wrapsX) {\n            if (!this.canWrapXInSource_) {\n                return;\n            }\n            this.wrapsXInSource_ = true;\n        }\n        // Exactly zero or one of *Src is not finite\n        // The triangles must have the diagonal line as the first side\n        // This is to allow easy code in reproj.s to make it straight for broken\n        // browsers that can't handle diagonal clipping\n        if ((isNotFinite & 0xb) == 0) {\n            this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n        }\n        if ((isNotFinite & 0xe) == 0) {\n            this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n        }\n        if (isNotFinite) {\n            // Try the other two triangles\n            if ((isNotFinite & 0xd) == 0) {\n                this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n            }\n            if ((isNotFinite & 0x7) == 0) {\n                this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n            }\n        }\n    };\n    /**\n     * Calculates extent of the 'source' coordinates from all the triangles.\n     *\n     * @return {import(\"../extent.js\").Extent} Calculated extent.\n     */\n    Triangulation.prototype.calculateSourceExtent = function () {\n        var extent = createEmpty();\n        this.triangles_.forEach(function (triangle, i, arr) {\n            var src = triangle.source;\n            extendCoordinate(extent, src[0]);\n            extendCoordinate(extent, src[1]);\n            extendCoordinate(extent, src[2]);\n        });\n        return extent;\n    };\n    /**\n     * @return {Array<Triangle>} Array of the calculated triangles.\n     */\n    Triangulation.prototype.getTriangles = function () {\n        return this.triangles_;\n    };\n    return Triangulation;\n}());\nexport default Triangulation;\n//# sourceMappingURL=Triangulation.js.map","/**\n * @module ol/source/common\n */\n/**\n * Default WMS version.\n * @type {string}\n */\nexport var DEFAULT_WMS_VERSION = '1.3.0';\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport var IMAGE_SMOOTHING_DISABLED = {\n    imageSmoothingEnabled: false,\n    msImageSmoothingEnabled: false,\n};\n//# sourceMappingURL=common.js.map","/**\n * @module ol/reproj\n */\nimport { IMAGE_SMOOTHING_DISABLED } from './source/common.js';\nimport { assign } from './obj.js';\nimport { containsCoordinate, createEmpty, extend, forEachCorner, getCenter, getHeight, getTopLeft, getWidth, } from './extent.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { getPointResolution, transform } from './proj.js';\nimport { solveLinearSystem } from './math.js';\nvar brokenDiagonalRendering_;\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n    ctx.beginPath();\n    ctx.moveTo(0, 0);\n    ctx.lineTo(u1, v1);\n    ctx.lineTo(u2, v2);\n    ctx.closePath();\n    ctx.save();\n    ctx.clip();\n    ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n    ctx.restore();\n}\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n    // the values ought to be close to the rgba(210, 0, 0, 0.75)\n    return (Math.abs(data[offset * 4] - 210) > 2 ||\n        Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2);\n}\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n    if (brokenDiagonalRendering_ === undefined) {\n        var ctx = document.createElement('canvas').getContext('2d');\n        ctx.globalCompositeOperation = 'lighter';\n        ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n        drawTestTriangle(ctx, 4, 5, 4, 0);\n        drawTestTriangle(ctx, 4, 5, 0, 5);\n        var data = ctx.getImageData(0, 0, 3, 3).data;\n        brokenDiagonalRendering_ =\n            verifyBrokenDiagonalRendering(data, 0) ||\n                verifyBrokenDiagonalRendering(data, 4) ||\n                verifyBrokenDiagonalRendering(data, 8);\n    }\n    return brokenDiagonalRendering_;\n}\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution) {\n    var sourceCenter = transform(targetCenter, targetProj, sourceProj);\n    // calculate the ideal resolution of the source data\n    var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n    var targetMetersPerUnit = targetProj.getMetersPerUnit();\n    if (targetMetersPerUnit !== undefined) {\n        sourceResolution *= targetMetersPerUnit;\n    }\n    var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n    if (sourceMetersPerUnit !== undefined) {\n        sourceResolution /= sourceMetersPerUnit;\n    }\n    // Based on the projection properties, the point resolution at the specified\n    // coordinates may be slightly different. We need to reverse-compensate this\n    // in order to achieve optimal results.\n    var sourceExtent = sourceProj.getExtent();\n    if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n        var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n            sourceResolution;\n        if (isFinite(compensationFactor) && compensationFactor > 0) {\n            sourceResolution /= compensationFactor;\n        }\n    }\n    return sourceResolution;\n}\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(sourceProj, targetProj, targetExtent, targetResolution) {\n    var targetCenter = getCenter(targetExtent);\n    var sourceResolution = calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution);\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n        forEachCorner(targetExtent, function (corner) {\n            sourceResolution = calculateSourceResolution(sourceProj, targetProj, corner, targetResolution);\n            return isFinite(sourceResolution) && sourceResolution > 0;\n        });\n    }\n    return sourceResolution;\n}\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [opt_renderEdges] Render reprojection edges.\n * @param {object} [opt_contextOptions] Properties to set on the canvas context.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio, sourceResolution, sourceExtent, targetResolution, targetExtent, triangulation, sources, gutter, opt_renderEdges, opt_contextOptions) {\n    var context = createCanvasContext2D(Math.round(pixelRatio * width), Math.round(pixelRatio * height));\n    assign(context, opt_contextOptions);\n    if (sources.length === 0) {\n        return context.canvas;\n    }\n    context.scale(pixelRatio, pixelRatio);\n    function pixelRound(value) {\n        return Math.round(value * pixelRatio) / pixelRatio;\n    }\n    context.globalCompositeOperation = 'lighter';\n    var sourceDataExtent = createEmpty();\n    sources.forEach(function (src, i, arr) {\n        extend(sourceDataExtent, src.extent);\n    });\n    var canvasWidthInUnits = getWidth(sourceDataExtent);\n    var canvasHeightInUnits = getHeight(sourceDataExtent);\n    var stitchContext = createCanvasContext2D(Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution), Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution));\n    assign(stitchContext, opt_contextOptions);\n    var stitchScale = pixelRatio / sourceResolution;\n    sources.forEach(function (src, i, arr) {\n        var xPos = src.extent[0] - sourceDataExtent[0];\n        var yPos = -(src.extent[3] - sourceDataExtent[3]);\n        var srcWidth = getWidth(src.extent);\n        var srcHeight = getHeight(src.extent);\n        // This test should never fail -- but it does. Need to find a fix the upstream condition\n        if (src.image.width > 0 && src.image.height > 0) {\n            stitchContext.drawImage(src.image, gutter, gutter, src.image.width - 2 * gutter, src.image.height - 2 * gutter, xPos * stitchScale, yPos * stitchScale, srcWidth * stitchScale, srcHeight * stitchScale);\n        }\n    });\n    var targetTopLeft = getTopLeft(targetExtent);\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n        /* Calculate affine transform (src -> dst)\n         * Resulting matrix can be used to transform coordinate\n         * from `sourceProjection` to destination pixels.\n         *\n         * To optimize number of context calls and increase numerical stability,\n         * we also do the following operations:\n         * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n         * here before solving the linear system so [ui, vi] are pixel coordinates.\n         *\n         * Src points: xi, yi\n         * Dst points: ui, vi\n         * Affine coefficients: aij\n         *\n         * | x0 y0 1  0  0 0 |   |a00|   |u0|\n         * | x1 y1 1  0  0 0 |   |a01|   |u1|\n         * | x2 y2 1  0  0 0 | x |a02| = |u2|\n         * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n         * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n         * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n         */\n        var source = triangle.source;\n        var target = triangle.target;\n        var x0 = source[0][0], y0 = source[0][1];\n        var x1 = source[1][0], y1 = source[1][1];\n        var x2 = source[2][0], y2 = source[2][1];\n        // Make sure that everything is on pixel boundaries\n        var u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n        var v0 = pixelRound(-(target[0][1] - targetTopLeft[1]) / targetResolution);\n        var u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n        var v1 = pixelRound(-(target[1][1] - targetTopLeft[1]) / targetResolution);\n        var u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n        var v2 = pixelRound(-(target[2][1] - targetTopLeft[1]) / targetResolution);\n        // Shift all the source points to improve numerical stability\n        // of all the subsequent calculations. The [x0, y0] is used here.\n        // This is also used to simplify the linear system.\n        var sourceNumericalShiftX = x0;\n        var sourceNumericalShiftY = y0;\n        x0 = 0;\n        y0 = 0;\n        x1 -= sourceNumericalShiftX;\n        y1 -= sourceNumericalShiftY;\n        x2 -= sourceNumericalShiftX;\n        y2 -= sourceNumericalShiftY;\n        var augmentedMatrix = [\n            [x1, y1, 0, 0, u1 - u0],\n            [x2, y2, 0, 0, u2 - u0],\n            [0, 0, x1, y1, v1 - v0],\n            [0, 0, x2, y2, v2 - v0],\n        ];\n        var affineCoefs = solveLinearSystem(augmentedMatrix);\n        if (!affineCoefs) {\n            return;\n        }\n        context.save();\n        context.beginPath();\n        if (isBrokenDiagonalRendering() ||\n            opt_contextOptions === IMAGE_SMOOTHING_DISABLED) {\n            // Make sure that all lines are horizontal or vertical\n            context.moveTo(u1, v1);\n            // This is the diagonal line. Do it in 4 steps\n            var steps = 4;\n            var ud = u0 - u1;\n            var vd = v0 - v1;\n            for (var step = 0; step < steps; step++) {\n                // Go horizontally\n                context.lineTo(u1 + pixelRound(((step + 1) * ud) / steps), v1 + pixelRound((step * vd) / (steps - 1)));\n                // Go vertically\n                if (step != steps - 1) {\n                    context.lineTo(u1 + pixelRound(((step + 1) * ud) / steps), v1 + pixelRound(((step + 1) * vd) / (steps - 1)));\n                }\n            }\n            // We are almost at u0r, v0r\n            context.lineTo(u2, v2);\n        }\n        else {\n            context.moveTo(u1, v1);\n            context.lineTo(u0, v0);\n            context.lineTo(u2, v2);\n        }\n        context.clip();\n        context.transform(affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n        context.translate(sourceDataExtent[0] - sourceNumericalShiftX, sourceDataExtent[3] - sourceNumericalShiftY);\n        context.scale(sourceResolution / pixelRatio, -sourceResolution / pixelRatio);\n        context.drawImage(stitchContext.canvas, 0, 0);\n        context.restore();\n    });\n    if (opt_renderEdges) {\n        context.save();\n        context.globalCompositeOperation = 'source-over';\n        context.strokeStyle = 'black';\n        context.lineWidth = 1;\n        triangulation.getTriangles().forEach(function (triangle, i, arr) {\n            var target = triangle.target;\n            var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n            var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n            var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n            var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n            var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n            var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n            context.beginPath();\n            context.moveTo(u1, v1);\n            context.lineTo(u0, v0);\n            context.lineTo(u2, v2);\n            context.closePath();\n            context.stroke();\n        });\n        context.restore();\n    }\n    return context.canvas;\n}\n//# sourceMappingURL=reproj.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/reproj/Tile\n */\nimport { ERROR_THRESHOLD } from './common.js';\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport { calculateSourceExtentResolution, render as renderReprojected, } from '../reproj.js';\nimport { clamp } from '../math.js';\nimport { getArea, getIntersection } from '../extent.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nvar ReprojTile = /** @class */ (function (_super) {\n    __extends(ReprojTile, _super);\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n     * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {number} gutter Gutter of the source tiles.\n     * @param {FunctionType} getTileFunction\n     *     Function returning source tiles (z, x, y, pixelRatio).\n     * @param {number} [opt_errorThreshold] Acceptable reprojection error (in px).\n     * @param {boolean} [opt_renderEdges] Render reprojection edges.\n     * @param {object} [opt_contextOptions] Properties to set on the canvas context.\n     */\n    function ReprojTile(sourceProj, sourceTileGrid, targetProj, targetTileGrid, tileCoord, wrappedTileCoord, pixelRatio, gutter, getTileFunction, opt_errorThreshold, opt_renderEdges, opt_contextOptions) {\n        var _this = _super.call(this, tileCoord, TileState.IDLE) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n        /**\n         * @private\n         * @type {object}\n         */\n        _this.contextOptions_ = opt_contextOptions;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.gutter_ = gutter;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.sourceTileGrid_ = sourceTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.targetTileGrid_ = targetTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilecoord.js\").TileCoord}\n         */\n        _this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n        /**\n         * @private\n         * @type {!Array<import(\"../Tile.js\").default>}\n         */\n        _this.sourceTiles_ = [];\n        /**\n         * @private\n         * @type {?Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.sourcesListenerKeys_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.sourceZ_ = 0;\n        var targetExtent = targetTileGrid.getTileCoordExtent(_this.wrappedTileCoord_);\n        var maxTargetExtent = _this.targetTileGrid_.getExtent();\n        var maxSourceExtent = _this.sourceTileGrid_.getExtent();\n        var limitedTargetExtent = maxTargetExtent\n            ? getIntersection(targetExtent, maxTargetExtent)\n            : targetExtent;\n        if (getArea(limitedTargetExtent) === 0) {\n            // Tile is completely outside range -> EMPTY\n            // TODO: is it actually correct that the source even creates the tile ?\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var sourceProjExtent = sourceProj.getExtent();\n        if (sourceProjExtent) {\n            if (!maxSourceExtent) {\n                maxSourceExtent = sourceProjExtent;\n            }\n            else {\n                maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n            }\n        }\n        var targetResolution = targetTileGrid.getResolution(_this.wrappedTileCoord_[0]);\n        var sourceResolution = calculateSourceExtentResolution(sourceProj, targetProj, limitedTargetExtent, targetResolution);\n        if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n            // invalid sourceResolution -> EMPTY\n            // probably edges of the projections when no extent is defined\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var errorThresholdInPixels = opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n        /**\n         * @private\n         * @type {!import(\"./Triangulation.js\").default}\n         */\n        _this.triangulation_ = new Triangulation(sourceProj, targetProj, limitedTargetExtent, maxSourceExtent, sourceResolution * errorThresholdInPixels, targetResolution);\n        if (_this.triangulation_.getTriangles().length === 0) {\n            // no valid triangles -> EMPTY\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        _this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n        var sourceExtent = _this.triangulation_.calculateSourceExtent();\n        if (maxSourceExtent) {\n            if (sourceProj.canWrapX()) {\n                sourceExtent[1] = clamp(sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n                sourceExtent[3] = clamp(sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n            }\n            else {\n                sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n            }\n        }\n        if (!getArea(sourceExtent)) {\n            _this.state = TileState.EMPTY;\n        }\n        else {\n            var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(sourceExtent, _this.sourceZ_);\n            for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n                for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n                    var tile = getTileFunction(_this.sourceZ_, srcX, srcY, pixelRatio);\n                    if (tile) {\n                        _this.sourceTiles_.push(tile);\n                    }\n                }\n            }\n            if (_this.sourceTiles_.length === 0) {\n                _this.state = TileState.EMPTY;\n            }\n        }\n        return _this;\n    }\n    /**\n     * Get the HTML Canvas element for this tile.\n     * @return {HTMLCanvasElement} Canvas.\n     */\n    ReprojTile.prototype.getImage = function () {\n        return this.canvas_;\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.reproject_ = function () {\n        var sources = [];\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n            if (tile && tile.getState() == TileState.LOADED) {\n                sources.push({\n                    extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n                    image: tile.getImage(),\n                });\n            }\n        }.bind(this));\n        this.sourceTiles_.length = 0;\n        if (sources.length === 0) {\n            this.state = TileState.ERROR;\n        }\n        else {\n            var z = this.wrappedTileCoord_[0];\n            var size = this.targetTileGrid_.getTileSize(z);\n            var width = typeof size === 'number' ? size : size[0];\n            var height = typeof size === 'number' ? size : size[1];\n            var targetResolution = this.targetTileGrid_.getResolution(z);\n            var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n            var targetExtent = this.targetTileGrid_.getTileCoordExtent(this.wrappedTileCoord_);\n            this.canvas_ = renderReprojected(width, height, this.pixelRatio_, sourceResolution, this.sourceTileGrid_.getExtent(), targetResolution, targetExtent, this.triangulation_, sources, this.gutter_, this.renderEdges_, this.contextOptions_);\n            this.state = TileState.LOADED;\n        }\n        this.changed();\n    };\n    /**\n     * Load not yet loaded URI.\n     */\n    ReprojTile.prototype.load = function () {\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            var leftToLoad_1 = 0;\n            this.sourcesListenerKeys_ = [];\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE || state == TileState.LOADING) {\n                    leftToLoad_1++;\n                    var sourceListenKey_1 = listen(tile, EventType.CHANGE, function (e) {\n                        var state = tile.getState();\n                        if (state == TileState.LOADED ||\n                            state == TileState.ERROR ||\n                            state == TileState.EMPTY) {\n                            unlistenByKey(sourceListenKey_1);\n                            leftToLoad_1--;\n                            if (leftToLoad_1 === 0) {\n                                this.unlistenSources_();\n                                this.reproject_();\n                            }\n                        }\n                    }, this);\n                    this.sourcesListenerKeys_.push(sourceListenKey_1);\n                }\n            }.bind(this));\n            if (leftToLoad_1 === 0) {\n                setTimeout(this.reproject_.bind(this), 0);\n            }\n            else {\n                this.sourceTiles_.forEach(function (tile, i, arr) {\n                    var state = tile.getState();\n                    if (state == TileState.IDLE) {\n                        tile.load();\n                    }\n                });\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.unlistenSources_ = function () {\n        this.sourcesListenerKeys_.forEach(unlistenByKey);\n        this.sourcesListenerKeys_ = null;\n    };\n    return ReprojTile;\n}(Tile));\nexport default ReprojTile;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/structs/LRUCache\n */\nimport { assert } from '../asserts.js';\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nvar LRUCache = /** @class */ (function () {\n    /**\n     * @param {number} [opt_highWaterMark] High water mark.\n     */\n    function LRUCache(opt_highWaterMark) {\n        /**\n         * Desired max cache size after expireCache(). If set to 0, no cache entries\n         * will be pruned at all.\n         * @type {number}\n         */\n        this.highWaterMark =\n            opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.count_ = 0;\n        /**\n         * @private\n         * @type {!Object<string, Entry>}\n         */\n        this.entries_ = {};\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        this.oldest_ = null;\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        this.newest_ = null;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    LRUCache.prototype.canExpireCache = function () {\n        return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    LRUCache.prototype.clear = function () {\n        this.count_ = 0;\n        this.entries_ = {};\n        this.oldest_ = null;\n        this.newest_ = null;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Contains key.\n     */\n    LRUCache.prototype.containsKey = function (key) {\n        return this.entries_.hasOwnProperty(key);\n    };\n    /**\n     * @param {function(T, string, LRUCache<T>): ?} f The function\n     *     to call for every entry from the oldest to the newer. This function takes\n     *     3 arguments (the entry value, the entry key and the LRUCache object).\n     *     The return value is ignored.\n     */\n    LRUCache.prototype.forEach = function (f) {\n        var entry = this.oldest_;\n        while (entry) {\n            f(entry.value_, entry.key_, this);\n            entry = entry.newer;\n        }\n    };\n    /**\n     * @param {string} key Key.\n     * @param {*} [opt_options] Options (reserved for subclasses).\n     * @return {T} Value.\n     */\n    LRUCache.prototype.get = function (key, opt_options) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            return entry.value_;\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n            this.oldest_.older = null;\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        entry.newer = null;\n        entry.older = this.newest_;\n        this.newest_.newer = entry;\n        this.newest_ = entry;\n        return entry.value_;\n    };\n    /**\n     * Remove an entry from the cache.\n     * @param {string} key The entry key.\n     * @return {T} The removed entry.\n     */\n    LRUCache.prototype.remove = function (key) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            this.newest_ = /** @type {Entry} */ (entry.older);\n            if (this.newest_) {\n                this.newest_.newer = null;\n            }\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (entry.newer);\n            if (this.oldest_) {\n                this.oldest_.older = null;\n            }\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        delete this.entries_[key];\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @return {number} Count.\n     */\n    LRUCache.prototype.getCount = function () {\n        return this.count_;\n    };\n    /**\n     * @return {Array<string>} Keys.\n     */\n    LRUCache.prototype.getKeys = function () {\n        var keys = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            keys[i++] = entry.key_;\n        }\n        return keys;\n    };\n    /**\n     * @return {Array<T>} Values.\n     */\n    LRUCache.prototype.getValues = function () {\n        var values = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            values[i++] = entry.value_;\n        }\n        return values;\n    };\n    /**\n     * @return {T} Last value.\n     */\n    LRUCache.prototype.peekLast = function () {\n        return this.oldest_.value_;\n    };\n    /**\n     * @return {string} Last key.\n     */\n    LRUCache.prototype.peekLastKey = function () {\n        return this.oldest_.key_;\n    };\n    /**\n     * Get the key of the newest item in the cache.  Throws if the cache is empty.\n     * @return {string} The newest key.\n     */\n    LRUCache.prototype.peekFirstKey = function () {\n        return this.newest_.key_;\n    };\n    /**\n     * @return {T} value Value.\n     */\n    LRUCache.prototype.pop = function () {\n        var entry = this.oldest_;\n        delete this.entries_[entry.key_];\n        if (entry.newer) {\n            entry.newer.older = null;\n        }\n        this.oldest_ = /** @type {Entry} */ (entry.newer);\n        if (!this.oldest_) {\n            this.newest_ = null;\n        }\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.replace = function (key, value) {\n        this.get(key); // update `newest_`\n        this.entries_[key].value_ = value;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.set = function (key, value) {\n        assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n        var entry = {\n            key_: key,\n            newer: null,\n            older: this.newest_,\n            value_: value,\n        };\n        if (!this.newest_) {\n            this.oldest_ = entry;\n        }\n        else {\n            this.newest_.newer = entry;\n        }\n        this.newest_ = entry;\n        this.entries_[key] = entry;\n        ++this.count_;\n    };\n    /**\n     * Set a maximum number of entries for the cache.\n     * @param {number} size Cache size.\n     * @api\n     */\n    LRUCache.prototype.setSize = function (size) {\n        this.highWaterMark = size;\n    };\n    return LRUCache;\n}());\nexport default LRUCache;\n//# sourceMappingURL=LRUCache.js.map","/**\n * @module ol/tilecoord\n */\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [opt_tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n    if (opt_tileCoord !== undefined) {\n        opt_tileCoord[0] = z;\n        opt_tileCoord[1] = x;\n        opt_tileCoord[2] = y;\n        return opt_tileCoord;\n    }\n    else {\n        return [z, x, y];\n    }\n}\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n    return z + '/' + x + '/' + y;\n}\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n    return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n    var _a = tileKey\n        .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n        .split(',')\n        .map(Number), z = _a[0], x = _a[1], y = _a[2];\n    return getKeyZXY(z, x, y);\n}\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n    return key.split('/').map(Number);\n}\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n    return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n    var z = tileCoord[0];\n    var x = tileCoord[1];\n    var y = tileCoord[2];\n    if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n        return false;\n    }\n    var tileRange = tileGrid.getFullTileRange(z);\n    if (!tileRange) {\n        return true;\n    }\n    else {\n        return tileRange.containsXY(x, y);\n    }\n}\n//# sourceMappingURL=tilecoord.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport { fromKey, getKey } from './tilecoord.js';\nvar TileCache = /** @class */ (function (_super) {\n    __extends(TileCache, _super);\n    function TileCache() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    TileCache.prototype.expireCache = function (usedTiles) {\n        while (this.canExpireCache()) {\n            var tile = this.peekLast();\n            if (tile.getKey() in usedTiles) {\n                break;\n            }\n            else {\n                this.pop().release();\n            }\n        }\n    };\n    /**\n     * Prune all tiles from the cache that don't have the same z as the newest tile.\n     */\n    TileCache.prototype.pruneExceptNewestZ = function () {\n        if (this.getCount() === 0) {\n            return;\n        }\n        var key = this.peekFirstKey();\n        var tileCoord = fromKey(key);\n        var z = tileCoord[0];\n        this.forEach(function (tile) {\n            if (tile.tileCoord[0] !== z) {\n                this.remove(getKey(tile.tileCoord));\n                tile.release();\n            }\n        }.bind(this));\n    };\n    return TileCache;\n}(LRUCache));\nexport default TileCache;\n//# sourceMappingURL=TileCache.js.map","/**\n * @module ol/source/TileEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a tile starts loading.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n     * @api\n     */\n    TILELOADSTART: 'tileloadstart',\n    /**\n     * Triggered when a tile finishes loading, either when its data is loaded,\n     * or when loading was aborted because the tile is no longer needed.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n     * @api\n     */\n    TILELOADEND: 'tileloadend',\n    /**\n     * Triggered if tile loading results in an error.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n     * @api\n     */\n    TILELOADERROR: 'tileloaderror',\n};\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n//# sourceMappingURL=TileEventType.js.map","/**\n * @module ol/TileRange\n */\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = /** @class */ (function () {\n    /**\n     * @param {number} minX Minimum X.\n     * @param {number} maxX Maximum X.\n     * @param {number} minY Minimum Y.\n     * @param {number} maxY Maximum Y.\n     */\n    function TileRange(minX, maxX, minY, maxY) {\n        /**\n         * @type {number}\n         */\n        this.minX = minX;\n        /**\n         * @type {number}\n         */\n        this.maxX = maxX;\n        /**\n         * @type {number}\n         */\n        this.minY = minY;\n        /**\n         * @type {number}\n         */\n        this.maxY = maxY;\n    }\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {boolean} Contains tile coordinate.\n     */\n    TileRange.prototype.contains = function (tileCoord) {\n        return this.containsXY(tileCoord[1], tileCoord[2]);\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Contains.\n     */\n    TileRange.prototype.containsTileRange = function (tileRange) {\n        return (this.minX <= tileRange.minX &&\n            tileRange.maxX <= this.maxX &&\n            this.minY <= tileRange.minY &&\n            tileRange.maxY <= this.maxY);\n    };\n    /**\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @return {boolean} Contains coordinate.\n     */\n    TileRange.prototype.containsXY = function (x, y) {\n        return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Equals.\n     */\n    TileRange.prototype.equals = function (tileRange) {\n        return (this.minX == tileRange.minX &&\n            this.minY == tileRange.minY &&\n            this.maxX == tileRange.maxX &&\n            this.maxY == tileRange.maxY);\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     */\n    TileRange.prototype.extend = function (tileRange) {\n        if (tileRange.minX < this.minX) {\n            this.minX = tileRange.minX;\n        }\n        if (tileRange.maxX > this.maxX) {\n            this.maxX = tileRange.maxX;\n        }\n        if (tileRange.minY < this.minY) {\n            this.minY = tileRange.minY;\n        }\n        if (tileRange.maxY > this.maxY) {\n            this.maxY = tileRange.maxY;\n        }\n    };\n    /**\n     * @return {number} Height.\n     */\n    TileRange.prototype.getHeight = function () {\n        return this.maxY - this.minY + 1;\n    };\n    /**\n     * @return {import(\"./size.js\").Size} Size.\n     */\n    TileRange.prototype.getSize = function () {\n        return [this.getWidth(), this.getHeight()];\n    };\n    /**\n     * @return {number} Width.\n     */\n    TileRange.prototype.getWidth = function () {\n        return this.maxX - this.minX + 1;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Intersects.\n     */\n    TileRange.prototype.intersects = function (tileRange) {\n        return (this.minX <= tileRange.maxX &&\n            this.maxX >= tileRange.minX &&\n            this.minY <= tileRange.maxY &&\n            this.maxY >= tileRange.minY);\n    };\n    return TileRange;\n}());\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n    if (tileRange !== undefined) {\n        tileRange.minX = minX;\n        tileRange.maxX = maxX;\n        tileRange.minY = minY;\n        tileRange.maxY = maxY;\n        return tileRange;\n    }\n    else {\n        return new TileRange(minX, maxX, minY, maxY);\n    }\n}\nexport default TileRange;\n//# sourceMappingURL=TileRange.js.map","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, { createOrUpdate as createOrUpdateTileRange, } from '../TileRange.js';\nimport { DEFAULT_TILE_SIZE } from './common.js';\nimport { assert } from '../asserts.js';\nimport { clamp } from '../math.js';\nimport { createOrUpdate, getTopLeft } from '../extent.js';\nimport { createOrUpdate as createOrUpdateTileCoord } from '../tilecoord.js';\nimport { isSorted, linearFindNearest } from '../array.js';\nimport { toSize } from '../size.js';\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nvar tmpTileCoord = [0, 0, 0];\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nvar TileGrid = /** @class */ (function () {\n    /**\n     * @param {Options} options Tile grid options.\n     */\n    function TileGrid(options) {\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n        /**\n         * @private\n         * @type {!Array<number>}\n         */\n        this.resolutions_ = options.resolutions;\n        assert(isSorted(this.resolutions_, function (a, b) {\n            return b - a;\n        }, true), 17); // `resolutions` must be sorted in descending order\n        // check if we've got a consistent zoom factor and origin\n        var zoomFactor;\n        if (!options.origins) {\n            for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n                if (!zoomFactor) {\n                    zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n                }\n                else {\n                    if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n                        zoomFactor = undefined;\n                        break;\n                    }\n                }\n            }\n        }\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zoomFactor_ = zoomFactor;\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.maxZoom = this.resolutions_.length - 1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        this.origin_ = options.origin !== undefined ? options.origin : null;\n        /**\n         * @private\n         * @type {Array<import(\"../coordinate.js\").Coordinate>}\n         */\n        this.origins_ = null;\n        if (options.origins !== undefined) {\n            this.origins_ = options.origins;\n            assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n        }\n        var extent = options.extent;\n        if (extent !== undefined && !this.origin_ && !this.origins_) {\n            this.origin_ = getTopLeft(extent);\n        }\n        assert((!this.origin_ && this.origins_) || (this.origin_ && !this.origins_), 18); // Either `origin` or `origins` must be configured, never both\n        /**\n         * @private\n         * @type {Array<number|import(\"../size.js\").Size>}\n         */\n        this.tileSizes_ = null;\n        if (options.tileSizes !== undefined) {\n            this.tileSizes_ = options.tileSizes;\n            assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n        }\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size}\n         */\n        this.tileSize_ =\n            options.tileSize !== undefined\n                ? options.tileSize\n                : !this.tileSizes_\n                    ? DEFAULT_TILE_SIZE\n                    : null;\n        assert((!this.tileSize_ && this.tileSizes_) ||\n            (this.tileSize_ && !this.tileSizes_), 22); // Either `tileSize` or `tileSizes` must be configured, never both\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = extent !== undefined ? extent : null;\n        /**\n         * @private\n         * @type {Array<import(\"../TileRange.js\").default>}\n         */\n        this.fullTileRanges_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.tmpSize_ = [0, 0];\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.tmpExtent_ = [0, 0, 0, 0];\n        if (options.sizes !== undefined) {\n            this.fullTileRanges_ = options.sizes.map(function (size, z) {\n                var tileRange = new TileRange(Math.min(0, size[0]), Math.max(size[0] - 1, -1), Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n                if (extent) {\n                    var restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n                    tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n                    tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n                    tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n                    tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n                }\n                return tileRange;\n            }, this);\n        }\n        else if (extent) {\n            this.calculateTileRanges_(extent);\n        }\n    }\n    /**\n     * Call a function with each tile coordinate for a given extent and zoom level.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} zoom Integer zoom level.\n     * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.forEachTileCoord = function (extent, zoom, callback) {\n        var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n        for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n            for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n                callback([zoom, i, j]);\n            }\n        }\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n     * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n     * @return {boolean} Callback succeeded.\n     */\n    TileGrid.prototype.forEachTileCoordParentTileRange = function (tileCoord, callback, opt_tileRange, opt_extent) {\n        var tileRange, x, y;\n        var tileCoordExtent = null;\n        var z = tileCoord[0] - 1;\n        if (this.zoomFactor_ === 2) {\n            x = tileCoord[1];\n            y = tileCoord[2];\n        }\n        else {\n            tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n        }\n        while (z >= this.minZoom) {\n            if (this.zoomFactor_ === 2) {\n                x = Math.floor(x / 2);\n                y = Math.floor(y / 2);\n                tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n            }\n            else {\n                tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n            }\n            if (callback(z, tileRange)) {\n                return true;\n            }\n            --z;\n        }\n        return false;\n    };\n    /**\n     * Get the extent for this tile grid, if it was configured.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    TileGrid.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the maximum zoom level for the grid.\n     * @return {number} Max zoom.\n     * @api\n     */\n    TileGrid.prototype.getMaxZoom = function () {\n        return this.maxZoom;\n    };\n    /**\n     * Get the minimum zoom level for the grid.\n     * @return {number} Min zoom.\n     * @api\n     */\n    TileGrid.prototype.getMinZoom = function () {\n        return this.minZoom;\n    };\n    /**\n     * Get the origin for the grid at the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {import(\"../coordinate.js\").Coordinate} Origin.\n     * @api\n     */\n    TileGrid.prototype.getOrigin = function (z) {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        else {\n            return this.origins_[z];\n        }\n    };\n    /**\n     * Get the resolution for the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {number} Resolution.\n     * @api\n     */\n    TileGrid.prototype.getResolution = function (z) {\n        return this.resolutions_[z];\n    };\n    /**\n     * Get the list of resolutions for the tile grid.\n     * @return {Array<number>} Resolutions.\n     * @api\n     */\n    TileGrid.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileCoordChildTileRange = function (tileCoord, opt_tileRange, opt_extent) {\n        if (tileCoord[0] < this.maxZoom) {\n            if (this.zoomFactor_ === 2) {\n                var minX = tileCoord[1] * 2;\n                var minY = tileCoord[2] * 2;\n                return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n            }\n            var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent || this.tmpExtent_);\n            return this.getTileRangeForExtentAndZ(tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n        }\n        return null;\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileRangeForTileCoordAndZ = function (tileCoord, z, opt_tileRange) {\n        if (z > this.maxZoom || z < this.minZoom) {\n            return null;\n        }\n        var tileCoordZ = tileCoord[0];\n        var tileCoordX = tileCoord[1];\n        var tileCoordY = tileCoord[2];\n        if (z === tileCoordZ) {\n            return createOrUpdateTileRange(tileCoordX, tileCoordY, tileCoordX, tileCoordY, opt_tileRange);\n        }\n        if (this.zoomFactor_) {\n            var factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n            var minX = Math.floor(tileCoordX * factor);\n            var minY = Math.floor(tileCoordY * factor);\n            if (z < tileCoordZ) {\n                return createOrUpdateTileRange(minX, minX, minY, minY, opt_tileRange);\n            }\n            var maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n            var maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n            return createOrUpdateTileRange(minX, maxX, minY, maxY, opt_tileRange);\n        }\n        var tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n        return this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n    };\n    /**\n     * Get the extent for a tile range.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    TileGrid.prototype.getTileRangeExtent = function (z, tileRange, opt_extent) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n        var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n        var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n        var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get a tile range for the given extent and integer zoom level.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary tile range object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileRangeForExtentAndZ = function (extent, z, opt_tileRange) {\n        var tileCoord = tmpTileCoord;\n        this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n        var minX = tileCoord[1];\n        var minY = tileCoord[2];\n        this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n        return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n     */\n    TileGrid.prototype.getTileCoordCenter = function (tileCoord) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        return [\n            origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n            origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n        ];\n    };\n    /**\n     * Get the extent of a tile coordinate.\n     *\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordExtent = function (tileCoord, opt_extent) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n        var minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n        var maxX = minX + tileSize[0] * resolution;\n        var maxY = minY + tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get the tile coordinate for the given map coordinate and resolution.  This\n     * method considers that coordinates that intersect tile boundaries should be\n     * assigned the higher tile coordinate.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndResolution = function (coordinate, resolution, opt_tileCoord) {\n        return this.getTileCoordForXYAndResolution_(coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n    };\n    /**\n     * Note that this method should not be called for resolutions that correspond\n     * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {number} resolution Resolution (for a non-integer zoom level).\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndResolution_ = function (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n        var z = this.getZForResolution(resolution);\n        var scale = resolution / this.getResolution(z);\n        var origin = this.getOrigin(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = (scale * xFromOrigin) / tileSize[0];\n        var tileCoordY = (scale * yFromOrigin) / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n     * they should have separate implementations.  This method is for integer zoom\n     * levels.  The other method should only be called for resolutions corresponding\n     * to non-integer zoom levels.\n     * @param {number} x Map x coordinate.\n     * @param {number} y Map y coordinate.\n     * @param {number} z Integer zoom level.\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndZ_ = function (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = xFromOrigin / tileSize[0];\n        var tileCoordY = yFromOrigin / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Get a tile coordinate given a map coordinate and zoom level.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} z Zoom level.\n     * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndZ = function (coordinate, z, opt_tileCoord) {\n        return this.getTileCoordForXYAndZ_(coordinate[0], coordinate[1], z, false, opt_tileCoord);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {number} Tile resolution.\n     */\n    TileGrid.prototype.getTileCoordResolution = function (tileCoord) {\n        return this.resolutions_[tileCoord[0]];\n    };\n    /**\n     * Get the tile size for a zoom level. The type of the return value matches the\n     * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n     * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n     * @param {number} z Z.\n     * @return {number|import(\"../size.js\").Size} Tile size.\n     * @api\n     */\n    TileGrid.prototype.getTileSize = function (z) {\n        if (this.tileSize_) {\n            return this.tileSize_;\n        }\n        else {\n            return this.tileSizes_[z];\n        }\n    };\n    /**\n     * @param {number} z Zoom level.\n     * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n     */\n    TileGrid.prototype.getFullTileRange = function (z) {\n        if (!this.fullTileRanges_) {\n            return this.extent_\n                ? this.getTileRangeForExtentAndZ(this.extent_, z)\n                : null;\n        }\n        else {\n            return this.fullTileRanges_[z];\n        }\n    };\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n     *     If 0, the nearest resolution will be used.\n     *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n     *     nearest lower resolution (higher Z) will be used. Default is 0.\n     *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n     *\n     * For example to change tile Z at the midpoint of zoom levels\n     * ```js\n     * function(value, high, low) {\n     *   return value - low * Math.sqrt(high / low);\n     * }\n     * ```\n     * @return {number} Z.\n     * @api\n     */\n    TileGrid.prototype.getZForResolution = function (resolution, opt_direction) {\n        var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n        return clamp(z, this.minZoom, this.maxZoom);\n    };\n    /**\n     * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n     * @private\n     */\n    TileGrid.prototype.calculateTileRanges_ = function (extent) {\n        var length = this.resolutions_.length;\n        var fullTileRanges = new Array(length);\n        for (var z = this.minZoom; z < length; ++z) {\n            fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n        }\n        this.fullTileRanges_ = fullTileRanges;\n    };\n    return TileGrid;\n}());\nexport default TileGrid;\n//# sourceMappingURL=TileGrid.js.map","/**\n * @module ol/tilegrid\n */\nimport Corner from './extent/Corner.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport { DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { METERS_PER_UNIT, get as getProjection } from './proj.js';\nimport { containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth, } from './extent.js';\nimport { toSize } from './size.js';\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n    var tileGrid = projection.getDefaultTileGrid();\n    if (!tileGrid) {\n        tileGrid = createForProjection(projection);\n        projection.setDefaultTileGrid(tileGrid);\n    }\n    return tileGrid;\n}\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n    var z = tileCoord[0];\n    var center = tileGrid.getTileCoordCenter(tileCoord);\n    var projectionExtent = extentFromProjection(projection);\n    if (!containsCoordinate(projectionExtent, center)) {\n        var worldWidth = getWidth(projectionExtent);\n        var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n        center[0] += worldWidth * worldsAway;\n        return tileGrid.getTileCoordForCoordAndZ(center, z);\n    }\n    else {\n        return tileCoord;\n    }\n}\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n    var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n    var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n    return new TileGrid({\n        extent: extent,\n        origin: getCorner(extent, corner),\n        resolutions: resolutions,\n        tileSize: opt_tileSize,\n    });\n}\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [opt_options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n    var xyzOptions = opt_options || {};\n    var extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n    var gridOptions = {\n        extent: extent,\n        minZoom: xyzOptions.minZoom,\n        tileSize: xyzOptions.tileSize,\n        resolutions: resolutionsFromExtent(extent, xyzOptions.maxZoom, xyzOptions.tileSize, xyzOptions.maxResolution),\n    };\n    return new TileGrid(gridOptions);\n}\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [opt_maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize, opt_maxResolution) {\n    var maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n    var height = getHeight(extent);\n    var width = getWidth(extent);\n    var tileSize = toSize(opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE);\n    var maxResolution = opt_maxResolution > 0\n        ? opt_maxResolution\n        : Math.max(width / tileSize[0], height / tileSize[1]);\n    var length = maxZoom + 1;\n    var resolutions = new Array(length);\n    for (var z = 0; z < length; ++z) {\n        resolutions[z] = maxResolution / Math.pow(2, z);\n    }\n    return resolutions;\n}\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n    var extent = extentFromProjection(projection);\n    return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n    projection = getProjection(projection);\n    var extent = projection.getExtent();\n    if (!extent) {\n        var half = (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n        extent = createOrUpdate(-half, -half, half, half);\n    }\n    return extent;\n}\n//# sourceMappingURL=tilegrid.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport { abstract } from '../util.js';\nimport { assert } from '../asserts.js';\nimport { equivalent } from '../proj.js';\nimport { getKeyZXY, withinExtentAndZ } from '../tilecoord.js';\nimport { getForProjection as getTileGridForProjection, wrapX, } from '../tilegrid.js';\nimport { scale as scaleSize, toSize } from '../size.js';\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nvar TileSource = /** @class */ (function (_super) {\n    __extends(TileSource, _super);\n    /**\n     * @param {Options} options SourceTile source options.\n     */\n    function TileSource(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            attributionsCollapsible: options.attributionsCollapsible,\n            projection: options.projection,\n            state: options.state,\n            wrapX: options.wrapX,\n        }) || this;\n        /***\n         * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {TileSourceOnSignature<void>}\n         */\n        _this.un;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilePixelRatio_ =\n            options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n        /**\n         * @protected\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n        var tileSize = [256, 256];\n        var tileGrid = options.tileGrid;\n        if (tileGrid) {\n            toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n        }\n        /**\n         * @protected\n         * @type {import(\"../TileCache.js\").default}\n         */\n        _this.tileCache = new TileCache(options.cacheSize || 0);\n        /**\n         * @protected\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.tmpSize = [0, 0];\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.key_ = options.key || '';\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").Options}\n         */\n        _this.tileOptions = { transition: options.transition };\n        /**\n         * zDirection hint, read by the renderer. Indicates which resolution should be used\n         * by a renderer if the views resolution does not match any resolution of the tile source.\n         * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n         * will be used. If -1, the nearest higher resolution will be used.\n         * @type {number|import(\"../array.js\").NearestDirectionFunction}\n         */\n        _this.zDirection = options.zDirection ? options.zDirection : 0;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    TileSource.prototype.canExpireCache = function () {\n        return this.tileCache.canExpireCache();\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    TileSource.prototype.expireCache = function (projection, usedTiles) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (tileCache) {\n            tileCache.expireCache(usedTiles);\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {number} z Zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n     *     loaded tile.  If the callback returns `false`, the tile will not be\n     *     considered loaded.\n     * @return {boolean} The tile range is fully covered with loaded tiles.\n     */\n    TileSource.prototype.forEachLoadedTile = function (projection, z, tileRange, callback) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (!tileCache) {\n            return false;\n        }\n        var covered = true;\n        var tile, tileCoordKey, loaded;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                tileCoordKey = getKeyZXY(z, x, y);\n                loaded = false;\n                if (tileCache.containsKey(tileCoordKey)) {\n                    tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\n                    loaded = tile.getState() === TileState.LOADED;\n                    if (loaded) {\n                        loaded = callback(tile) !== false;\n                    }\n                }\n                if (!loaded) {\n                    covered = false;\n                }\n            }\n        }\n        return covered;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {number} Gutter.\n     */\n    TileSource.prototype.getGutterForProjection = function (projection) {\n        return 0;\n    };\n    /**\n     * Return the key to be used for all tiles in the source.\n     * @return {string} The key for all tiles.\n     * @protected\n     */\n    TileSource.prototype.getKey = function () {\n        return this.key_;\n    };\n    /**\n     * Set the value to be used as the key for all tiles in the source.\n     * @param {string} key The key for tiles.\n     * @protected\n     */\n    TileSource.prototype.setKey = function (key) {\n        if (this.key_ !== key) {\n            this.key_ = key;\n            this.changed();\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} Opaque.\n     */\n    TileSource.prototype.getOpaque = function (projection) {\n        return this.opaque_;\n    };\n    /**\n     * @return {Array<number>} Resolutions.\n     */\n    TileSource.prototype.getResolutions = function () {\n        return this.tileGrid.getResolutions();\n    };\n    /**\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     */\n    TileSource.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        return abstract();\n    };\n    /**\n     * Return the tile grid of the tile source.\n     * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     * @api\n     */\n    TileSource.prototype.getTileGrid = function () {\n        return this.tileGrid;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     */\n    TileSource.prototype.getTileGridForProjection = function (projection) {\n        if (!this.tileGrid) {\n            return getTileGridForProjection(projection);\n        }\n        else {\n            return this.tileGrid;\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../TileCache.js\").default} Tile cache.\n     * @protected\n     */\n    TileSource.prototype.getTileCacheForProjection = function (projection) {\n        assert(equivalent(this.getProjection(), projection), 68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n        );\n        return this.tileCache;\n    };\n    /**\n     * Get the tile pixel ratio for this source. Subclasses may override this\n     * method, which is meant to return a supported pixel ratio that matches the\n     * provided `pixelRatio` as close as possible.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Tile pixel ratio.\n     */\n    TileSource.prototype.getTilePixelRatio = function (pixelRatio) {\n        return this.tilePixelRatio_;\n    };\n    /**\n     * @param {number} z Z.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../size.js\").Size} Tile size.\n     */\n    TileSource.prototype.getTilePixelSize = function (z, pixelRatio, projection) {\n        var tileGrid = this.getTileGridForProjection(projection);\n        var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n        var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n        if (tilePixelRatio == 1) {\n            return tileSize;\n        }\n        else {\n            return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n        }\n    };\n    /**\n     * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n     * is outside the resolution and extent range of the tile grid, `null` will be\n     * returned.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../proj/Projection.js\").default} [opt_projection] Projection.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n     *     null if no tile URL should be created for the passed `tileCoord`.\n     */\n    TileSource.prototype.getTileCoordForTileUrlFunction = function (tileCoord, opt_projection) {\n        var projection = opt_projection !== undefined ? opt_projection : this.getProjection();\n        var tileGrid = this.getTileGridForProjection(projection);\n        if (this.getWrapX() && projection.isGlobal()) {\n            tileCoord = wrapX(tileGrid, tileCoord, projection);\n        }\n        return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n    };\n    /**\n     * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n     * @api\n     */\n    TileSource.prototype.clear = function () {\n        this.tileCache.clear();\n    };\n    TileSource.prototype.refresh = function () {\n        this.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Increases the cache size if needed\n     * @param {number} tileCount Minimum number of tiles needed.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    TileSource.prototype.updateCacheSize = function (tileCount, projection) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (tileCount > tileCache.highWaterMark) {\n            tileCache.highWaterMark = tileCount;\n        }\n    };\n    /**\n     * Marks a tile coord as being used, without triggering a load.\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    TileSource.prototype.useTile = function (z, x, y, projection) { };\n    return TileSource;\n}(Source));\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nvar TileSourceEvent = /** @class */ (function (_super) {\n    __extends(TileSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Tile.js\").default} tile The tile.\n     */\n    function TileSourceEvent(type, tile) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The tile related to the event.\n         * @type {import(\"../Tile.js\").default}\n         * @api\n         */\n        _this.tile = tile;\n        return _this;\n    }\n    return TileSourceEvent;\n}(Event));\nexport { TileSourceEvent };\nexport default TileSource;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/tileurlfunction\n */\nimport { assert } from './asserts.js';\nimport { modulo } from './math.js';\nimport { hash as tileCoordHash } from './tilecoord.js';\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n    var zRegEx = /\\{z\\}/g;\n    var xRegEx = /\\{x\\}/g;\n    var yRegEx = /\\{y\\}/g;\n    var dashYRegEx = /\\{-y\\}/g;\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            return template\n                .replace(zRegEx, tileCoord[0].toString())\n                .replace(xRegEx, tileCoord[1].toString())\n                .replace(yRegEx, tileCoord[2].toString())\n                .replace(dashYRegEx, function () {\n                var z = tileCoord[0];\n                var range = tileGrid.getFullTileRange(z);\n                assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n                var y = range.getHeight() - tileCoord[2] - 1;\n                return y.toString();\n            });\n        }\n    });\n}\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n    var len = templates.length;\n    var tileUrlFunctions = new Array(len);\n    for (var i = 0; i < len; ++i) {\n        tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n    }\n    return createFromTileUrlFunctions(tileUrlFunctions);\n}\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n    if (tileUrlFunctions.length === 1) {\n        return tileUrlFunctions[0];\n    }\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            var h = tileCoordHash(tileCoord);\n            var index = modulo(h, tileUrlFunctions.length);\n            return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n        }\n    });\n}\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n}\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n    var urls = [];\n    var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n    if (match) {\n        // char range\n        var startCharCode = match[1].charCodeAt(0);\n        var stopCharCode = match[2].charCodeAt(0);\n        var charCode = void 0;\n        for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n            urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n        }\n        return urls;\n    }\n    match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n    if (match) {\n        // number range\n        var stop_1 = parseInt(match[2], 10);\n        for (var i = parseInt(match[1], 10); i <= stop_1; i++) {\n            urls.push(url.replace(match[0], i.toString()));\n        }\n        return urls;\n    }\n    urls.push(url);\n    return urls;\n}\n//# sourceMappingURL=tileurlfunction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, { TileSourceEvent } from './Tile.js';\nimport TileState from '../TileState.js';\nimport { createFromTemplates, expandUrl } from '../tileurlfunction.js';\nimport { getKeyZXY } from '../tilecoord.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n */\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nvar UrlTile = /** @class */ (function (_super) {\n    __extends(UrlTile, _super);\n    /**\n     * @param {Options} options Image tile options.\n     */\n    function UrlTile(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tilePixelRatio: options.tilePixelRatio,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.generateTileUrlFunction_ =\n            _this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction = options.tileLoadFunction;\n        if (options.tileUrlFunction) {\n            _this.tileUrlFunction = options.tileUrlFunction;\n        }\n        /**\n         * @protected\n         * @type {!Array<string>|null}\n         */\n        _this.urls = null;\n        if (options.urls) {\n            _this.setUrls(options.urls);\n        }\n        else if (options.url) {\n            _this.setUrl(options.url);\n        }\n        /**\n         * @private\n         * @type {!Object<string, boolean>}\n         */\n        _this.tileLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * Return the tile load function of the source.\n     * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n     * @api\n     */\n    UrlTile.prototype.getTileLoadFunction = function () {\n        return this.tileLoadFunction;\n    };\n    /**\n     * Return the tile URL function of the source.\n     * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n     * @api\n     */\n    UrlTile.prototype.getTileUrlFunction = function () {\n        return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n            ? this.tileUrlFunction.bind(this)\n            : this.tileUrlFunction;\n    };\n    /**\n     * Return the URLs used for this source.\n     * When a tileUrlFunction is used instead of url or urls,\n     * null will be returned.\n     * @return {!Array<string>|null} URLs.\n     * @api\n     */\n    UrlTile.prototype.getUrls = function () {\n        return this.urls;\n    };\n    /**\n     * Handle tile change events.\n     * @param {import(\"../events/Event.js\").default} event Event.\n     * @protected\n     */\n    UrlTile.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n        var uid = getUid(tile);\n        var tileState = tile.getState();\n        var type;\n        if (tileState == TileState.LOADING) {\n            this.tileLoadingKeys_[uid] = true;\n            type = TileEventType.TILELOADSTART;\n        }\n        else if (uid in this.tileLoadingKeys_) {\n            delete this.tileLoadingKeys_[uid];\n            type =\n                tileState == TileState.ERROR\n                    ? TileEventType.TILELOADERROR\n                    : tileState == TileState.LOADED\n                        ? TileEventType.TILELOADEND\n                        : undefined;\n        }\n        if (type != undefined) {\n            this.dispatchEvent(new TileSourceEvent(type, tile));\n        }\n    };\n    /**\n     * Set the tile load function of the source.\n     * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @api\n     */\n    UrlTile.prototype.setTileLoadFunction = function (tileLoadFunction) {\n        this.tileCache.clear();\n        this.tileLoadFunction = tileLoadFunction;\n        this.changed();\n    };\n    /**\n     * Set the tile URL function of the source.\n     * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n     * @param {string} [key] Optional new tile key for the source.\n     * @api\n     */\n    UrlTile.prototype.setTileUrlFunction = function (tileUrlFunction, key) {\n        this.tileUrlFunction = tileUrlFunction;\n        this.tileCache.pruneExceptNewestZ();\n        if (typeof key !== 'undefined') {\n            this.setKey(key);\n        }\n        else {\n            this.changed();\n        }\n    };\n    /**\n     * Set the URL to use for requests.\n     * @param {string} url URL.\n     * @api\n     */\n    UrlTile.prototype.setUrl = function (url) {\n        var urls = expandUrl(url);\n        this.urls = urls;\n        this.setUrls(urls);\n    };\n    /**\n     * Set the URLs to use for requests.\n     * @param {Array<string>} urls URLs.\n     * @api\n     */\n    UrlTile.prototype.setUrls = function (urls) {\n        this.urls = urls;\n        var key = urls.join('\\n');\n        if (this.generateTileUrlFunction_) {\n            this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n        }\n        else {\n            this.setKey(key);\n        }\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    UrlTile.prototype.tileUrlFunction = function (tileCoord, pixelRatio, projection) {\n        return undefined;\n    };\n    /**\n     * Marks a tile coord as being used, without triggering a load.\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     */\n    UrlTile.prototype.useTile = function (z, x, y) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            this.tileCache.get(tileCoordKey);\n        }\n    };\n    return UrlTile;\n}(TileSource));\nexport default UrlTile;\n//# sourceMappingURL=UrlTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\nimport { IMAGE_SMOOTHING_DISABLED } from './common.js';\nimport { equivalent, get as getProjection } from '../proj.js';\nimport { getKey, getKeyZXY } from '../tilecoord.js';\nimport { getForProjection as getTileGridForProjection } from '../tilegrid.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar TileImage = /** @class */ (function (_super) {\n    __extends(TileImage, _super);\n    /**\n     * @param {!Options} options Image tile options.\n     */\n    function TileImage(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tileLoadFunction: options.tileLoadFunction\n                ? options.tileLoadFunction\n                : defaultTileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n        /**\n         * @protected\n         * @type {?string}\n         */\n        _this.crossOrigin =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @protected\n         * @type {typeof ImageTile}\n         */\n        _this.tileClass =\n            options.tileClass !== undefined ? options.tileClass : ImageTile;\n        /**\n         * @protected\n         * @type {!Object<string, TileCache>}\n         */\n        _this.tileCacheForProjection = {};\n        /**\n         * @protected\n         * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n         */\n        _this.tileGridForProjection = {};\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n        /**\n         * @private\n         * @type {object|undefined}\n         */\n        _this.contextOptions_ =\n            options.imageSmoothing === false ? IMAGE_SMOOTHING_DISABLED : undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderReprojectionEdges_ = false;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    TileImage.prototype.canExpireCache = function () {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.canExpireCache.call(this);\n        }\n        if (this.tileCache.canExpireCache()) {\n            return true;\n        }\n        else {\n            for (var key in this.tileCacheForProjection) {\n                if (this.tileCacheForProjection[key].canExpireCache()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    TileImage.prototype.expireCache = function (projection, usedTiles) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            _super.prototype.expireCache.call(this, projection, usedTiles);\n            return;\n        }\n        var usedTileCache = this.getTileCacheForProjection(projection);\n        this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n        for (var id in this.tileCacheForProjection) {\n            var tileCache = this.tileCacheForProjection[id];\n            tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n        }\n    };\n    /**\n     * @return {Object|undefined} Context options.\n     */\n    TileImage.prototype.getContextOptions = function () {\n        return this.contextOptions_;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {number} Gutter.\n     */\n    TileImage.prototype.getGutterForProjection = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() &&\n            projection &&\n            !equivalent(this.getProjection(), projection)) {\n            return 0;\n        }\n        else {\n            return this.getGutter();\n        }\n    };\n    /**\n     * @return {number} Gutter.\n     */\n    TileImage.prototype.getGutter = function () {\n        return 0;\n    };\n    /**\n     * Return the key to be used for all tiles in the source.\n     * @return {string} The key for all tiles.\n     * @protected\n     */\n    TileImage.prototype.getKey = function () {\n        return (_super.prototype.getKey.call(this) +\n            (this.contextOptions_ ? '\\n' + JSON.stringify(this.contextOptions_) : ''));\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} Opaque.\n     */\n    TileImage.prototype.getOpaque = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() &&\n            projection &&\n            !equivalent(this.getProjection(), projection)) {\n            return false;\n        }\n        else {\n            return _super.prototype.getOpaque.call(this, projection);\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     */\n    TileImage.prototype.getTileGridForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileGridForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n            return this.tileGrid;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileGridForProjection)) {\n                this.tileGridForProjection[projKey] =\n                    getTileGridForProjection(projection);\n            }\n            return this.tileGridForProjection[projKey];\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../TileCache.js\").default} Tile cache.\n     */\n    TileImage.prototype.getTileCacheForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileCacheForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (!thisProj || equivalent(thisProj, projection)) {\n            return this.tileCache;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileCacheForProjection)) {\n                this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n            }\n            return this.tileCacheForProjection[projKey];\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {string} key The key set on the tile.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @private\n     */\n    TileImage.prototype.createTile_ = function (z, x, y, pixelRatio, projection, key) {\n        var tileCoord = [z, x, y];\n        var urlTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var tileUrl = urlTileCoord\n            ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n            : undefined;\n        var tile = new this.tileClass(tileCoord, tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY, tileUrl !== undefined ? tileUrl : '', this.crossOrigin, this.tileLoadFunction, this.tileOptions);\n        tile.key = key;\n        tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n        return tile;\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     */\n    TileImage.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        var sourceProjection = this.getProjection();\n        if (!ENABLE_RASTER_REPROJECTION ||\n            !sourceProjection ||\n            !projection ||\n            equivalent(sourceProjection, projection)) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n        }\n        else {\n            var cache = this.getTileCacheForProjection(projection);\n            var tileCoord = [z, x, y];\n            var tile = void 0;\n            var tileCoordKey = getKey(tileCoord);\n            if (cache.containsKey(tileCoordKey)) {\n                tile = cache.get(tileCoordKey);\n            }\n            var key = this.getKey();\n            if (tile && tile.key == key) {\n                return tile;\n            }\n            else {\n                var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n                var targetTileGrid = this.getTileGridForProjection(projection);\n                var wrappedTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n                var newTile = new ReprojTile(sourceProjection, sourceTileGrid, projection, targetTileGrid, tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio), this.getGutter(), function (z, x, y, pixelRatio) {\n                    return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n                }.bind(this), this.reprojectionErrorThreshold_, this.renderReprojectionEdges_, this.contextOptions_);\n                newTile.key = key;\n                if (tile) {\n                    newTile.interimTile = tile;\n                    newTile.refreshInterimChain();\n                    cache.replace(tileCoordKey, newTile);\n                }\n                else {\n                    cache.set(tileCoordKey, newTile);\n                }\n                return newTile;\n            }\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @protected\n     */\n    TileImage.prototype.getTileInternal = function (z, x, y, pixelRatio, projection) {\n        var tile = null;\n        var tileCoordKey = getKeyZXY(z, x, y);\n        var key = this.getKey();\n        if (!this.tileCache.containsKey(tileCoordKey)) {\n            tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n            this.tileCache.set(tileCoordKey, tile);\n        }\n        else {\n            tile = this.tileCache.get(tileCoordKey);\n            if (tile.key != key) {\n                // The source's params changed. If the tile has an interim tile and if we\n                // can use it then we use it. Otherwise we create a new tile.  In both\n                // cases we attempt to assign an interim tile to the new tile.\n                var interimTile = tile;\n                tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n                //make the new tile the head of the list,\n                if (interimTile.getState() == TileState.IDLE) {\n                    //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n                    tile.interimTile = interimTile.interimTile;\n                }\n                else {\n                    tile.interimTile = interimTile;\n                }\n                tile.refreshInterimChain();\n                this.tileCache.replace(tileCoordKey, tile);\n            }\n        }\n        return tile;\n    };\n    /**\n     * Sets whether to render reprojection edges or not (usually for debugging).\n     * @param {boolean} render Render the edges.\n     * @api\n     */\n    TileImage.prototype.setRenderReprojectionEdges = function (render) {\n        if (!ENABLE_RASTER_REPROJECTION ||\n            this.renderReprojectionEdges_ == render) {\n            return;\n        }\n        this.renderReprojectionEdges_ = render;\n        for (var id in this.tileCacheForProjection) {\n            this.tileCacheForProjection[id].clear();\n        }\n        this.changed();\n    };\n    /**\n     * Sets the tile grid to use when reprojecting the tiles to the given\n     * projection instead of the default tile grid for the projection.\n     *\n     * This can be useful when the default tile grid cannot be created\n     * (e.g. projection has no extent defined) or\n     * for optimization reasons (custom tile size, resolutions, ...).\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n     * @api\n     */\n    TileImage.prototype.setTileGridForProjection = function (projection, tilegrid) {\n        if (ENABLE_RASTER_REPROJECTION) {\n            var proj = getProjection(projection);\n            if (proj) {\n                var projKey = getUid(proj);\n                if (!(projKey in this.tileGridForProjection)) {\n                    this.tileGridForProjection[projKey] = tilegrid;\n                }\n            }\n        }\n    };\n    return TileImage;\n}(UrlTile));\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n    /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n        src;\n}\nexport default TileImage;\n//# sourceMappingURL=TileImage.js.map","/**\n * @module ol/source/XYZ\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport TileImage from './TileImage.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nvar XYZ = /** @class */ (function (_super) {\n    __extends(XYZ, _super);\n    /**\n     * @param {Options} [opt_options] XYZ options.\n     */\n    function XYZ(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var projection = options.projection !== undefined ? options.projection : 'EPSG:3857';\n        var tileGrid = options.tileGrid !== undefined\n            ? options.tileGrid\n            : createXYZ({\n                extent: extentFromProjection(projection),\n                maxResolution: options.maxResolution,\n                maxZoom: options.maxZoom,\n                minZoom: options.minZoom,\n                tileSize: options.tileSize,\n            });\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            imageSmoothing: options.imageSmoothing,\n            opaque: options.opaque,\n            projection: projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileGrid: tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n        return _this;\n    }\n    return XYZ;\n}(TileImage));\nexport default XYZ;\n//# sourceMappingURL=XYZ.js.map","/**\n * @module ol/source/OSM\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport XYZ from './XYZ.js';\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport var ATTRIBUTION = '&#169; ' +\n    '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n    'contributors.';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nvar OSM = /** @class */ (function (_super) {\n    __extends(OSM, _super);\n    /**\n     * @param {Options} [opt_options] Open Street Map options.\n     */\n    function OSM(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var attributions;\n        if (options.attributions !== undefined) {\n            attributions = options.attributions;\n        }\n        else {\n            attributions = [ATTRIBUTION];\n        }\n        var crossOrigin = options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n        var url = options.url !== undefined\n            ? options.url\n            : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n        _this = _super.call(this, {\n            attributions: attributions,\n            attributionsCollapsible: false,\n            cacheSize: options.cacheSize,\n            crossOrigin: crossOrigin,\n            imageSmoothing: options.imageSmoothing,\n            maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n            opaque: options.opaque !== undefined ? options.opaque : true,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileLoadFunction: options.tileLoadFunction,\n            transition: options.transition,\n            url: url,\n            wrapX: options.wrapX,\n            zDirection: options.zDirection,\n        }) || this;\n        return _this;\n    }\n    return OSM;\n}(XYZ));\nexport default OSM;\n//# sourceMappingURL=OSM.js.map","/**\n * @module ol/source/Stamen\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport XYZ from './XYZ.js';\nimport { ATTRIBUTION as OSM_ATTRIBUTION } from './OSM.js';\n/**\n * @const\n * @type {Array<string>}\n */\nvar ATTRIBUTIONS = [\n    'Map tiles by <a href=\"https://stamen.com/\" target=\"_blank\">Stamen Design</a>, ' +\n        'under <a href=\"https://creativecommons.org/licenses/by/3.0/\" target=\"_blank\">CC BY' +\n        ' 3.0</a>.',\n    OSM_ATTRIBUTION,\n];\n/**\n * @type {Object<string, {extension: string, opaque: boolean}>}\n */\nvar LayerConfig = {\n    'terrain': {\n        extension: 'jpg',\n        opaque: true,\n    },\n    'terrain-background': {\n        extension: 'jpg',\n        opaque: true,\n    },\n    'terrain-labels': {\n        extension: 'png',\n        opaque: false,\n    },\n    'terrain-lines': {\n        extension: 'png',\n        opaque: false,\n    },\n    'toner-background': {\n        extension: 'png',\n        opaque: true,\n    },\n    'toner': {\n        extension: 'png',\n        opaque: true,\n    },\n    'toner-hybrid': {\n        extension: 'png',\n        opaque: false,\n    },\n    'toner-labels': {\n        extension: 'png',\n        opaque: false,\n    },\n    'toner-lines': {\n        extension: 'png',\n        opaque: false,\n    },\n    'toner-lite': {\n        extension: 'png',\n        opaque: true,\n    },\n    'watercolor': {\n        extension: 'jpg',\n        opaque: true,\n    },\n};\n/**\n * @type {Object<string, {minZoom: number, maxZoom: number}>}\n */\nvar ProviderConfig = {\n    'terrain': {\n        minZoom: 0,\n        maxZoom: 18,\n    },\n    'toner': {\n        minZoom: 0,\n        maxZoom: 20,\n    },\n    'watercolor': {\n        minZoom: 0,\n        maxZoom: 18,\n    },\n};\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {string} layer Layer name.\n * @property {number} [minZoom] Minimum zoom.\n * @property {number} [maxZoom] Maximum zoom.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n/**\n * @classdesc\n * Layer source for the Stamen tile server.\n * @api\n */\nvar Stamen = /** @class */ (function (_super) {\n    __extends(Stamen, _super);\n    /**\n     * @param {Options} options Stamen options.\n     */\n    function Stamen(options) {\n        var _this = this;\n        var i = options.layer.indexOf('-');\n        var provider = i == -1 ? options.layer : options.layer.slice(0, i);\n        var providerConfig = ProviderConfig[provider];\n        var layerConfig = LayerConfig[options.layer];\n        var url = options.url !== undefined\n            ? options.url\n            : 'https://stamen-tiles-{a-d}.a.ssl.fastly.net/' +\n                options.layer +\n                '/{z}/{x}/{y}.' +\n                layerConfig.extension;\n        _this = _super.call(this, {\n            attributions: ATTRIBUTIONS,\n            cacheSize: options.cacheSize,\n            crossOrigin: 'anonymous',\n            imageSmoothing: options.imageSmoothing,\n            maxZoom: options.maxZoom != undefined ? options.maxZoom : providerConfig.maxZoom,\n            minZoom: options.minZoom != undefined ? options.minZoom : providerConfig.minZoom,\n            opaque: layerConfig.opaque,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileLoadFunction: options.tileLoadFunction,\n            transition: options.transition,\n            url: url,\n            wrapX: options.wrapX,\n            zDirection: options.zDirection,\n        }) || this;\n        return _this;\n    }\n    return Stamen;\n}(XYZ));\nexport default Stamen;\n//# sourceMappingURL=Stamen.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport { apply as applyTransform, compose as composeTransform, makeInverse, } from '../../transform.js';\nimport { assign } from '../../obj.js';\nimport { createEmpty, equals, getIntersection, getTopLeft, } from '../../extent.js';\nimport { cssOpacity } from '../../css.js';\nimport { fromUserExtent } from '../../proj.js';\nimport { getUid } from '../../util.js';\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { toString as toTransformString } from '../../transform.js';\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nvar CanvasTileLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasTileLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n     */\n    function CanvasTileLayerRenderer(tileLayer) {\n        var _this = _super.call(this, tileLayer) || this;\n        /**\n         * Rendered extent has changed since the previous `renderFrame()` call\n         * @type {boolean}\n         */\n        _this.extentChanged = true;\n        /**\n         * @private\n         * @type {?import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedPixelRatio;\n        /**\n         * @protected\n         * @type {import(\"../../proj/Projection.js\").default}\n         */\n        _this.renderedProjection = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedRevision;\n        /**\n         * @protected\n         * @type {!Array<import(\"../../Tile.js\").default>}\n         */\n        _this.renderedTiles = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.newTiles_ = false;\n        /**\n         * @protected\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.tmpExtent = createEmpty();\n        /**\n         * @private\n         * @type {import(\"../../TileRange.js\").default}\n         */\n        _this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {boolean} Tile is drawable.\n     */\n    CanvasTileLayerRenderer.prototype.isDrawableTile = function (tile) {\n        var tileLayer = this.getLayer();\n        var tileState = tile.getState();\n        var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n        return (tileState == TileState.LOADED ||\n            tileState == TileState.EMPTY ||\n            (tileState == TileState.ERROR && !useInterimTilesOnError));\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {!import(\"../../Tile.js\").default} Tile.\n     */\n    CanvasTileLayerRenderer.prototype.getTile = function (z, x, y, frameState) {\n        var pixelRatio = frameState.pixelRatio;\n        var projection = frameState.viewState.projection;\n        var tileLayer = this.getLayer();\n        var tileSource = tileLayer.getSource();\n        var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n        if (tile.getState() == TileState.ERROR) {\n            if (!tileLayer.getUseInterimTilesOnError()) {\n                // When useInterimTilesOnError is false, we consider the error tile as loaded.\n                tile.setState(TileState.LOADED);\n            }\n            else if (tileLayer.getPreload() > 0) {\n                // Preloaded tiles for lower resolutions might have finished loading.\n                this.newTiles_ = true;\n            }\n        }\n        if (!this.isDrawableTile(tile)) {\n            tile = tile.getInterimTile();\n        }\n        return tile;\n    };\n    /**\n     * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @param {number} zoom Zoom level.\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {boolean|void} If `false`, the tile will not be considered loaded.\n     */\n    CanvasTileLayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (this.isDrawableTile(tile)) {\n            return _super.prototype.loadedTileCallback.call(this, tiles, zoom, tile);\n        }\n        return false;\n    };\n    /**\n     * Determine whether render should be called.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    CanvasTileLayerRenderer.prototype.prepareFrame = function (frameState) {\n        return !!this.getLayer().getSource();\n    };\n    /**\n     * Render the layer.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    CanvasTileLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var viewResolution = viewState.resolution;\n        var viewCenter = viewState.center;\n        var rotation = viewState.rotation;\n        var pixelRatio = frameState.pixelRatio;\n        var tileLayer = this.getLayer();\n        var tileSource = tileLayer.getSource();\n        var sourceRevision = tileSource.getRevision();\n        var tileGrid = tileSource.getTileGridForProjection(projection);\n        var z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n        var tileResolution = tileGrid.getResolution(z);\n        var extent = frameState.extent;\n        var layerExtent = layerState.extent && fromUserExtent(layerState.extent, projection);\n        if (layerExtent) {\n            extent = getIntersection(extent, fromUserExtent(layerState.extent, projection));\n        }\n        var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n        // desired dimensions of the canvas in pixels\n        var width = Math.round(frameState.size[0] * tilePixelRatio);\n        var height = Math.round(frameState.size[1] * tilePixelRatio);\n        if (rotation) {\n            var size = Math.round(Math.sqrt(width * width + height * height));\n            width = size;\n            height = size;\n        }\n        var dx = (tileResolution * width) / 2 / tilePixelRatio;\n        var dy = (tileResolution * height) / 2 / tilePixelRatio;\n        var canvasExtent = [\n            viewCenter[0] - dx,\n            viewCenter[1] - dy,\n            viewCenter[0] + dx,\n            viewCenter[1] + dy,\n        ];\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n        /**\n         * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n         */\n        var tilesToDrawByZ = {};\n        tilesToDrawByZ[z] = {};\n        var findLoadedTiles = this.createLoadedTileFinder(tileSource, projection, tilesToDrawByZ);\n        var tmpExtent = this.tmpExtent;\n        var tmpTileRange = this.tmpTileRange_;\n        this.newTiles_ = false;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                var tile = this.getTile(z, x, y, frameState);\n                if (this.isDrawableTile(tile)) {\n                    var uid = getUid(this);\n                    if (tile.getState() == TileState.LOADED) {\n                        tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n                        var inTransition = tile.inTransition(uid);\n                        if (!this.newTiles_ &&\n                            (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n                            this.newTiles_ = true;\n                        }\n                    }\n                    if (tile.getAlpha(uid, frameState.time) === 1) {\n                        // don't look for alt tiles if alpha is 1\n                        continue;\n                    }\n                }\n                var childTileRange = tileGrid.getTileCoordChildTileRange(tile.tileCoord, tmpTileRange, tmpExtent);\n                var covered = false;\n                if (childTileRange) {\n                    covered = findLoadedTiles(z + 1, childTileRange);\n                }\n                if (!covered) {\n                    tileGrid.forEachTileCoordParentTileRange(tile.tileCoord, findLoadedTiles, tmpTileRange, tmpExtent);\n                }\n            }\n        }\n        var canvasScale = tileResolution / viewResolution;\n        // set forward and inverse pixel transforms\n        composeTransform(this.pixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / tilePixelRatio, 1 / tilePixelRatio, rotation, -width / 2, -height / 2);\n        var canvasTransform = toTransformString(this.pixelTransform);\n        this.useContainer(target, canvasTransform, layerState.opacity);\n        var context = this.context;\n        var canvas = context.canvas;\n        makeInverse(this.inversePixelTransform, this.pixelTransform);\n        // set scale transform for calculating tile positions on the canvas\n        composeTransform(this.tempTransform, width / 2, height / 2, canvasScale, canvasScale, 0, -width / 2, -height / 2);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n        }\n        else if (!this.containerReused) {\n            context.clearRect(0, 0, width, height);\n        }\n        if (layerExtent) {\n            this.clipUnrotated(context, frameState, layerExtent);\n        }\n        assign(context, tileSource.getContextOptions());\n        this.preRender(context, frameState);\n        this.renderedTiles.length = 0;\n        /** @type {Array<number>} */\n        var zs = Object.keys(tilesToDrawByZ).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        var clips, clipZs, currentClip;\n        if (layerState.opacity === 1 &&\n            (!this.containerReused ||\n                tileSource.getOpaque(frameState.viewState.projection))) {\n            zs = zs.reverse();\n        }\n        else {\n            clips = [];\n            clipZs = [];\n        }\n        for (var i = zs.length - 1; i >= 0; --i) {\n            var currentZ = zs[i];\n            var currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n            var currentResolution = tileGrid.getResolution(currentZ);\n            var currentScale = currentResolution / tileResolution;\n            var dx_1 = currentTilePixelSize[0] * currentScale * canvasScale;\n            var dy_1 = currentTilePixelSize[1] * currentScale * canvasScale;\n            var originTileCoord = tileGrid.getTileCoordForCoordAndZ(getTopLeft(canvasExtent), currentZ);\n            var originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n            var origin_1 = applyTransform(this.tempTransform, [\n                (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n                    tileResolution,\n                (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n                    tileResolution,\n            ]);\n            var tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n            var tilesToDraw = tilesToDrawByZ[currentZ];\n            for (var tileCoordKey in tilesToDraw) {\n                var tile = /** @type {import(\"../../ImageTile.js\").default} */ (tilesToDraw[tileCoordKey]);\n                var tileCoord = tile.tileCoord;\n                // Calculate integer positions and sizes so that tiles align\n                var xIndex = originTileCoord[1] - tileCoord[1];\n                var nextX = Math.round(origin_1[0] - (xIndex - 1) * dx_1);\n                var yIndex = originTileCoord[2] - tileCoord[2];\n                var nextY = Math.round(origin_1[1] - (yIndex - 1) * dy_1);\n                var x = Math.round(origin_1[0] - xIndex * dx_1);\n                var y = Math.round(origin_1[1] - yIndex * dy_1);\n                var w = nextX - x;\n                var h = nextY - y;\n                var transition = z === currentZ;\n                var inTransition = transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n                if (!inTransition) {\n                    if (clips) {\n                        // Clip mask for regions in this tile that already filled by a higher z tile\n                        context.save();\n                        currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n                        for (var i_1 = 0, ii = clips.length; i_1 < ii; ++i_1) {\n                            if (z !== currentZ && currentZ < clipZs[i_1]) {\n                                var clip = clips[i_1];\n                                context.beginPath();\n                                // counter-clockwise (outer ring) for current tile\n                                context.moveTo(currentClip[0], currentClip[1]);\n                                context.lineTo(currentClip[2], currentClip[3]);\n                                context.lineTo(currentClip[4], currentClip[5]);\n                                context.lineTo(currentClip[6], currentClip[7]);\n                                // clockwise (inner ring) for higher z tile\n                                context.moveTo(clip[6], clip[7]);\n                                context.lineTo(clip[4], clip[5]);\n                                context.lineTo(clip[2], clip[3]);\n                                context.lineTo(clip[0], clip[1]);\n                                context.clip();\n                            }\n                        }\n                        clips.push(currentClip);\n                        clipZs.push(currentZ);\n                    }\n                    else {\n                        context.clearRect(x, y, w, h);\n                    }\n                }\n                this.drawTileImage(tile, frameState, x, y, w, h, tileGutter, transition);\n                if (clips && !inTransition) {\n                    context.restore();\n                    this.renderedTiles.unshift(tile);\n                }\n                else {\n                    this.renderedTiles.push(tile);\n                }\n                this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n            }\n        }\n        this.renderedRevision = sourceRevision;\n        this.renderedResolution = tileResolution;\n        this.extentChanged =\n            !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n        this.renderedExtent_ = canvasExtent;\n        this.renderedPixelRatio = pixelRatio;\n        this.renderedProjection = projection;\n        this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio, projection, extent, z, tileLayer.getPreload());\n        this.scheduleExpireCache(frameState, tileSource);\n        this.postRender(context, frameState);\n        if (layerState.extent) {\n            context.restore();\n        }\n        if (canvasTransform !== canvas.style.transform) {\n            canvas.style.transform = canvasTransform;\n        }\n        var opacity = cssOpacity(layerState.opacity);\n        var container = this.container;\n        if (opacity !== container.style.opacity) {\n            container.style.opacity = opacity;\n        }\n        return this.container;\n    };\n    /**\n     * @param {import(\"../../ImageTile.js\").default} tile Tile.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} x Left of the tile.\n     * @param {number} y Top of the tile.\n     * @param {number} w Width of the tile.\n     * @param {number} h Height of the tile.\n     * @param {number} gutter Tile gutter.\n     * @param {boolean} transition Apply an alpha transition.\n     */\n    CanvasTileLayerRenderer.prototype.drawTileImage = function (tile, frameState, x, y, w, h, gutter, transition) {\n        var image = this.getTileImage(tile);\n        if (!image) {\n            return;\n        }\n        var uid = getUid(this);\n        var alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n        var alphaChanged = alpha !== this.context.globalAlpha;\n        if (alphaChanged) {\n            this.context.save();\n            this.context.globalAlpha = alpha;\n        }\n        this.context.drawImage(image, gutter, gutter, image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n        if (alphaChanged) {\n            this.context.restore();\n        }\n        if (alpha !== 1) {\n            frameState.animate = true;\n        }\n        else if (transition) {\n            tile.endTransition(uid);\n        }\n    };\n    /**\n     * @return {HTMLCanvasElement} Image\n     */\n    CanvasTileLayerRenderer.prototype.getImage = function () {\n        var context = this.context;\n        return context ? context.canvas : null;\n    };\n    /**\n     * Get the image from a tile.\n     * @param {import(\"../../ImageTile.js\").default} tile Tile.\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.getTileImage = function (tile) {\n        return tile.getImage();\n    };\n    /**\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.scheduleExpireCache = function (frameState, tileSource) {\n        if (tileSource.canExpireCache()) {\n            /**\n             * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n             * @param {import(\"../../PluggableMap.js\").default} map Map.\n             * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n             */\n            var postRenderFunction = function (tileSource, map, frameState) {\n                var tileSourceKey = getUid(tileSource);\n                if (tileSourceKey in frameState.usedTiles) {\n                    tileSource.expireCache(frameState.viewState.projection, frameState.usedTiles[tileSourceKey]);\n                }\n            }.bind(null, tileSource);\n            frameState.postRenderFunctions.push(\n            /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction));\n        }\n    };\n    /**\n     * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import('../../Tile.js').default} tile Tile.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.updateUsedTiles = function (usedTiles, tileSource, tile) {\n        // FIXME should we use tilesToDrawByZ instead?\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in usedTiles)) {\n            usedTiles[tileSourceKey] = {};\n        }\n        usedTiles[tileSourceKey][tile.getKey()] = true;\n    };\n    /**\n     * Manage tile pyramid.\n     * This function performs a number of functions related to the tiles at the\n     * current zoom and lower zoom levels:\n     * - registers idle tiles in frameState.wantedTiles so that they are not\n     *   discarded by the tile queue\n     * - enqueues missing tiles\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {number} currentZ Current Z.\n     * @param {number} preload Load low resolution tiles up to 'preload' levels.\n     * @param {function(import(\"../../Tile.js\").default):void} [opt_tileCallback] Tile callback.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.manageTilePyramid = function (frameState, tileSource, tileGrid, pixelRatio, projection, extent, currentZ, preload, opt_tileCallback) {\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in frameState.wantedTiles)) {\n            frameState.wantedTiles[tileSourceKey] = {};\n        }\n        var wantedTiles = frameState.wantedTiles[tileSourceKey];\n        var tileQueue = frameState.tileQueue;\n        var minZoom = tileGrid.getMinZoom();\n        var tileCount = 0;\n        var tile, tileRange, tileResolution, x, y, z;\n        for (z = minZoom; z <= currentZ; ++z) {\n            tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n            tileResolution = tileGrid.getResolution(z);\n            for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n                for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                    if (currentZ - z <= preload) {\n                        ++tileCount;\n                        tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n                        if (tile.getState() == TileState.IDLE) {\n                            wantedTiles[tile.getKey()] = true;\n                            if (!tileQueue.isKeyQueued(tile.getKey())) {\n                                tileQueue.enqueue([\n                                    tile,\n                                    tileSourceKey,\n                                    tileGrid.getTileCoordCenter(tile.tileCoord),\n                                    tileResolution,\n                                ]);\n                            }\n                        }\n                        if (opt_tileCallback !== undefined) {\n                            opt_tileCallback(tile);\n                        }\n                    }\n                    else {\n                        tileSource.useTile(z, x, y, projection);\n                    }\n                }\n            }\n        }\n        tileSource.updateCacheSize(tileCount, projection);\n    };\n    return CanvasTileLayerRenderer;\n}(CanvasLayerRenderer));\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\nexport default CanvasTileLayerRenderer;\n//# sourceMappingURL=TileLayer.js.map","/**\n * @module ol/layer/TileProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    PRELOAD: 'preload',\n    USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n//# sourceMappingURL=TileProperty.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport { assign } from '../obj.js';\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source'|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   'change:source'|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {Layer<TileSourceType>}\n * @api\n */\nvar BaseTileLayer = /** @class */ (function (_super) {\n    __extends(BaseTileLayer, _super);\n    /**\n     * @param {Options<TileSourceType>} [opt_options] Tile layer options.\n     */\n    function BaseTileLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({}, options);\n        delete baseOptions.preload;\n        delete baseOptions.useInterimTilesOnError;\n        _this = _super.call(this, baseOptions) || this;\n        /***\n         * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {BaseTileLayerOnSignature<void>}\n         */\n        _this.un;\n        _this.setPreload(options.preload !== undefined ? options.preload : 0);\n        _this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined\n            ? options.useInterimTilesOnError\n            : true);\n        return _this;\n    }\n    /**\n     * Return the level as number to which we will preload tiles up to.\n     * @return {number} The level to preload tiles up to.\n     * @observable\n     * @api\n     */\n    BaseTileLayer.prototype.getPreload = function () {\n        return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n    };\n    /**\n     * Set the level as number to which we will preload tiles up to.\n     * @param {number} preload The level to preload tiles up to.\n     * @observable\n     * @api\n     */\n    BaseTileLayer.prototype.setPreload = function (preload) {\n        this.set(TileProperty.PRELOAD, preload);\n    };\n    /**\n     * Whether we use interim tiles on error.\n     * @return {boolean} Use interim tiles on error.\n     * @observable\n     * @api\n     */\n    BaseTileLayer.prototype.getUseInterimTilesOnError = function () {\n        return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n    };\n    /**\n     * Set whether we use interim tiles on error.\n     * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n     * @observable\n     * @api\n     */\n    BaseTileLayer.prototype.setUseInterimTilesOnError = function (useInterimTilesOnError) {\n        this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n    };\n    return BaseTileLayer;\n}(Layer));\nexport default BaseTileLayer;\n//# sourceMappingURL=BaseTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {BaseTileLayer<TileSourceType>}\n * @api\n */\nvar TileLayer = /** @class */ (function (_super) {\n    __extends(TileLayer, _super);\n    /**\n     * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [opt_options] Tile layer options.\n     */\n    function TileLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    TileLayer.prototype.createRenderer = function () {\n        return new CanvasTileLayerRenderer(this);\n    };\n    return TileLayer;\n}(BaseTileLayer));\nexport default TileLayer;\n//# sourceMappingURL=Tile.js.map"],"names":["arrayEquals","__extends","Event","Disposable","isEmpty","Observable","AssertionError","BaseObject","METERS_PER_UNIT","createOrUpdate","intersects","RADIUS","EXTENT","Units","Projection","PROJECTIONS","addProj","addTransformFunc","getProj","get","getTransformFunc","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","createTransform","getProjection","composeTransform","extend","Geometry","getKey","ImageBase","iconImageCache","getIconImage","ImageStyle","scale","squaredDx","squaredDistance","forEachSegment","SimpleGeometry","LineString","Point","linearRingArea","reverseCoordinates","linearRingsArea","LinearRing","linearRingssArea","linearRingssCenter","MultiPoint","Polygon","RegularShape","Fill","Stroke","CircleStyle","equivalentProjection","Icon","Text","Style","Feature","XMLFeature","GeometryCollection","MultiLineString","MultiPolygon","SourceState","BaseLayer","wrapX","RenderEvent","MapRenderer","Property","Collection","MapEvent","MapBrowserEvent","Target","PriorityQueue","rotateCoordinate","addCoordinate","polygonFromExtent","centerNone","rotationNone","coordinatesEqual","TileQueue","View","applyTransform","MapBrowserEventHandler","equals","LayerGroup","Control","Zoom","Rotate","Attribution","Interaction","all","centroid","centroidFromPointers","scaleCoordinate","PointerInteraction","RenderBox","DragBox","RBush","toStyleFunction","Layer","VectorContext","CanvasBuilder","LayerRenderer","transformSetFromArray","BuilderType","Executor","CanvasImmediateRenderer","transformToString","intersectsExtent","defaultRenderOrder","wrapCoordinateX","wrapExtentX","getRenderTolerance","getSquaredRenderTolerance","ExecutorGroup","CanvasLayerRenderer","CanvasVectorLayerRenderer","BaseVectorLayer","RBush_","allStrategy","Source","Kinetic","DragRotate","DoubleClickZoom","DragPan","PinchRotate","PinchZoom","KeyboardPan","KeyboardZoom","MouseWheelZoom","DragZoom","defaultControls","defaultInteractions","CompositeMapRenderer","PluggableMap","Tile","Triangulation","renderReprojected","LRUCache","TileRange","createOrUpdateTileRange","createOrUpdateTileCoord","TileGrid","TileCache","getTileGridForProjection","scaleSize","tileCoordHash","TileSource","ImageTile","ReprojTile","UrlTile","TileImage","XYZ","OSM_ATTRIBUTION","toTransformString","CanvasTileLayerRenderer","BaseTileLayer"],"mappings":"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"}